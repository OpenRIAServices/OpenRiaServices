<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ComplexType_InstancesCannotBeShared" xml:space="preserve">
    <value>ComplexObject instances cannot be shared.</value>
  </data>
  <data name="CyclicReferenceError" xml:space="preserve">
    <value>Reference cycle detected. Entity or ComplexObject members cannot contain cyclic references.</value>
  </data>
  <data name="DomainClientFactory_ServiceContractMustBeAnInterface" xml:space="preserve">
    <value>Service contract must be an interface</value>
  </data>
  <data name="DomainClientFactory_UnableToCreateAbsoluteUri" xml:space="preserve">
    <value>Could not use ServerBaseUri and the serviceUri to create an absolute Uri.</value>
  </data>
  <data name="DomainClient_EmptyChangeSet" xml:space="preserve">
    <value>The submitted change-set was empty.</value>
  </data>
  <data name="DomainClient_EntityTypesAlreadyInitialized" xml:space="preserve">
    <value>EntityTypes has already been initialized</value>
  </data>
  <data name="DomainClient_InvocationNameCannotBeNullOrEmpty" xml:space="preserve">
    <value>Custom method invocation name cannot be null or empty.</value>
  </data>
  <data name="DomainContext_DomainClientFactoryNotSet" xml:space="preserve">
    <value>Cannot create a DomainClient since DomainContext.DomainClientFactory is null, please set it to a DomainClientFactory such as WebDomainClientFactory from 'OpenRiaServices.Client.Web'.</value>
  </data>
  <data name="DomainContext_EntityContainerCannotBeNull" xml:space="preserve">
    <value>The EntityContainer for a DomainContext cannot be null.</value>
  </data>
  <data name="DomainContext_InvalidEntityQueryDomainClient" xml:space="preserve">
    <value>The specified EntityQuery '{0}' cannot be loaded because it was not created by this DomainContext.</value>
  </data>
  <data name="DomainContext_InvokeOperationFailed" xml:space="preserve">
    <value>Invoke operation '{0}' failed. {1}</value>
  </data>
  <data name="DomainContext_InvokeOperationFailed_Validation" xml:space="preserve">
    <value>Invoke operation '{0}' failed validation.  Please inspect ValidationErrors on the operation for details.</value>
  </data>
  <data name="DomainContext_LoadOperationFailed" xml:space="preserve">
    <value>Load operation failed for query '{0}'. {1}</value>
  </data>
  <data name="DomainContext_LoadOperationFailed_Validation" xml:space="preserve">
    <value>Load operation for query '{0}' failed validation.  Please inspect ValidationErrors on the operation for details.</value>
  </data>
  <data name="DomainContext_NamedUpdateMethodDoesNotExist" xml:space="preserve">
    <value>The custom update method '{0}' called on entity '{1}' was called through the '{2}' DomainContext, which is not the correct DomainContext. The method may be available through another DomainContext.</value>
  </data>
  <data name="DomainContext_SubmitAlreadyInProgress" xml:space="preserve">
    <value>A SubmitChanges operation is already in progress on this DomainContext.</value>
  </data>
  <data name="DomainContext_SubmitOperationFailed" xml:space="preserve">
    <value>Submit operation failed. {0}</value>
  </data>
  <data name="DomainContext_SubmitOperationFailed_Conflicts" xml:space="preserve">
    <value>Submit operation failed due to conflicts. Please inspect Entity.EntityConflict for each entity in EntitiesInError for more information.</value>
  </data>
  <data name="DomainContext_SubmitOperationFailed_Validation" xml:space="preserve">
    <value>Submit operation failed validation. Please inspect Entity.ValidationErrors for each entity in EntitiesInError for more information.</value>
  </data>
  <data name="EntityCollection_ModificationNotAllowedForExternalReference" xml:space="preserve">
    <value>Modification of an EntityCollection whose source is external is not permitted.</value>
  </data>
  <data name="EntityConflict_CannotResolveDeleteConflict" xml:space="preserve">
    <value>Resolve cannot be called for delete conflicts.</value>
  </data>
  <data name="EntityConflict_IsDeleteConflict" xml:space="preserve">
    <value>PropertyNames are not available for delete conflicts.</value>
  </data>
  <data name="EntityContainerDoesntContainEntityType" xml:space="preserve">
    <value>This EntityContainer does not contain an EntitySet of type '{0}'. If the type is external to this EntityContainer, please make sure you’ve called AddReference to establish the external link.</value>
  </data>
  <data name="EntityContainer_CannotRetrieveEntitySetForDerivedEntity" xml:space="preserve">
    <value>Cannot retrieve an EntitySet for the derived entity type '{0}'. Use EntityContainer.GetEntitySet(Type) to get the EntitySet for the base entity type '{1}'.</value>
  </data>
  <data name="EntityContainer_CrossContainerAttach" xml:space="preserve">
    <value>Entity '{0}' cannot be attached to this EntityContainer because it is already attached to another EntityContainer.</value>
  </data>
  <data name="EntityContainer_EntitySetAlreadyExists" xml:space="preserve">
    <value>The EntitySet for Entity '{0}' already exists in the EntityContainer.</value>
  </data>
  <data name="EntityKey_CannotBeNull" xml:space="preserve">
    <value>An EntityKey value cannot be null</value>
  </data>
  <data name="EntityKey_EmptyKeyMembers" xml:space="preserve">
    <value>To create an EntityKey, you must specify at least one key value.</value>
  </data>
  <data name="EntityKey_NullIdentity" xml:space="preserve">
    <value>Entity '{0}' cannot be added to cache because it doesn't have a valid identity.</value>
  </data>
  <data name="EntityQuery_NotComposable" xml:space="preserve">
    <value>EntityQuery for Type '{0}' targeting query operation '{1}' does not support query composition.</value>
  </data>
  <data name="EntitySet_DuplicateIdentity" xml:space="preserve">
    <value>An entity with the same identity already exists in this EntitySet.</value>
  </data>
  <data name="EntitySet_EntityAlreadyAttached" xml:space="preserve">
    <value>The entity being added is already attached.</value>
  </data>
  <data name="EntitySet_EntityAlreadyInSet" xml:space="preserve">
    <value>The specified entity is already contained in an EntitySet</value>
  </data>
  <data name="EntitySet_EntityNotInSet" xml:space="preserve">
    <value>The specified entity is not contained in this EntitySet.</value>
  </data>
  <data name="EntitySet_UnsupportedOperation" xml:space="preserve">
    <value>This EntitySet of Type '{0}' does not support the '{1}' operation.</value>
  </data>
  <data name="EntitySet_Wrong_Type" xml:space="preserve">
    <value>EntitySet of Type '{0}' cannot contain instances of Type '{1}'.</value>
  </data>
  <data name="Entity_CantReparentComposedChild" xml:space="preserve">
    <value>Composed child entity '{0}' cannot be assigned to a new parent.</value>
  </data>
  <data name="Entity_ChildCannotBeItsParent" xml:space="preserve">
    <value>A compositional association on an entity cannot contain the entity itself.</value>
  </data>
  <data name="Entity_InvokeOnDeletedEntity" xml:space="preserve">
    <value>A custom method cannot be invoked on an entity in a Deleted EntityState.</value>
  </data>
  <data name="Entity_InvokeOnDetachedEntity" xml:space="preserve">
    <value>A custom method cannot be invoked on a Detached entity.</value>
  </data>
  <data name="Entity_InvokeWhileSubmitting" xml:space="preserve">
    <value>A custom method cannot be invoked on an entity that is part of a change-set that is in the process of being submitted.</value>
  </data>
  <data name="Entity_KeyMembersCannotBeChanged" xml:space="preserve">
    <value>The value of key member '{0}' on an instance of an entity of type '{1}' has changed. Entity key members cannot be changed.</value>
  </data>
  <data name="Entity_NoEntityActionWithName" xml:space="preserve">
    <value>Can not find any entity action named '{0}'</value>
  </data>
  <data name="Entity_Not_In_Collection" xml:space="preserve">
    <value>The specified entity is not a member of this collection</value>
  </data>
  <data name="Entity_Property_NotChangeTracked" xml:space="preserve">
    <value>The property '{0}' on entity type '{1}' is not a change tracked data member.</value>
  </data>
  <data name="Entity_ReadOnly" xml:space="preserve">
    <value>This entity is currently read-only. One of the following conditions exist: a custom method has been invoked, a submit operation is in progress, or edit operations are not supported for the entity type.</value>
  </data>
  <data name="Entity_UncommittedChanges" xml:space="preserve">
    <value>Entity '{0}' is currently being edited and has uncommitted changes. A call to BeginEdit must be followed by a call to EndEdit or CancelEdit before changes can be submitted.</value>
  </data>
  <data name="Entity_UndoInvokeOnlyForInvokedActions" xml:space="preserve">
    <value>Can only undo currently invoked actions</value>
  </data>
  <data name="Entity_UndoInvokeWhileSubmitting" xml:space="preserve">
    <value>A custom method cannot be undone on an entity that is part of a change-set that is in the process of being submitted.</value>
  </data>
  <data name="IsNotSupported" xml:space="preserve">
    <value>'{0}' is not supported.</value>
  </data>
  <data name="MemberMustBeAssociation" xml:space="preserve">
    <value>Member '{0}' must be marked with AssociationAttribute</value>
  </data>
  <data name="MustBeAnEntity" xml:space="preserve">
    <value>'{0}' must be an Entity.</value>
  </data>
  <data name="Operation_HasErrorMustBeTrue" xml:space="preserve">
    <value>MarkErrorAsHandled can only be called if HasError is true.</value>
  </data>
  <data name="Parameter_NullOrEmpty" xml:space="preserve">
    <value>The parameter '{0}' cannot be null or empty.</value>
  </data>
  <data name="Property_Does_Not_Exist" xml:space="preserve">
    <value>Type '{0}' does not contain a public property named '{1}'.</value>
  </data>
  <data name="Property_Is_ReadOnly" xml:space="preserve">
    <value>The '{0}' property is read only.</value>
  </data>
  <data name="Type_Not_Entity" xml:space="preserve">
    <value>Type '{0}' does not derive from Entity</value>
  </data>
  <data name="ValidationUtilities_AmbiguousMatch" xml:space="preserve">
    <value>Ambiguous match for method '{0}'.</value>
  </data>
  <data name="ValidationUtilities_ContextInstance_CannotBeNull" xml:space="preserve">
    <value>ValidationContext.ObjectInstance cannot be null.</value>
  </data>
  <data name="ValidationUtilities_MethodNotFound" xml:space="preserve">
    <value>Method '{0}.{1}({3})' could not be found. Parameter count: {2}.</value>
  </data>
  <data name="ValidationUtilities_MethodNotFound_ZeroParams" xml:space="preserve">
    <value>Method '{0}.{1}' accepting zero parameters could not be found.</value>
  </data>
  <data name="WebDomainClient_OperationDoesNotExist" xml:space="preserve">
    <value>Operation '{0}' does not exist.</value>
  </data>
</root>