using System;
using System.Collections.Generic;
using System.Globalization;
using System.Linq.Dynamic;
using System.Linq.Expressions;
using System.Text;
using Microsoft.VisualStudio.TestTools.UnitTesting;

namespace OpenRiaServices.DomainServices.Hosting.Test.Data
{
    [TestClass]
    public class DynamicQueryableTests
    {
        [TestMethod]
        public void IsMemberAccessAllowedReturnsFalseForUnsupportedTypes()
        {
            Assert.IsFalse(IsConstructorAllowed(typeof(String), typeof(Char*)));
            Assert.IsFalse(IsConstructorAllowed(typeof(String), typeof(Char*), typeof(Int32), typeof(Int32)));
            Assert.IsFalse(IsConstructorAllowed(typeof(String), typeof(SByte*)));
            Assert.IsFalse(IsConstructorAllowed(typeof(String), typeof(SByte*), typeof(Int32), typeof(Int32)));
            Assert.IsFalse(IsConstructorAllowed(typeof(String), typeof(SByte*), typeof(Int32), typeof(Int32), typeof(Encoding)));
            Assert.IsFalse(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Calendar)));
            Assert.IsFalse(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Calendar)));
            Assert.IsFalse(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Calendar)));
            Assert.IsFalse(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Calendar), typeof(DateTimeKind)));
            Assert.IsFalse(IsConstructorAllowed(typeof(DateTimeOffset), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Calendar), typeof(TimeSpan)));
        }

        [TestMethod]
        public void IsMemberAccessAllowedReturnsTrueForSupportedTypes()
        {
            Assert.IsTrue(IsConstructorAllowed(typeof(String), typeof(Char[]), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(String), typeof(Char[])));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTime), typeof(Int64)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTime), typeof(Int64), typeof(DateTimeKind)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(DateTimeKind)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTime), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(DateTimeKind)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTimeOffset), typeof(Int64), typeof(TimeSpan)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTimeOffset), typeof(DateTime)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTimeOffset), typeof(DateTime), typeof(TimeSpan)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTimeOffset), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(TimeSpan)));
            Assert.IsTrue(IsConstructorAllowed(typeof(DateTimeOffset), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(TimeSpan)));
            Assert.IsTrue(IsConstructorAllowed(typeof(TimeSpan), typeof(Int64)));
            Assert.IsTrue(IsConstructorAllowed(typeof(TimeSpan), typeof(Int32), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(TimeSpan), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(TimeSpan), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Guid), typeof(Byte[])));
            Assert.IsTrue(IsConstructorAllowed(typeof(Guid), typeof(UInt32), typeof(UInt16), typeof(UInt16), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Guid), typeof(Int32), typeof(Int16), typeof(Int16), typeof(Byte[])));
            Assert.IsTrue(IsConstructorAllowed(typeof(Guid), typeof(Int32), typeof(Int16), typeof(Int16), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte), typeof(Byte)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Guid), typeof(String)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Uri), typeof(String)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Uri), typeof(String), typeof(Boolean)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Uri), typeof(String), typeof(UriKind)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Uri), typeof(Uri), typeof(String)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Uri), typeof(Uri), typeof(String), typeof(Boolean)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Uri), typeof(Uri), typeof(Uri)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(Int32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(UInt32)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(Int64)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(UInt64)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(Single)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(Double)));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(Int32[])));
            Assert.IsTrue(IsConstructorAllowed(typeof(Decimal), typeof(Int32), typeof(Int32), typeof(Int32), typeof(Boolean), typeof(Byte)));
        }

        [TestMethod]
        public void IsMemberAccessAllowedReturnsFalseForDangerousStringMethods()
        {
            Assert.IsFalse(IsMethodAllowed(typeof(String), "CopyTo", typeof(Int32), typeof(Char[]), typeof(Int32), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "ToCharArray"));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "ToCharArray", typeof(Int32), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Split", typeof(Char[])));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Split", typeof(Char[]), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Split", typeof(Char[]), typeof(StringSplitOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Split", typeof(Char[]), typeof(Int32), typeof(StringSplitOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Split", typeof(String[]), typeof(StringSplitOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Split", typeof(String[]), typeof(Int32), typeof(StringSplitOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "IsNormalized"));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "IsNormalized", typeof(NormalizationForm)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Normalize"));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Normalize", typeof(NormalizationForm)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "CompareTo", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "PadLeft", typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "PadLeft", typeof(Int32), typeof(Char)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "PadRight", typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "PadRight", typeof(Int32), typeof(Char)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Clone"));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "Equals", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "GetDateTimeFormats"));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "GetDateTimeFormats", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "GetDateTimeFormats", typeof(Char)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "GetDateTimeFormats", typeof(Char), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Guid), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Byte), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(SByte), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Byte), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int16), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int16), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt16), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt16), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Double), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Double), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Decimal), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Decimal), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt32), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(SByte), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int32), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int32), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt32), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "GetType"));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "EndsWith", typeof(String), typeof(Boolean), typeof(CultureInfo)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "StartsWith", typeof(String), typeof(Boolean), typeof(CultureInfo)));
        }

        [TestMethod]
        public void IsMemberAccessAllowedReturnsTrueForAllowedMethods()
        {
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "GetHashCode"));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "Equals", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "CompareTo", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ToString"));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Equals", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Equals", typeof(String), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Insert", typeof(Int32), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "GetHashCode"));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Substring", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Substring", typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Trim", Type.EmptyTypes));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Trim", typeof(Char[])));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "TrimStart", typeof(Char[])));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "TrimEnd", typeof(Char[])));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "CompareTo", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Contains", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "EndsWith", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "EndsWith", typeof(String), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(Char), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(Char), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOfAny", typeof(Char[])));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOfAny", typeof(Char[]), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOfAny", typeof(Char[]), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(String), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(String), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(String), typeof(Int32), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IndexOf", typeof(String), typeof(Int32), typeof(Int32), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(Char), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(Char), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOfAny", typeof(Char[])));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOfAny", typeof(Char[]), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOfAny", typeof(Char[]), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(String), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(String), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(String), typeof(Int32), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "LastIndexOf", typeof(String), typeof(Int32), typeof(Int32), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Replace", typeof(Char), typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Replace", typeof(String), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "StartsWith", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "StartsWith", typeof(String), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "ToLower"));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "ToLowerInvariant"));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "ToUpper"));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "ToUpperInvariant"));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "ToString"));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "get_Chars", typeof(Int32)));

            Assert.IsTrue(IsMethodAllowed(typeof(String), "Concat", typeof(String), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Concat", typeof(String), typeof(String), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Concat", typeof(String), typeof(String), typeof(String), typeof(String)));
        }

        [TestMethod]
        public void IsMemberAccessAllowedReturnsFalseForUnsupportedStaticMethods()
        {
            Assert.IsFalse(IsMethodAllowed(typeof(Boolean), "Equals", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Boolean), "CompareTo", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "Equals", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "CompareTo", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "ToString", typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Copy", typeof(String)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Intern", typeof(String)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "IsInterned", typeof(String)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "TryParse", typeof(String), typeof(Char).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "ToUpper", typeof(Char), typeof(CultureInfo)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "ToLower", typeof(Char), typeof(CultureInfo)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Join", typeof(String), typeof(String[])));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Join", typeof(String), typeof(Object[])));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Join", typeof(String), typeof(String[]), typeof(Int32), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(String), typeof(CultureInfo), typeof(CompareOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(String), typeof(Boolean), typeof(CultureInfo)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(Int32), typeof(String), typeof(Int32), typeof(Int32), typeof(Boolean), typeof(CultureInfo)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(Int32), typeof(String), typeof(Int32), typeof(Int32), typeof(CultureInfo), typeof(CompareOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Format", typeof(String), typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Format", typeof(String), typeof(Object), typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Format", typeof(String), typeof(Object), typeof(Object), typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Format", typeof(String), typeof(Object[])));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Format", typeof(IFormatProvider), typeof(String), typeof(Object[])));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Concat", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Concat", typeof(Object), typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Concat", typeof(Object), typeof(Object), typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Concat", typeof(Object), typeof(Object), typeof(Object), typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Concat", typeof(Object[])));
            Assert.IsFalse(IsMethodAllowed(typeof(String), "Concat", typeof(String[])));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "Parse", typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "ParseExact", typeof(String), typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "ParseExact", typeof(String), typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "ParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider), typeof(DateTimeStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "TryParse", typeof(String), typeof(DateTime).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "TryParse", typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles), typeof(DateTime).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "TryParseExact", typeof(String), typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles), typeof(DateTime).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTime), "TryParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider), typeof(DateTimeStyles), typeof(DateTime).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "Parse", typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "ParseExact", typeof(String), typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "ParseExact", typeof(String), typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "ParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider), typeof(DateTimeStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "TryParse", typeof(String), typeof(DateTimeOffset).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "TryParse", typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles), typeof(DateTimeOffset).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "TryParseExact", typeof(String), typeof(String), typeof(IFormatProvider), typeof(DateTimeStyles), typeof(DateTimeOffset).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(DateTimeOffset), "TryParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider), typeof(DateTimeStyles), typeof(DateTimeOffset).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "ParseExact", typeof(String), typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "ParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "ParseExact", typeof(String), typeof(String), typeof(IFormatProvider), typeof(TimeSpanStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "ParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider), typeof(TimeSpanStyles)));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "TryParse", typeof(String), typeof(TimeSpan).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "TryParse", typeof(String), typeof(IFormatProvider), typeof(TimeSpan).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "TryParseExact", typeof(String), typeof(String), typeof(IFormatProvider), typeof(TimeSpan).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "TryParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider), typeof(TimeSpan).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "TryParseExact", typeof(String), typeof(String), typeof(IFormatProvider), typeof(TimeSpanStyles), typeof(TimeSpan).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(TimeSpan), "TryParseExact", typeof(String), typeof(String[]), typeof(IFormatProvider), typeof(TimeSpanStyles), typeof(TimeSpan).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Guid), "TryParse", typeof(String), typeof(Guid).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Guid), "TryParseExact", typeof(String), typeof(String), typeof(Guid).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Uri), "HexUnescape", typeof(String), typeof(Int32).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Uri), "TryCreate", typeof(String), typeof(UriKind), typeof(Uri).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Uri), "TryCreate", typeof(Uri), typeof(String), typeof(Uri).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Uri), "TryCreate", typeof(Uri), typeof(Uri), typeof(Uri).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(SByte), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(SByte), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(SByte), "TryParse", typeof(String), typeof(SByte).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(SByte), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(SByte).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Byte), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Byte), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Byte), "TryParse", typeof(String), typeof(Byte).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Byte), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(Byte).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Int16), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int16), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int16), "TryParse", typeof(String), typeof(Int16).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Int16), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(Int16).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt16), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt16), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt16), "TryParse", typeof(String), typeof(UInt16).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt16), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(UInt16).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Int32), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int32), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int32), "TryParse", typeof(String), typeof(Int32).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Int32), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(Int32).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt32), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt32), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt32), "TryParse", typeof(String), typeof(UInt32).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt32), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(UInt32).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Int64), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int64), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Int64), "TryParse", typeof(String), typeof(Int64).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Int64), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(Int64).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt64), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt64), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt64), "TryParse", typeof(String), typeof(UInt64).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(UInt64), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(UInt64).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Single), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Single), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Single), "TryParse", typeof(String), typeof(Single).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Single), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(Single).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Double), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Double), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Double), "TryParse", typeof(String), typeof(Double).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Double), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(Double).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Decimal), "Parse", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Decimal), "Parse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Decimal), "TryParse", typeof(String), typeof(Decimal).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Decimal), "TryParse", typeof(String), typeof(NumberStyles), typeof(IFormatProvider), typeof(Decimal).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Math), "DivRem", typeof(Int32), typeof(Int32), typeof(Int32).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Math), "DivRem", typeof(Int64), typeof(Int64), typeof(Int64).MakeByRefType()));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "GetTypeCode", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "IsDBNull", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ChangeType", typeof(Object), typeof(TypeCode)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ChangeType", typeof(Object), typeof(TypeCode), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ChangeType", typeof(Object), typeof(Type)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ChangeType", typeof(Object), typeof(Type), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToChar", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToByte", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Object)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Object), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Boolean), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Char), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(SByte), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Byte), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int16), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(UInt16), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int32), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(UInt32), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int64), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(UInt64), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Single), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Double), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(Decimal), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(DateTime), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToString", typeof(String), typeof(IFormatProvider)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBase64String", typeof(Byte[])));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBase64String", typeof(Byte[]), typeof(Base64FormattingOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBase64String", typeof(Byte[]), typeof(Int32), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBase64String", typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Base64FormattingOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBase64CharArray", typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Char[]), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "ToBase64CharArray", typeof(Byte[]), typeof(Int32), typeof(Int32), typeof(Char[]), typeof(Int32), typeof(Base64FormattingOptions)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "FromBase64CharArray", typeof(Char[]), typeof(Int32), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "GetUnicodeCategory", typeof(Char)));
            Assert.IsFalse(IsMethodAllowed(typeof(Char), "GetUnicodeCategory", typeof(String), typeof(Int32)));
            Assert.IsFalse(IsMethodAllowed(typeof(Uri), "CheckHostName", typeof(String)));
            Assert.IsFalse(IsMethodAllowed(typeof(Decimal), "GetBits", typeof(Decimal)));
            Assert.IsFalse(IsMethodAllowed(typeof(Convert), "FromBase64String", typeof(String)));
        }

        [TestMethod]
        public void IsMemberAccessAllowedReturnsTrueForStaticMethods()
        {
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ToString", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsDigit", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLetter", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsWhiteSpace", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsUpper", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLower", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsPunctuation", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLetterOrDigit", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ToUpper", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ToUpperInvariant", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ToLower", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ToLowerInvariant", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsControl", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsControl", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsDigit", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLetter", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLetterOrDigit", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLower", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsNumber", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsNumber", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsPunctuation", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSeparator", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSeparator", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSurrogate", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSurrogate", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSymbol", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSymbol", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsUpper", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsWhiteSpace", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "GetNumericValue", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "GetNumericValue", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsHighSurrogate", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsHighSurrogate", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLowSurrogate", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsLowSurrogate", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSurrogatePair", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "IsSurrogatePair", typeof(Char), typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ConvertFromUtf32", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ConvertToUtf32", typeof(Char), typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Char), "ConvertToUtf32", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Equals", typeof(String), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Equals", typeof(String), typeof(String), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IsNullOrEmpty", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "IsNullOrWhiteSpace", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(String), typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(String), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(Int32), typeof(String), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(Int32), typeof(String), typeof(Int32), typeof(Int32), typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "Compare", typeof(String), typeof(Int32), typeof(String), typeof(Int32), typeof(Int32), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "CompareOrdinal", typeof(String), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(String), "CompareOrdinal", typeof(String), typeof(Int32), typeof(String), typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "Compare", typeof(DateTime), typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "DaysInMonth", typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "Equals", typeof(DateTime), typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "FromBinary", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "FromFileTime", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "FromFileTimeUtc", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "FromOADate", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "SpecifyKind", typeof(DateTime), typeof(DateTimeKind)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "IsLeapYear", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTime), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTimeOffset), "Compare", typeof(DateTimeOffset), typeof(DateTimeOffset)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTimeOffset), "Equals", typeof(DateTimeOffset), typeof(DateTimeOffset)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTimeOffset), "FromFileTime", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(DateTimeOffset), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "Compare", typeof(TimeSpan), typeof(TimeSpan)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "FromDays", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "Equals", typeof(TimeSpan), typeof(TimeSpan)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "FromHours", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "FromMilliseconds", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "FromMinutes", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "FromSeconds", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "FromTicks", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(TimeSpan), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Guid), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Guid), "ParseExact", typeof(String), typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Guid), "NewGuid"));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "CheckSchemeName", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "FromHex", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "HexEscape", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "IsHexDigit", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "IsHexEncoding", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "IsWellFormedUriString", typeof(String), typeof(UriKind)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "Compare", typeof(Uri), typeof(Uri), typeof(UriComponents), typeof(UriFormat), typeof(StringComparison)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "UnescapeDataString", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "EscapeUriString", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Uri), "EscapeDataString", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(SByte), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(SByte), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Byte), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Byte), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Int16), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Int16), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Boolean), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(UInt16), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(UInt16), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Int32), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Int32), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(UInt32), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(UInt32), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Int64), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Int64), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(UInt64), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(UInt64), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Single), "IsInfinity", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Single), "IsNaN", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Single), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Single), "IsPositiveInfinity", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Single), "IsNegativeInfinity", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Single), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Double), "IsInfinity", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Double), "IsPositiveInfinity", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Double), "IsNegativeInfinity", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Double), "IsNaN", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Double), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Double), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToOACurrency", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "FromOACurrency", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Add", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Ceiling", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Compare", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Divide", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Equals", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Floor", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Parse", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Parse", typeof(String), typeof(NumberStyles)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Remainder", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Multiply", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Negate", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Round", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Round", typeof(Decimal), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Round", typeof(Decimal), typeof(MidpointRounding)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Round", typeof(Decimal), typeof(Int32), typeof(MidpointRounding)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Subtract", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToByte", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToSByte", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToInt16", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToDouble", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToInt32", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToInt64", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToUInt16", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToUInt32", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToUInt64", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "ToSingle", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Decimal), "Truncate", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Acos", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Asin", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Atan", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Atan2", typeof(Double), typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Ceiling", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Ceiling", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Cos", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Cosh", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Floor", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Floor", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sin", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Tan", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sinh", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Tanh", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Double), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Double), typeof(MidpointRounding)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Double), typeof(Int32), typeof(MidpointRounding)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Decimal), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Decimal), typeof(MidpointRounding)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Round", typeof(Decimal), typeof(Int32), typeof(MidpointRounding)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Truncate", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Truncate", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sqrt", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Log", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Log10", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Exp", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Pow", typeof(Double), typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "IEEERemainder", typeof(Double), typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Abs", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Abs", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Abs", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Abs", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Abs", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Abs", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Abs", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(SByte), typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(Byte), typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(Int16), typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(UInt16), typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(UInt32), typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(Int64), typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(UInt64), typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(Single), typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(Double), typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Max", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(SByte), typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(Byte), typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(Int16), typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(UInt16), typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(UInt32), typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(Int64), typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(UInt64), typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(Single), typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(Double), typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Min", typeof(Decimal), typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Log", typeof(Double), typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sign", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sign", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sign", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sign", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sign", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sign", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "Sign", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Math), "BigMul", typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToBoolean", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToChar", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSingle", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDouble", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDecimal", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToDateTime", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Boolean)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Char)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(SByte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Byte)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(UInt16)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(UInt32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(UInt64)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Single)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Double)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Decimal)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(DateTime)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(String)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToByte", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToSByte", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt16", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt16", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt32", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt32", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToInt64", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToUInt64", typeof(String), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Byte), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int16), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int32), typeof(Int32)));
            Assert.IsTrue(IsMethodAllowed(typeof(Convert), "ToString", typeof(Int64), typeof(Int32)));
        }

        private static bool IsConstructorAllowed(Type type, params Type[] constructorParams)
        {
            List<Expression> expressions = new List<Expression>();

            foreach(Type param in constructorParams)
            {
                expressions.Add(Expression.Constant(null));
            }

            return ExpressionParser.IsMemberAccessAllowed(type.GetConstructor(constructorParams), expressions.ToArray());
        }

        private static bool IsMethodAllowed(Type type, string methodName, params Type[] args)
        {
            List<Expression> expressions = new List<Expression>();

            foreach (Type param in args)
            {
                expressions.Add(Expression.Constant(null));
            }

            return ExpressionParser.IsMemberAccessAllowed(type.GetMethod(methodName, args), expressions.ToArray());
        }
    }
}
