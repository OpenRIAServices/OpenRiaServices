'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Compare Binary
Option Infer On
Option Strict On
Option Explicit On

Imports CustomNamespace
Imports OpenRiaServices
Imports OpenRiaServices.Client
Imports OpenRiaServices.Client.Authentication
Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.ComponentModel.DataAnnotations
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.ServiceModel
Imports System.Threading
Imports System.Threading.Tasks
Imports System.Xml.Linq
Imports TestDomainServices
Imports TestDomainServices.Saleãƒ†

Namespace TestDomainServices
    
    'The following attributes were not generated:
    '
    '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'. If you would like the attribute to be generated, make sure the assembly containing the attribute is referenced on the client.
    '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references a method 'IsObjectValid' on type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'.
    '<CustomValidationAttribute(GetType(TestDomainServices.ServerOnlyValidator), "IsObjectValid")> _
    '
    ''' <summary>
    ''' The 'A' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class A
        Inherits Entity
        
        Private _b As EntityRef(Of B)
        
        Private _bid1 As Integer
        
        Private _bid2 As Integer
        
        Private _id As Integer
        
        Private _readOnlyData_NoReadOnlyAttribute As String
        
        Private _readOnlyData_NoSetter As String
        
        Private _readOnlyData_WithSetter As String
        
        Private _requiredString As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnBID1Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnBID1Changed()
        End Sub
        Private Partial Sub OnBID2Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnBID2Changed()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnReadOnlyData_NoReadOnlyAttributeChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnReadOnlyData_NoReadOnlyAttributeChanged()
        End Sub
        Private Partial Sub OnReadOnlyData_NoSetterChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnReadOnlyData_NoSetterChanged()
        End Sub
        Private Partial Sub OnReadOnlyData_WithSetterChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnReadOnlyData_WithSetterChanged()
        End Sub
        Private Partial Sub OnRequiredStringChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnRequiredStringChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="A"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="B"/> entity.
        ''' </summary>
        <Association("A_B", "BID1, BID2", "ID1, ID2", IsForeignKey:=true)>  _
        Public Property B() As B
            Get
                If (Me._b Is Nothing) Then
                    Me._b = New EntityRef(Of B)(Me, "B", AddressOf Me.FilterB)
                End If
                Return Me._b.Entity
            End Get
            Set
                Dim previous As B = Me.B
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("B", value)
                    If (Not (value) Is Nothing) Then
                        Me.BID1 = value.ID1
                        Me.BID2 = value.ID2
                    Else
                        Me.BID1 = CType(Nothing, Integer)
                        Me.BID2 = CType(Nothing, Integer)
                    End If
                    Me._b.Entity = value
                    Me.RaisePropertyChanged("B")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'BID1' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property BID1() As Integer
            Get
                Return Me._bid1
            End Get
            Set
                If ((Me._bid1 = value)  _
                            = false) Then
                    Me.OnBID1Changing(value)
                    Me.RaiseDataMemberChanging("BID1")
                    Me.ValidateProperty("BID1", value)
                    Me._bid1 = value
                    Me.RaiseDataMemberChanged("BID1")
                    Me.OnBID1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'BID2' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property BID2() As Integer
            Get
                Return Me._bid2
            End Get
            Set
                If ((Me._bid2 = value)  _
                            = false) Then
                    Me.OnBID2Changing(value)
                    Me.RaiseDataMemberChanging("BID2")
                    Me.ValidateProperty("BID2", value)
                    Me._bid2 = value
                    Me.RaiseDataMemberChanged("BID2")
                    Me.OnBID2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyData_NoReadOnlyAttribute' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         [ReadOnly](true)>  _
        Public Property ReadOnlyData_NoReadOnlyAttribute() As String
            Get
                Return Me._readOnlyData_NoReadOnlyAttribute
            End Get
            Set
                If (String.Equals(Me._readOnlyData_NoReadOnlyAttribute, value) = false) Then
                    Me.OnReadOnlyData_NoReadOnlyAttributeChanging(value)
                    Me.ValidateProperty("ReadOnlyData_NoReadOnlyAttribute", value)
                    Me._readOnlyData_NoReadOnlyAttribute = value
                    Me.RaisePropertyChanged("ReadOnlyData_NoReadOnlyAttribute")
                    Me.OnReadOnlyData_NoReadOnlyAttributeChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyData_NoSetter' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         [ReadOnly](true)>  _
        Public Property ReadOnlyData_NoSetter() As String
            Get
                Return Me._readOnlyData_NoSetter
            End Get
            Set
                If (String.Equals(Me._readOnlyData_NoSetter, value) = false) Then
                    Me.OnReadOnlyData_NoSetterChanging(value)
                    Me.ValidateProperty("ReadOnlyData_NoSetter", value)
                    Me._readOnlyData_NoSetter = value
                    Me.RaisePropertyChanged("ReadOnlyData_NoSetter")
                    Me.OnReadOnlyData_NoSetterChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyData_WithSetter' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false)>  _
        Public Property ReadOnlyData_WithSetter() As String
            Get
                Return Me._readOnlyData_WithSetter
            End Get
            Set
                If (String.Equals(Me._readOnlyData_WithSetter, value) = false) Then
                    Me.OnReadOnlyData_WithSetterChanging(value)
                    Me.ValidateProperty("ReadOnlyData_WithSetter", value)
                    Me._readOnlyData_WithSetter = value
                    Me.RaisePropertyChanged("ReadOnlyData_WithSetter")
                    Me.OnReadOnlyData_WithSetterChanged
                End If
            End Set
        End Property
        
        'The following attributes were not generated:
        '
        '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'. If you would like the attribute to be generated, make sure the assembly containing the attribute is referenced on the client.
        '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references a method 'IsStringValid' on type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'.
        '<CustomValidationAttribute(GetType(TestDomainServices.ServerOnlyValidator), "IsStringValid")> _
        '
        '- The validation attribute 'System.ComponentModel.DataAnnotations.StringLengthAttribute' contains ErrorMessageResourceName='NonExistentProperty' which was not found on declared ErrorMessageResourceType 'System.String'.
        '<StringLengthAttribute(1234, ErrorMessageResourceName := "NonExistentProperty", ErrorMessageResourceType := GetType(System.String))> _
        '
        ''' <summary>
        ''' Gets or sets the 'RequiredString' value.
        ''' </summary>
        <Custom(),  _
         DataMember(),  _
         Editable(true),  _
         Required()>  _
        Public Property RequiredString() As String
            Get
                Return Me._requiredString
            End Get
            Set
                If (String.Equals(Me._requiredString, value) = false) Then
                    Me.OnRequiredStringChanging(value)
                    Me.RaiseDataMemberChanging("RequiredString")
                    Me.ValidateProperty("RequiredString", value)
                    Me._requiredString = value
                    Me.RaiseDataMemberChanged("RequiredString")
                    Me.OnRequiredStringChanged
                End If
            End Set
        End Property
        
        Private Function FilterB(ByVal entity As B) As Boolean
            Return (Object.Equals(entity.ID1, Me.BID1) AndAlso Object.Equals(entity.ID2, Me.BID2))
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'B' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class B
        Inherits Entity
        
        Private _cs As EntityCollection(Of C)
        
        Private _id1 As Integer
        
        Private _id2 As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnID1Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnID1Changed()
        End Sub
        Private Partial Sub OnID2Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnID2Changed()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="B"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets the collection of associated <see cref="C"/> entity instances.
        ''' </summary>
        <Association("B_C", "ID1, ID2", "BID1, BID2"),  _
         Display(Description:="Cs")>  _
        Public ReadOnly Property Cs() As EntityCollection(Of C)
            Get
                If (Me._cs Is Nothing) Then
                    Me._cs = New EntityCollection(Of C)(Me, "Cs", AddressOf Me.FilterCs)
                End If
                Return Me._cs
            End Get
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID1' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID1() As Integer
            Get
                Return Me._id1
            End Get
            Set
                If ((Me._id1 = value)  _
                            = false) Then
                    Me.OnID1Changing(value)
                    Me.ValidateProperty("ID1", value)
                    Me._id1 = value
                    Me.RaisePropertyChanged("ID1")
                    Me.OnID1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID2' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID2() As Integer
            Get
                Return Me._id2
            End Get
            Set
                If ((Me._id2 = value)  _
                            = false) Then
                    Me.OnID2Changing(value)
                    Me.ValidateProperty("ID2", value)
                    Me._id2 = value
                    Me.RaisePropertyChanged("ID2")
                    Me.OnID2Changed
                End If
            End Set
        End Property
        
        Private Function FilterCs(ByVal entity As C) As Boolean
            Return (Object.Equals(entity.BID1, Me.ID1) AndAlso Object.Equals(entity.BID2, Me.ID2))
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return EntityKey.Create(Me._id1, Me._id2)
        End Function
    End Class
    
    ''' <summary>
    ''' The 'C' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class C
        Inherits Entity
        
        Private _bid1 As Integer
        
        Private _bid2 As Integer
        
        Private _d_Ref1 As EntityRef(Of D)
        
        Private _d_Ref2 As EntityRef(Of D)
        
        Private _did_Ref1 As Integer
        
        Private _did_Ref2 As Integer
        
        Private _id As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnBID1Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnBID1Changed()
        End Sub
        Private Partial Sub OnBID2Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnBID2Changed()
        End Sub
        Private Partial Sub OnDID_Ref1Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnDID_Ref1Changed()
        End Sub
        Private Partial Sub OnDID_Ref2Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnDID_Ref2Changed()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="C"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'BID1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property BID1() As Integer
            Get
                Return Me._bid1
            End Get
            Set
                If ((Me._bid1 = value)  _
                            = false) Then
                    Me.OnBID1Changing(value)
                    Me.RaiseDataMemberChanging("BID1")
                    Me.ValidateProperty("BID1", value)
                    Me._bid1 = value
                    Me.RaiseDataMemberChanged("BID1")
                    Me.OnBID1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'BID2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property BID2() As Integer
            Get
                Return Me._bid2
            End Get
            Set
                If ((Me._bid2 = value)  _
                            = false) Then
                    Me.OnBID2Changing(value)
                    Me.RaiseDataMemberChanging("BID2")
                    Me.ValidateProperty("BID2", value)
                    Me._bid2 = value
                    Me.RaiseDataMemberChanged("BID2")
                    Me.OnBID2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="D"/> entity.
        ''' </summary>
        <Association("C_D_Ref1", "DID_Ref1", "ID", IsForeignKey:=true),  _
         Display(Description:="D_Ref1")>  _
        Public Property D_Ref1() As D
            Get
                If (Me._d_Ref1 Is Nothing) Then
                    Me._d_Ref1 = New EntityRef(Of D)(Me, "D_Ref1", AddressOf Me.FilterD_Ref1)
                End If
                Return Me._d_Ref1.Entity
            End Get
            Set
                Dim previous As D = Me.D_Ref1
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("D_Ref1", value)
                    If (Not (previous) Is Nothing) Then
                        Me._d_Ref1.Entity = Nothing
                        previous.C = Nothing
                    End If
                    If (Not (value) Is Nothing) Then
                        Me.DID_Ref1 = value.ID
                    Else
                        Me.DID_Ref1 = CType(Nothing, Integer)
                    End If
                    Me._d_Ref1.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.C = Me
                    End If
                    Me.RaisePropertyChanged("D_Ref1")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="D"/> entity.
        ''' </summary>
        <Association("C_D_Ref2", "DID_Ref2", "ID", IsForeignKey:=true)>  _
        Public Property D_Ref2() As D
            Get
                If (Me._d_Ref2 Is Nothing) Then
                    Me._d_Ref2 = New EntityRef(Of D)(Me, "D_Ref2", AddressOf Me.FilterD_Ref2)
                End If
                Return Me._d_Ref2.Entity
            End Get
            Set
                Dim previous As D = Me.D_Ref2
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("D_Ref2", value)
                    If (Not (value) Is Nothing) Then
                        Me.DID_Ref2 = value.ID
                    Else
                        Me.DID_Ref2 = CType(Nothing, Integer)
                    End If
                    Me._d_Ref2.Entity = value
                    Me.RaisePropertyChanged("D_Ref2")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DID_Ref1' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property DID_Ref1() As Integer
            Get
                Return Me._did_Ref1
            End Get
            Set
                If ((Me._did_Ref1 = value)  _
                            = false) Then
                    Me.OnDID_Ref1Changing(value)
                    Me.RaiseDataMemberChanging("DID_Ref1")
                    Me.ValidateProperty("DID_Ref1", value)
                    Me._did_Ref1 = value
                    Me.RaiseDataMemberChanged("DID_Ref1")
                    Me.OnDID_Ref1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DID_Ref2' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property DID_Ref2() As Integer
            Get
                Return Me._did_Ref2
            End Get
            Set
                If ((Me._did_Ref2 = value)  _
                            = false) Then
                    Me.OnDID_Ref2Changing(value)
                    Me.RaiseDataMemberChanging("DID_Ref2")
                    Me.ValidateProperty("DID_Ref2", value)
                    Me._did_Ref2 = value
                    Me.RaiseDataMemberChanged("DID_Ref2")
                    Me.OnDID_Ref2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        Private Function FilterD_Ref1(ByVal entity As D) As Boolean
            Return Object.Equals(entity.ID, Me.DID_Ref1)
        End Function
        
        Private Function FilterD_Ref2(ByVal entity As D) As Boolean
            Return Object.Equals(entity.ID, Me.DID_Ref2)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'Cart' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class Cart
        Inherits Entity
        
        Private _cartId As Integer
        
        Private _items As EntityCollection(Of CartItem)
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCartIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnCartIdChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="Cart"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'CartId' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property CartId() As Integer
            Get
                Return Me._cartId
            End Get
            Set
                If ((Me._cartId = value)  _
                            = false) Then
                    Me.OnCartIdChanging(value)
                    Me.ValidateProperty("CartId", value)
                    Me._cartId = value
                    Me.RaisePropertyChanged("CartId")
                    Me.OnCartIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets the collection of associated <see cref="CartItem"/> entity instances.
        ''' </summary>
        <Association("CartItem_Cart", "CartId", "CartItemId"),  _
         Editable(false),  _
         [ReadOnly](true)>  _
        Public ReadOnly Property Items() As EntityCollection(Of CartItem)
            Get
                If (Me._items Is Nothing) Then
                    Me._items = New EntityCollection(Of CartItem)(Me, "Items", AddressOf Me.FilterItems, AddressOf Me.AttachItems, AddressOf Me.DetachItems)
                End If
                Return Me._items
            End Get
        End Property
        
        Private Sub AttachItems(ByVal entity As CartItem)
            entity.Cart = Me
        End Sub
        
        Private Sub DetachItems(ByVal entity As CartItem)
            entity.Cart = Nothing
        End Sub
        
        Private Function FilterItems(ByVal entity As CartItem) As Boolean
            Return Object.Equals(entity.CartItemId, Me.CartId)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._cartId
        End Function
    End Class
    
    ''' <summary>
    ''' The 'CartItem' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class CartItem
        Inherits Entity
        
        Private _cart As EntityRef(Of Cart)
        
        Private _cartId As Integer
        
        Private _cartItemId As Integer
        
        Private _data As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCartIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnCartIdChanged()
        End Sub
        Private Partial Sub OnCartItemIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnCartItemIdChanged()
        End Sub
        Private Partial Sub OnDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnDataChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="CartItem"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="Cart"/> entity.
        ''' </summary>
        <Association("CartItem_Cart", "CartItemId", "CartId", IsForeignKey:=true)>  _
        Public Property Cart() As Cart
            Get
                If (Me._cart Is Nothing) Then
                    Me._cart = New EntityRef(Of Cart)(Me, "Cart", AddressOf Me.FilterCart)
                End If
                Return Me._cart.Entity
            End Get
            Set
                Dim previous As Cart = Me.Cart
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("Cart", value)
                    If (Not (previous) Is Nothing) Then
                        Me._cart.Entity = Nothing
                        previous.Items.Remove(Me)
                    End If
                    If (Not (value) Is Nothing) Then
                        Me.CartItemId = value.CartId
                    Else
                        Me.CartItemId = CType(Nothing, Integer)
                    End If
                    Me._cart.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.Items.Add(Me)
                    End If
                    Me.RaisePropertyChanged("Cart")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CartId' value.
        ''' </summary>
        <DataMember()>  _
        Public Property CartId() As Integer
            Get
                Return Me._cartId
            End Get
            Set
                If ((Me._cartId = value)  _
                            = false) Then
                    Me.OnCartIdChanging(value)
                    Me.RaiseDataMemberChanging("CartId")
                    Me.ValidateProperty("CartId", value)
                    Me._cartId = value
                    Me.RaiseDataMemberChanged("CartId")
                    Me.OnCartIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CartItemId' value.
        ''' </summary>
        <DataMember(),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property CartItemId() As Integer
            Get
                Return Me._cartItemId
            End Get
            Set
                If ((Me._cartItemId = value)  _
                            = false) Then
                    Me.OnCartItemIdChanging(value)
                    Me.RaiseDataMemberChanging("CartItemId")
                    Me.ValidateProperty("CartItemId", value)
                    Me._cartItemId = value
                    Me.RaiseDataMemberChanged("CartItemId")
                    Me.OnCartItemIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Data' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Data() As String
            Get
                Return Me._data
            End Get
            Set
                If (String.Equals(Me._data, value) = false) Then
                    Me.OnDataChanging(value)
                    Me.RaiseDataMemberChanging("Data")
                    Me.ValidateProperty("Data", value)
                    Me._data = value
                    Me.RaiseDataMemberChanged("Data")
                    Me.OnDataChanged
                End If
            End Set
        End Property
        
        Private Function FilterCart(ByVal entity As Cart) As Boolean
            Return Object.Equals(entity.CartId, Me.CartItemId)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._cartItemId
        End Function
    End Class
    
    ''' <summary>
    ''' The 'CityWithCacheData' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class CityWithCacheData
        Inherits Entity
        
        Private _cacheData As String
        
        Private _name As String
        
        Private _stateName As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCacheDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnCacheDataChanged()
        End Sub
        Private Partial Sub OnNameChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnNameChanged()
        End Sub
        Private Partial Sub OnStateNameChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnStateNameChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="CityWithCacheData"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'CacheData' value.
        ''' </summary>
        <DataMember()>  _
        Public Property CacheData() As String
            Get
                Return Me._cacheData
            End Get
            Set
                If (String.Equals(Me._cacheData, value) = false) Then
                    Me.OnCacheDataChanging(value)
                    Me.RaiseDataMemberChanging("CacheData")
                    Me.ValidateProperty("CacheData", value)
                    Me._cacheData = value
                    Me.RaiseDataMemberChanged("CacheData")
                    Me.OnCacheDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Name' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Name() As String
            Get
                Return Me._name
            End Get
            Set
                If (String.Equals(Me._name, value) = false) Then
                    Me.OnNameChanging(value)
                    Me.ValidateProperty("Name", value)
                    Me._name = value
                    Me.RaisePropertyChanged("Name")
                    Me.OnNameChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'StateName' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property StateName() As String
            Get
                Return Me._stateName
            End Get
            Set
                If (String.Equals(Me._stateName, value) = false) Then
                    Me.OnStateNameChanging(value)
                    Me.ValidateProperty("StateName", value)
                    Me._stateName = value
                    Me.RaisePropertyChanged("StateName")
                    Me.OnStateNameChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            If ((Me._name Is Nothing)  _
                        OrElse (Me._stateName Is Nothing)) Then
                Return Nothing
            End If
            Return EntityKey.Create(Me._name, Me._stateName)
        End Function
    End Class
    
    ''' <summary>
    ''' The 'D' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class D
        Inherits Entity
        
        Private _binaryData() As Byte
        
        Private _c As EntityRef(Of C)
        
        Private _d1 As EntityRef(Of D)
        
        Private _d2 As EntityRef(Of D)
        
        Private _d2_BackRef As EntityRef(Of D)
        
        Private _ds As EntityCollection(Of D)
        
        Private _dSelfRef_ID1 As Integer
        
        Private _dSelfRef_ID2 As Integer
        
        Private _id As Integer
        
        Private _projectedD1BinaryData() As Byte
        
        Private _projectedD1ID As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnBinaryDataChanging(ByVal value() As Byte)
        End Sub
        Private Partial Sub OnBinaryDataChanged()
        End Sub
        Private Partial Sub OnDSelfRef_ID1Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnDSelfRef_ID1Changed()
        End Sub
        Private Partial Sub OnDSelfRef_ID2Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnDSelfRef_ID2Changed()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnProjectedD1BinaryDataChanging(ByVal value() As Byte)
        End Sub
        Private Partial Sub OnProjectedD1BinaryDataChanged()
        End Sub
        Private Partial Sub OnProjectedD1IDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnProjectedD1IDChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="D"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'BinaryData' value.
        ''' </summary>
        <DataMember()>  _
        Public Property BinaryData() As Byte()
            Get
                Return Me._binaryData
            End Get
            Set
                If (Object.Equals(Me._binaryData, value) = false) Then
                    Me.OnBinaryDataChanging(value)
                    Me.RaiseDataMemberChanging("BinaryData")
                    Me.ValidateProperty("BinaryData", value)
                    Me._binaryData = value
                    Me.RaiseDataMemberChanged("BinaryData")
                    Me.OnBinaryDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="C"/> entity.
        ''' </summary>
        <Association("C_D_Ref1", "ID", "DID_Ref1")>  _
        Public Property C() As C
            Get
                If (Me._c Is Nothing) Then
                    Me._c = New EntityRef(Of C)(Me, "C", AddressOf Me.FilterC)
                End If
                Return Me._c.Entity
            End Get
            Set
                Dim previous As C = Me.C
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("C", value)
                    If (Not (previous) Is Nothing) Then
                        Me._c.Entity = Nothing
                        previous.D_Ref1 = Nothing
                    End If
                    Me._c.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.D_Ref1 = Me
                    End If
                    Me.RaisePropertyChanged("C")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="D"/> entity.
        ''' </summary>
        <Association("D_D", "DSelfRef_ID1", "ID", IsForeignKey:=true)>  _
        Public Property D1() As D
            Get
                If (Me._d1 Is Nothing) Then
                    Me._d1 = New EntityRef(Of D)(Me, "D1", AddressOf Me.FilterD1)
                End If
                Return Me._d1.Entity
            End Get
            Set
                Dim previous As D = Me.D1
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("D1", value)
                    If (Not (previous) Is Nothing) Then
                        Me._d1.Entity = Nothing
                        previous.Ds.Remove(Me)
                    End If
                    If (Not (value) Is Nothing) Then
                        Me.DSelfRef_ID1 = value.ID
                    Else
                        Me.DSelfRef_ID1 = CType(Nothing, Integer)
                    End If
                    Me._d1.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.Ds.Add(Me)
                    End If
                    Me.RaisePropertyChanged("D1")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="D"/> entity.
        ''' </summary>
        <Association("D_D2", "DSelfRef_ID2", "ID", IsForeignKey:=true)>  _
        Public Property D2() As D
            Get
                If (Me._d2 Is Nothing) Then
                    Me._d2 = New EntityRef(Of D)(Me, "D2", AddressOf Me.FilterD2)
                End If
                Return Me._d2.Entity
            End Get
            Set
                Dim previous As D = Me.D2
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("D2", value)
                    If (Not (previous) Is Nothing) Then
                        Me._d2.Entity = Nothing
                        previous.D2_BackRef = Nothing
                    End If
                    If (Not (value) Is Nothing) Then
                        Me.DSelfRef_ID2 = value.ID
                    Else
                        Me.DSelfRef_ID2 = CType(Nothing, Integer)
                    End If
                    Me._d2.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.D2_BackRef = Me
                    End If
                    Me.RaisePropertyChanged("D2")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="D"/> entity.
        ''' </summary>
        <Association("D_D2", "ID", "DSelfRef_ID2")>  _
        Public Property D2_BackRef() As D
            Get
                If (Me._d2_BackRef Is Nothing) Then
                    Me._d2_BackRef = New EntityRef(Of D)(Me, "D2_BackRef", AddressOf Me.FilterD2_BackRef)
                End If
                Return Me._d2_BackRef.Entity
            End Get
            Set
                Dim previous As D = Me.D2_BackRef
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("D2_BackRef", value)
                    If (Not (previous) Is Nothing) Then
                        Me._d2_BackRef.Entity = Nothing
                        previous.D2 = Nothing
                    End If
                    Me._d2_BackRef.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.D2 = Me
                    End If
                    Me.RaisePropertyChanged("D2_BackRef")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets the collection of associated <see cref="D"/> entity instances.
        ''' </summary>
        <Association("D_D", "ID", "DSelfRef_ID1")>  _
        Public ReadOnly Property Ds() As EntityCollection(Of D)
            Get
                If (Me._ds Is Nothing) Then
                    Me._ds = New EntityCollection(Of D)(Me, "Ds", AddressOf Me.FilterDs, AddressOf Me.AttachDs, AddressOf Me.DetachDs)
                End If
                Return Me._ds
            End Get
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DSelfRef_ID1' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property DSelfRef_ID1() As Integer
            Get
                Return Me._dSelfRef_ID1
            End Get
            Set
                If ((Me._dSelfRef_ID1 = value)  _
                            = false) Then
                    Me.OnDSelfRef_ID1Changing(value)
                    Me.RaiseDataMemberChanging("DSelfRef_ID1")
                    Me.ValidateProperty("DSelfRef_ID1", value)
                    Me._dSelfRef_ID1 = value
                    Me.RaiseDataMemberChanged("DSelfRef_ID1")
                    Me.OnDSelfRef_ID1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DSelfRef_ID2' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property DSelfRef_ID2() As Integer
            Get
                Return Me._dSelfRef_ID2
            End Get
            Set
                If ((Me._dSelfRef_ID2 = value)  _
                            = false) Then
                    Me.OnDSelfRef_ID2Changing(value)
                    Me.RaiseDataMemberChanging("DSelfRef_ID2")
                    Me.ValidateProperty("DSelfRef_ID2", value)
                    Me._dSelfRef_ID2 = value
                    Me.RaiseDataMemberChanged("DSelfRef_ID2")
                    Me.OnDSelfRef_ID2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         Range(0, 99999),  _
         RoundtripOriginal(),  _
         UIHint("TextBlock")>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ProjectedD1BinaryData' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false)>  _
        Public Property ProjectedD1BinaryData() As Byte()
            Get
                Return Me._projectedD1BinaryData
            End Get
            Set
                If (Object.Equals(Me._projectedD1BinaryData, value) = false) Then
                    Me.OnProjectedD1BinaryDataChanging(value)
                    Me.ValidateProperty("ProjectedD1BinaryData", value)
                    Me._projectedD1BinaryData = value
                    Me.RaisePropertyChanged("ProjectedD1BinaryData")
                    Me.OnProjectedD1BinaryDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ProjectedD1ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         UIHint("TextBlock")>  _
        Public Property ProjectedD1ID() As Integer
            Get
                Return Me._projectedD1ID
            End Get
            Set
                If ((Me._projectedD1ID = value)  _
                            = false) Then
                    Me.OnProjectedD1IDChanging(value)
                    Me.ValidateProperty("ProjectedD1ID", value)
                    Me._projectedD1ID = value
                    Me.RaisePropertyChanged("ProjectedD1ID")
                    Me.OnProjectedD1IDChanged
                End If
            End Set
        End Property
        
        Private Function FilterC(ByVal entity As C) As Boolean
            Return Object.Equals(entity.DID_Ref1, Me.ID)
        End Function
        
        Private Function FilterD1(ByVal entity As D) As Boolean
            Return Object.Equals(entity.ID, Me.DSelfRef_ID1)
        End Function
        
        Private Function FilterD2(ByVal entity As D) As Boolean
            Return Object.Equals(entity.ID, Me.DSelfRef_ID2)
        End Function
        
        Private Function FilterD2_BackRef(ByVal entity As D) As Boolean
            Return Object.Equals(entity.DSelfRef_ID2, Me.ID)
        End Function
        
        Private Sub AttachDs(ByVal entity As D)
            entity.D1 = Me
        End Sub
        
        Private Sub DetachDs(ByVal entity As D)
            entity.D1 = Nothing
        End Sub
        
        Private Function FilterDs(ByVal entity As D) As Boolean
            Return Object.Equals(entity.DSelfRef_ID1, Me.ID)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'Entity_TestEditableAttribute' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class Entity_TestEditableAttribute
        Inherits Entity
        
        Private _editableFalse As String
        
        Private _editableFalse_AllowInitialValueFalse As String
        
        Private _editableFalse_AllowInitialValueTrue As String
        
        Private _editableTrue As String
        
        Private _editableTrue_AllowInitialValueFalse As String
        
        Private _editableTrue_AllowInitialValueTrue As String
        
        Private _key_EditableFalse As Integer
        
        Private _key_EditableFalse_AllowInitialValueTrue As Integer
        
        Private _key_EditableTrue As Integer
        
        Private _key_EditableTrue_AllowInitialValueFalse As Integer
        
        Private _key_ReadOnlyFalse As Integer
        
        Private _key_ReadOnlyTrue As Integer
        
        Private _key_Timestamp As Integer
        
        Private _key_Timestamp_ReadOnlyFalse As Integer
        
        Private _key_Timestamp_ReadOnlyTrue As Integer
        
        Private _keyField As Integer
        
        Private _readOnlyFalse As Integer
        
        Private _readOnlyFalse_EditableFalse As Integer
        
        Private _readOnlyFalse_EditableFalse_AllowInitialValueTrue As Integer
        
        Private _readOnlyFalse_EditableTrue As Integer
        
        Private _readOnlyFalse_EditableTrue_AllowInitialValueFalse As Integer
        
        Private _readOnlyTrue As Integer
        
        Private _readOnlyTrue_EditableFalse As Integer
        
        Private _readOnlyTrue_EditableFalse_AllowInitialValueTrue As Integer
        
        Private _readOnlyTrue_EditableTrue As Integer
        
        Private _readOnlyTrue_EditableTrue_AllowInitialValueFalse As Integer
        
        Private _timestamp As Integer
        
        Private _timestamp_EditableFalse As Integer
        
        Private _timestamp_EditableFalse_AllowInitialValueTrue As Integer
        
        Private _timestamp_EditableTrue As Integer
        
        Private _timestamp_EditableTrue_AllowInitialValueFalse As Integer
        
        Private _timestamp_ReadOnlyFalse As Integer
        
        Private _timestamp_ReadOnlyTrue As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnEditableFalseChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnEditableFalseChanged()
        End Sub
        Private Partial Sub OnEditableFalse_AllowInitialValueFalseChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnEditableFalse_AllowInitialValueFalseChanged()
        End Sub
        Private Partial Sub OnEditableFalse_AllowInitialValueTrueChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnEditableFalse_AllowInitialValueTrueChanged()
        End Sub
        Private Partial Sub OnEditableTrueChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnEditableTrueChanged()
        End Sub
        Private Partial Sub OnEditableTrue_AllowInitialValueFalseChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnEditableTrue_AllowInitialValueFalseChanged()
        End Sub
        Private Partial Sub OnEditableTrue_AllowInitialValueTrueChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnEditableTrue_AllowInitialValueTrueChanged()
        End Sub
        Private Partial Sub OnKey_EditableFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_EditableFalseChanged()
        End Sub
        Private Partial Sub OnKey_EditableFalse_AllowInitialValueTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_EditableFalse_AllowInitialValueTrueChanged()
        End Sub
        Private Partial Sub OnKey_EditableTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_EditableTrueChanged()
        End Sub
        Private Partial Sub OnKey_EditableTrue_AllowInitialValueFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_EditableTrue_AllowInitialValueFalseChanged()
        End Sub
        Private Partial Sub OnKey_ReadOnlyFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_ReadOnlyFalseChanged()
        End Sub
        Private Partial Sub OnKey_ReadOnlyTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_ReadOnlyTrueChanged()
        End Sub
        Private Partial Sub OnKey_TimestampChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_TimestampChanged()
        End Sub
        Private Partial Sub OnKey_Timestamp_ReadOnlyFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_Timestamp_ReadOnlyFalseChanged()
        End Sub
        Private Partial Sub OnKey_Timestamp_ReadOnlyTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKey_Timestamp_ReadOnlyTrueChanged()
        End Sub
        Private Partial Sub OnKeyFieldChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyFieldChanged()
        End Sub
        Private Partial Sub OnReadOnlyFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyFalseChanged()
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableFalseChanged()
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableFalse_AllowInitialValueTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableFalse_AllowInitialValueTrueChanged()
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableTrueChanged()
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableTrue_AllowInitialValueFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyFalse_EditableTrue_AllowInitialValueFalseChanged()
        End Sub
        Private Partial Sub OnReadOnlyTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyTrueChanged()
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableFalseChanged()
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableFalse_AllowInitialValueTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableFalse_AllowInitialValueTrueChanged()
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableTrueChanged()
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableTrue_AllowInitialValueFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReadOnlyTrue_EditableTrue_AllowInitialValueFalseChanged()
        End Sub
        Private Partial Sub OnTimestampChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnTimestampChanged()
        End Sub
        Private Partial Sub OnTimestamp_EditableFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnTimestamp_EditableFalseChanged()
        End Sub
        Private Partial Sub OnTimestamp_EditableFalse_AllowInitialValueTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnTimestamp_EditableFalse_AllowInitialValueTrueChanged()
        End Sub
        Private Partial Sub OnTimestamp_EditableTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnTimestamp_EditableTrueChanged()
        End Sub
        Private Partial Sub OnTimestamp_EditableTrue_AllowInitialValueFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnTimestamp_EditableTrue_AllowInitialValueFalseChanged()
        End Sub
        Private Partial Sub OnTimestamp_ReadOnlyFalseChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnTimestamp_ReadOnlyFalseChanged()
        End Sub
        Private Partial Sub OnTimestamp_ReadOnlyTrueChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnTimestamp_ReadOnlyTrueChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="Entity_TestEditableAttribute"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'EditableFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false)>  _
        Public Property EditableFalse() As String
            Get
                Return Me._editableFalse
            End Get
            Set
                If (String.Equals(Me._editableFalse, value) = false) Then
                    Me.OnEditableFalseChanging(value)
                    Me.ValidateProperty("EditableFalse", value)
                    Me._editableFalse = value
                    Me.RaisePropertyChanged("EditableFalse")
                    Me.OnEditableFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'EditableFalse_AllowInitialValueFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false)>  _
        Public Property EditableFalse_AllowInitialValueFalse() As String
            Get
                Return Me._editableFalse_AllowInitialValueFalse
            End Get
            Set
                If (String.Equals(Me._editableFalse_AllowInitialValueFalse, value) = false) Then
                    Me.OnEditableFalse_AllowInitialValueFalseChanging(value)
                    Me.ValidateProperty("EditableFalse_AllowInitialValueFalse", value)
                    Me._editableFalse_AllowInitialValueFalse = value
                    Me.RaisePropertyChanged("EditableFalse_AllowInitialValueFalse")
                    Me.OnEditableFalse_AllowInitialValueFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'EditableFalse_AllowInitialValueTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true)>  _
        Public Property EditableFalse_AllowInitialValueTrue() As String
            Get
                Return Me._editableFalse_AllowInitialValueTrue
            End Get
            Set
                If (String.Equals(Me._editableFalse_AllowInitialValueTrue, value) = false) Then
                    Me.OnEditableFalse_AllowInitialValueTrueChanging(value)
                    Me.ValidateProperty("EditableFalse_AllowInitialValueTrue", value)
                    Me._editableFalse_AllowInitialValueTrue = value
                    Me.RaisePropertyChanged("EditableFalse_AllowInitialValueTrue")
                    Me.OnEditableFalse_AllowInitialValueTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'EditableTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true)>  _
        Public Property EditableTrue() As String
            Get
                Return Me._editableTrue
            End Get
            Set
                If (String.Equals(Me._editableTrue, value) = false) Then
                    Me.OnEditableTrueChanging(value)
                    Me.RaiseDataMemberChanging("EditableTrue")
                    Me.ValidateProperty("EditableTrue", value)
                    Me._editableTrue = value
                    Me.RaiseDataMemberChanged("EditableTrue")
                    Me.OnEditableTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'EditableTrue_AllowInitialValueFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true, AllowInitialValue:=false)>  _
        Public Property EditableTrue_AllowInitialValueFalse() As String
            Get
                Return Me._editableTrue_AllowInitialValueFalse
            End Get
            Set
                If (String.Equals(Me._editableTrue_AllowInitialValueFalse, value) = false) Then
                    Me.OnEditableTrue_AllowInitialValueFalseChanging(value)
                    Me.RaiseDataMemberChanging("EditableTrue_AllowInitialValueFalse")
                    Me.ValidateProperty("EditableTrue_AllowInitialValueFalse", value)
                    Me._editableTrue_AllowInitialValueFalse = value
                    Me.RaiseDataMemberChanged("EditableTrue_AllowInitialValueFalse")
                    Me.OnEditableTrue_AllowInitialValueFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'EditableTrue_AllowInitialValueTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true)>  _
        Public Property EditableTrue_AllowInitialValueTrue() As String
            Get
                Return Me._editableTrue_AllowInitialValueTrue
            End Get
            Set
                If (String.Equals(Me._editableTrue_AllowInitialValueTrue, value) = false) Then
                    Me.OnEditableTrue_AllowInitialValueTrueChanging(value)
                    Me.RaiseDataMemberChanging("EditableTrue_AllowInitialValueTrue")
                    Me.ValidateProperty("EditableTrue_AllowInitialValueTrue", value)
                    Me._editableTrue_AllowInitialValueTrue = value
                    Me.RaiseDataMemberChanged("EditableTrue_AllowInitialValueTrue")
                    Me.OnEditableTrue_AllowInitialValueTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_EditableFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key_EditableFalse() As Integer
            Get
                Return Me._key_EditableFalse
            End Get
            Set
                If ((Me._key_EditableFalse = value)  _
                            = false) Then
                    Me.OnKey_EditableFalseChanging(value)
                    Me.ValidateProperty("Key_EditableFalse", value)
                    Me._key_EditableFalse = value
                    Me.RaisePropertyChanged("Key_EditableFalse")
                    Me.OnKey_EditableFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_EditableFalse_AllowInitialValueTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key_EditableFalse_AllowInitialValueTrue() As Integer
            Get
                Return Me._key_EditableFalse_AllowInitialValueTrue
            End Get
            Set
                If ((Me._key_EditableFalse_AllowInitialValueTrue = value)  _
                            = false) Then
                    Me.OnKey_EditableFalse_AllowInitialValueTrueChanging(value)
                    Me.ValidateProperty("Key_EditableFalse_AllowInitialValueTrue", value)
                    Me._key_EditableFalse_AllowInitialValueTrue = value
                    Me.RaisePropertyChanged("Key_EditableFalse_AllowInitialValueTrue")
                    Me.OnKey_EditableFalse_AllowInitialValueTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_EditableTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key_EditableTrue() As Integer
            Get
                Return Me._key_EditableTrue
            End Get
            Set
                If ((Me._key_EditableTrue = value)  _
                            = false) Then
                    Me.OnKey_EditableTrueChanging(value)
                    Me.RaiseDataMemberChanging("Key_EditableTrue")
                    Me.ValidateProperty("Key_EditableTrue", value)
                    Me._key_EditableTrue = value
                    Me.RaiseDataMemberChanged("Key_EditableTrue")
                    Me.OnKey_EditableTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_EditableTrue_AllowInitialValueFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true, AllowInitialValue:=false),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key_EditableTrue_AllowInitialValueFalse() As Integer
            Get
                Return Me._key_EditableTrue_AllowInitialValueFalse
            End Get
            Set
                If ((Me._key_EditableTrue_AllowInitialValueFalse = value)  _
                            = false) Then
                    Me.OnKey_EditableTrue_AllowInitialValueFalseChanging(value)
                    Me.RaiseDataMemberChanging("Key_EditableTrue_AllowInitialValueFalse")
                    Me.ValidateProperty("Key_EditableTrue_AllowInitialValueFalse", value)
                    Me._key_EditableTrue_AllowInitialValueFalse = value
                    Me.RaiseDataMemberChanged("Key_EditableTrue_AllowInitialValueFalse")
                    Me.OnKey_EditableTrue_AllowInitialValueFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_ReadOnlyFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         [ReadOnly](false),  _
         RoundtripOriginal()>  _
        Public Property Key_ReadOnlyFalse() As Integer
            Get
                Return Me._key_ReadOnlyFalse
            End Get
            Set
                If ((Me._key_ReadOnlyFalse = value)  _
                            = false) Then
                    Me.OnKey_ReadOnlyFalseChanging(value)
                    Me.ValidateProperty("Key_ReadOnlyFalse", value)
                    Me._key_ReadOnlyFalse = value
                    Me.RaisePropertyChanged("Key_ReadOnlyFalse")
                    Me.OnKey_ReadOnlyFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_ReadOnlyTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         [ReadOnly](true),  _
         RoundtripOriginal()>  _
        Public Property Key_ReadOnlyTrue() As Integer
            Get
                Return Me._key_ReadOnlyTrue
            End Get
            Set
                If ((Me._key_ReadOnlyTrue = value)  _
                            = false) Then
                    Me.OnKey_ReadOnlyTrueChanging(value)
                    Me.ValidateProperty("Key_ReadOnlyTrue", value)
                    Me._key_ReadOnlyTrue = value
                    Me.RaisePropertyChanged("Key_ReadOnlyTrue")
                    Me.OnKey_ReadOnlyTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_Timestamp' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Key_Timestamp() As Integer
            Get
                Return Me._key_Timestamp
            End Get
            Set
                If ((Me._key_Timestamp = value)  _
                            = false) Then
                    Me.OnKey_TimestampChanging(value)
                    Me.ValidateProperty("Key_Timestamp", value)
                    Me._key_Timestamp = value
                    Me.RaisePropertyChanged("Key_Timestamp")
                    Me.OnKey_TimestampChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_Timestamp_ReadOnlyFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         [ReadOnly](false),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Key_Timestamp_ReadOnlyFalse() As Integer
            Get
                Return Me._key_Timestamp_ReadOnlyFalse
            End Get
            Set
                If ((Me._key_Timestamp_ReadOnlyFalse = value)  _
                            = false) Then
                    Me.OnKey_Timestamp_ReadOnlyFalseChanging(value)
                    Me.ValidateProperty("Key_Timestamp_ReadOnlyFalse", value)
                    Me._key_Timestamp_ReadOnlyFalse = value
                    Me.RaisePropertyChanged("Key_Timestamp_ReadOnlyFalse")
                    Me.OnKey_Timestamp_ReadOnlyFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key_Timestamp_ReadOnlyTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         [ReadOnly](true),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Key_Timestamp_ReadOnlyTrue() As Integer
            Get
                Return Me._key_Timestamp_ReadOnlyTrue
            End Get
            Set
                If ((Me._key_Timestamp_ReadOnlyTrue = value)  _
                            = false) Then
                    Me.OnKey_Timestamp_ReadOnlyTrueChanging(value)
                    Me.ValidateProperty("Key_Timestamp_ReadOnlyTrue", value)
                    Me._key_Timestamp_ReadOnlyTrue = value
                    Me.RaisePropertyChanged("Key_Timestamp_ReadOnlyTrue")
                    Me.OnKey_Timestamp_ReadOnlyTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'KeyField' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property KeyField() As Integer
            Get
                Return Me._keyField
            End Get
            Set
                If ((Me._keyField = value)  _
                            = false) Then
                    Me.OnKeyFieldChanging(value)
                    Me.ValidateProperty("KeyField", value)
                    Me._keyField = value
                    Me.RaisePropertyChanged("KeyField")
                    Me.OnKeyFieldChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true),  _
         [ReadOnly](false)>  _
        Public Property ReadOnlyFalse() As Integer
            Get
                Return Me._readOnlyFalse
            End Get
            Set
                If ((Me._readOnlyFalse = value)  _
                            = false) Then
                    Me.OnReadOnlyFalseChanging(value)
                    Me.RaiseDataMemberChanging("ReadOnlyFalse")
                    Me.ValidateProperty("ReadOnlyFalse", value)
                    Me._readOnlyFalse = value
                    Me.RaiseDataMemberChanged("ReadOnlyFalse")
                    Me.OnReadOnlyFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyFalse_EditableFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         [ReadOnly](false)>  _
        Public Property ReadOnlyFalse_EditableFalse() As Integer
            Get
                Return Me._readOnlyFalse_EditableFalse
            End Get
            Set
                If ((Me._readOnlyFalse_EditableFalse = value)  _
                            = false) Then
                    Me.OnReadOnlyFalse_EditableFalseChanging(value)
                    Me.ValidateProperty("ReadOnlyFalse_EditableFalse", value)
                    Me._readOnlyFalse_EditableFalse = value
                    Me.RaisePropertyChanged("ReadOnlyFalse_EditableFalse")
                    Me.OnReadOnlyFalse_EditableFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyFalse_EditableFalse_AllowInitialValueTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         [ReadOnly](false)>  _
        Public Property ReadOnlyFalse_EditableFalse_AllowInitialValueTrue() As Integer
            Get
                Return Me._readOnlyFalse_EditableFalse_AllowInitialValueTrue
            End Get
            Set
                If ((Me._readOnlyFalse_EditableFalse_AllowInitialValueTrue = value)  _
                            = false) Then
                    Me.OnReadOnlyFalse_EditableFalse_AllowInitialValueTrueChanging(value)
                    Me.ValidateProperty("ReadOnlyFalse_EditableFalse_AllowInitialValueTrue", value)
                    Me._readOnlyFalse_EditableFalse_AllowInitialValueTrue = value
                    Me.RaisePropertyChanged("ReadOnlyFalse_EditableFalse_AllowInitialValueTrue")
                    Me.OnReadOnlyFalse_EditableFalse_AllowInitialValueTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyFalse_EditableTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true),  _
         [ReadOnly](false)>  _
        Public Property ReadOnlyFalse_EditableTrue() As Integer
            Get
                Return Me._readOnlyFalse_EditableTrue
            End Get
            Set
                If ((Me._readOnlyFalse_EditableTrue = value)  _
                            = false) Then
                    Me.OnReadOnlyFalse_EditableTrueChanging(value)
                    Me.RaiseDataMemberChanging("ReadOnlyFalse_EditableTrue")
                    Me.ValidateProperty("ReadOnlyFalse_EditableTrue", value)
                    Me._readOnlyFalse_EditableTrue = value
                    Me.RaiseDataMemberChanged("ReadOnlyFalse_EditableTrue")
                    Me.OnReadOnlyFalse_EditableTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyFalse_EditableTrue_AllowInitialValueFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true, AllowInitialValue:=false),  _
         [ReadOnly](false)>  _
        Public Property ReadOnlyFalse_EditableTrue_AllowInitialValueFalse() As Integer
            Get
                Return Me._readOnlyFalse_EditableTrue_AllowInitialValueFalse
            End Get
            Set
                If ((Me._readOnlyFalse_EditableTrue_AllowInitialValueFalse = value)  _
                            = false) Then
                    Me.OnReadOnlyFalse_EditableTrue_AllowInitialValueFalseChanging(value)
                    Me.RaiseDataMemberChanging("ReadOnlyFalse_EditableTrue_AllowInitialValueFalse")
                    Me.ValidateProperty("ReadOnlyFalse_EditableTrue_AllowInitialValueFalse", value)
                    Me._readOnlyFalse_EditableTrue_AllowInitialValueFalse = value
                    Me.RaiseDataMemberChanged("ReadOnlyFalse_EditableTrue_AllowInitialValueFalse")
                    Me.OnReadOnlyFalse_EditableTrue_AllowInitialValueFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         [ReadOnly](true)>  _
        Public Property ReadOnlyTrue() As Integer
            Get
                Return Me._readOnlyTrue
            End Get
            Set
                If ((Me._readOnlyTrue = value)  _
                            = false) Then
                    Me.OnReadOnlyTrueChanging(value)
                    Me.ValidateProperty("ReadOnlyTrue", value)
                    Me._readOnlyTrue = value
                    Me.RaisePropertyChanged("ReadOnlyTrue")
                    Me.OnReadOnlyTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyTrue_EditableFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         [ReadOnly](true)>  _
        Public Property ReadOnlyTrue_EditableFalse() As Integer
            Get
                Return Me._readOnlyTrue_EditableFalse
            End Get
            Set
                If ((Me._readOnlyTrue_EditableFalse = value)  _
                            = false) Then
                    Me.OnReadOnlyTrue_EditableFalseChanging(value)
                    Me.ValidateProperty("ReadOnlyTrue_EditableFalse", value)
                    Me._readOnlyTrue_EditableFalse = value
                    Me.RaisePropertyChanged("ReadOnlyTrue_EditableFalse")
                    Me.OnReadOnlyTrue_EditableFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyTrue_EditableFalse_AllowInitialValueTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         [ReadOnly](true)>  _
        Public Property ReadOnlyTrue_EditableFalse_AllowInitialValueTrue() As Integer
            Get
                Return Me._readOnlyTrue_EditableFalse_AllowInitialValueTrue
            End Get
            Set
                If ((Me._readOnlyTrue_EditableFalse_AllowInitialValueTrue = value)  _
                            = false) Then
                    Me.OnReadOnlyTrue_EditableFalse_AllowInitialValueTrueChanging(value)
                    Me.ValidateProperty("ReadOnlyTrue_EditableFalse_AllowInitialValueTrue", value)
                    Me._readOnlyTrue_EditableFalse_AllowInitialValueTrue = value
                    Me.RaisePropertyChanged("ReadOnlyTrue_EditableFalse_AllowInitialValueTrue")
                    Me.OnReadOnlyTrue_EditableFalse_AllowInitialValueTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyTrue_EditableTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true),  _
         [ReadOnly](true)>  _
        Public Property ReadOnlyTrue_EditableTrue() As Integer
            Get
                Return Me._readOnlyTrue_EditableTrue
            End Get
            Set
                If ((Me._readOnlyTrue_EditableTrue = value)  _
                            = false) Then
                    Me.OnReadOnlyTrue_EditableTrueChanging(value)
                    Me.ValidateProperty("ReadOnlyTrue_EditableTrue", value)
                    Me._readOnlyTrue_EditableTrue = value
                    Me.RaisePropertyChanged("ReadOnlyTrue_EditableTrue")
                    Me.OnReadOnlyTrue_EditableTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReadOnlyTrue_EditableTrue_AllowInitialValueFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true, AllowInitialValue:=false),  _
         [ReadOnly](true)>  _
        Public Property ReadOnlyTrue_EditableTrue_AllowInitialValueFalse() As Integer
            Get
                Return Me._readOnlyTrue_EditableTrue_AllowInitialValueFalse
            End Get
            Set
                If ((Me._readOnlyTrue_EditableTrue_AllowInitialValueFalse = value)  _
                            = false) Then
                    Me.OnReadOnlyTrue_EditableTrue_AllowInitialValueFalseChanging(value)
                    Me.ValidateProperty("ReadOnlyTrue_EditableTrue_AllowInitialValueFalse", value)
                    Me._readOnlyTrue_EditableTrue_AllowInitialValueFalse = value
                    Me.RaisePropertyChanged("ReadOnlyTrue_EditableTrue_AllowInitialValueFalse")
                    Me.OnReadOnlyTrue_EditableTrue_AllowInitialValueFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Timestamp' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Timestamp() As Integer
            Get
                Return Me._timestamp
            End Get
            Set
                If ((Me._timestamp = value)  _
                            = false) Then
                    Me.OnTimestampChanging(value)
                    Me.ValidateProperty("Timestamp", value)
                    Me._timestamp = value
                    Me.RaisePropertyChanged("Timestamp")
                    Me.OnTimestampChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Timestamp_EditableFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Timestamp_EditableFalse() As Integer
            Get
                Return Me._timestamp_EditableFalse
            End Get
            Set
                If ((Me._timestamp_EditableFalse = value)  _
                            = false) Then
                    Me.OnTimestamp_EditableFalseChanging(value)
                    Me.ValidateProperty("Timestamp_EditableFalse", value)
                    Me._timestamp_EditableFalse = value
                    Me.RaisePropertyChanged("Timestamp_EditableFalse")
                    Me.OnTimestamp_EditableFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Timestamp_EditableFalse_AllowInitialValueTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Timestamp_EditableFalse_AllowInitialValueTrue() As Integer
            Get
                Return Me._timestamp_EditableFalse_AllowInitialValueTrue
            End Get
            Set
                If ((Me._timestamp_EditableFalse_AllowInitialValueTrue = value)  _
                            = false) Then
                    Me.OnTimestamp_EditableFalse_AllowInitialValueTrueChanging(value)
                    Me.ValidateProperty("Timestamp_EditableFalse_AllowInitialValueTrue", value)
                    Me._timestamp_EditableFalse_AllowInitialValueTrue = value
                    Me.RaisePropertyChanged("Timestamp_EditableFalse_AllowInitialValueTrue")
                    Me.OnTimestamp_EditableFalse_AllowInitialValueTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Timestamp_EditableTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Timestamp_EditableTrue() As Integer
            Get
                Return Me._timestamp_EditableTrue
            End Get
            Set
                If ((Me._timestamp_EditableTrue = value)  _
                            = false) Then
                    Me.OnTimestamp_EditableTrueChanging(value)
                    Me.RaiseDataMemberChanging("Timestamp_EditableTrue")
                    Me.ValidateProperty("Timestamp_EditableTrue", value)
                    Me._timestamp_EditableTrue = value
                    Me.RaiseDataMemberChanged("Timestamp_EditableTrue")
                    Me.OnTimestamp_EditableTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Timestamp_EditableTrue_AllowInitialValueFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(true, AllowInitialValue:=false),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Timestamp_EditableTrue_AllowInitialValueFalse() As Integer
            Get
                Return Me._timestamp_EditableTrue_AllowInitialValueFalse
            End Get
            Set
                If ((Me._timestamp_EditableTrue_AllowInitialValueFalse = value)  _
                            = false) Then
                    Me.OnTimestamp_EditableTrue_AllowInitialValueFalseChanging(value)
                    Me.RaiseDataMemberChanging("Timestamp_EditableTrue_AllowInitialValueFalse")
                    Me.ValidateProperty("Timestamp_EditableTrue_AllowInitialValueFalse", value)
                    Me._timestamp_EditableTrue_AllowInitialValueFalse = value
                    Me.RaiseDataMemberChanged("Timestamp_EditableTrue_AllowInitialValueFalse")
                    Me.OnTimestamp_EditableTrue_AllowInitialValueFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Timestamp_ReadOnlyFalse' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         [ReadOnly](false),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Timestamp_ReadOnlyFalse() As Integer
            Get
                Return Me._timestamp_ReadOnlyFalse
            End Get
            Set
                If ((Me._timestamp_ReadOnlyFalse = value)  _
                            = false) Then
                    Me.OnTimestamp_ReadOnlyFalseChanging(value)
                    Me.ValidateProperty("Timestamp_ReadOnlyFalse", value)
                    Me._timestamp_ReadOnlyFalse = value
                    Me.RaisePropertyChanged("Timestamp_ReadOnlyFalse")
                    Me.OnTimestamp_ReadOnlyFalseChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Timestamp_ReadOnlyTrue' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false),  _
         [ReadOnly](true),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Timestamp_ReadOnlyTrue() As Integer
            Get
                Return Me._timestamp_ReadOnlyTrue
            End Get
            Set
                If ((Me._timestamp_ReadOnlyTrue = value)  _
                            = false) Then
                    Me.OnTimestamp_ReadOnlyTrueChanging(value)
                    Me.ValidateProperty("Timestamp_ReadOnlyTrue", value)
                    Me._timestamp_ReadOnlyTrue = value
                    Me.RaisePropertyChanged("Timestamp_ReadOnlyTrue")
                    Me.OnTimestamp_ReadOnlyTrueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return EntityKey.Create(Me._key_EditableFalse, Me._key_EditableFalse_AllowInitialValueTrue, Me._key_EditableTrue, Me._key_EditableTrue_AllowInitialValueFalse, Me._key_ReadOnlyFalse, Me._key_ReadOnlyTrue, Me._key_Timestamp, Me._key_Timestamp_ReadOnlyFalse, Me._key_Timestamp_ReadOnlyTrue, Me._keyField)
        End Function
    End Class
    
    ''' <summary>
    ''' The 'EntityWithDataContract' entity class.
    ''' </summary>
    <DataContract([Namespace]:="CustomNamespace", Name:="CustomName")>  _
    Partial Public NotInheritable Class EntityWithDataContract
        Inherits Entity
        
        Private _data As String
        
        Private _id As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnDataChanged()
        End Sub
        Private Partial Sub OnIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIdChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="EntityWithDataContract"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Data' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Data() As String
            Get
                Return Me._data
            End Get
            Set
                If (String.Equals(Me._data, value) = false) Then
                    Me.OnDataChanging(value)
                    Me.RaiseDataMemberChanging("Data")
                    Me.ValidateProperty("Data", value)
                    Me._data = value
                    Me.RaiseDataMemberChanged("Data")
                    Me.OnDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Id' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Id() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIdChanging(value)
                    Me.ValidateProperty("Id", value)
                    Me._id = value
                    Me.RaisePropertyChanged("Id")
                    Me.OnIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'EntityWithDataContract2' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class EntityWithDataContract2
        Inherits Entity
        
        Private _data As String
        
        Private _id As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnDataChanged()
        End Sub
        Private Partial Sub OnIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIdChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="EntityWithDataContract2"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Data' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Data() As String
            Get
                Return Me._data
            End Get
            Set
                If (String.Equals(Me._data, value) = false) Then
                    Me.OnDataChanging(value)
                    Me.RaiseDataMemberChanging("Data")
                    Me.ValidateProperty("Data", value)
                    Me._data = value
                    Me.RaiseDataMemberChanged("Data")
                    Me.OnDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Id' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Id() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIdChanging(value)
                    Me.ValidateProperty("Id", value)
                    Me._id = value
                    Me.RaisePropertyChanged("Id")
                    Me.OnIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'EntityWithDefaultDefaultValue' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class EntityWithDefaultDefaultValue
        Inherits Entity
        
        Private _boolProp As Boolean
        
        Private _byteProp As Byte
        
        Private _charProp As Char
        
        Private _floatProp As Single
        
        Private _id As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnBoolPropChanging(ByVal value As Boolean)
        End Sub
        Private Partial Sub OnBoolPropChanged()
        End Sub
        Private Partial Sub OnBytePropChanging(ByVal value As Byte)
        End Sub
        Private Partial Sub OnBytePropChanged()
        End Sub
        Private Partial Sub OnCharPropChanging(ByVal value As Char)
        End Sub
        Private Partial Sub OnCharPropChanged()
        End Sub
        Private Partial Sub OnFloatPropChanging(ByVal value As Single)
        End Sub
        Private Partial Sub OnFloatPropChanged()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="EntityWithDefaultDefaultValue"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'BoolProp' value.
        ''' </summary>
        <DataMember(),  _
         DefaultValue(false)>  _
        Public Property BoolProp() As Boolean
            Get
                Return Me._boolProp
            End Get
            Set
                If ((Me._boolProp = value)  _
                            = false) Then
                    Me.OnBoolPropChanging(value)
                    Me.RaiseDataMemberChanging("BoolProp")
                    Me.ValidateProperty("BoolProp", value)
                    Me._boolProp = value
                    Me.RaiseDataMemberChanged("BoolProp")
                    Me.OnBoolPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ByteProp' value.
        ''' </summary>
        <DataMember(),  _
         DefaultValue(0)>  _
        Public Property ByteProp() As Byte
            Get
                Return Me._byteProp
            End Get
            Set
                If ((Me._byteProp = value)  _
                            = false) Then
                    Me.OnBytePropChanging(value)
                    Me.RaiseDataMemberChanging("ByteProp")
                    Me.ValidateProperty("ByteProp", value)
                    Me._byteProp = value
                    Me.RaiseDataMemberChanged("ByteProp")
                    Me.OnBytePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CharProp' value.
        ''' </summary>
        <DataMember(),  _
         DefaultValue(Global.Microsoft.VisualBasic.ChrW(0))>  _
        Public Property CharProp() As Char
            Get
                Return Me._charProp
            End Get
            Set
                If ((Me._charProp = value)  _
                            = false) Then
                    Me.OnCharPropChanging(value)
                    Me.RaiseDataMemberChanging("CharProp")
                    Me.ValidateProperty("CharProp", value)
                    Me._charProp = value
                    Me.RaiseDataMemberChanged("CharProp")
                    Me.OnCharPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'FloatProp' value.
        ''' </summary>
        <DataMember(),  _
         DefaultValue(0)>  _
        Public Property FloatProp() As Single
            Get
                Return Me._floatProp
            End Get
            Set
                If ((Me._floatProp = value)  _
                            = false) Then
                    Me.OnFloatPropChanging(value)
                    Me.RaiseDataMemberChanging("FloatProp")
                    Me.ValidateProperty("FloatProp", value)
                    Me._floatProp = value
                    Me.RaiseDataMemberChanged("FloatProp")
                    Me.OnFloatPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         DefaultValue(0),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'EntityWithXElement' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class EntityWithXElement
        Inherits Entity
        
        Private _id As Integer
        
        Private _xElem As XElement
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnXElemChanging(ByVal value As XElement)
        End Sub
        Private Partial Sub OnXElemChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="EntityWithXElement"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'XElem' value.
        ''' </summary>
        <DataMember()>  _
        Public Property XElem() As XElement
            Get
                Return Me._xElem
            End Get
            Set
                If (Object.Equals(Me._xElem, value) = false) Then
                    Me.OnXElemChanging(value)
                    Me.RaiseDataMemberChanging("XElem")
                    Me.ValidateProperty("XElem", value)
                    Me._xElem = value
                    Me.RaiseDataMemberChanged("XElem")
                    Me.OnXElemChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'MixedType' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class MixedType
        Inherits Entity
        
        Private _binaryProp() As Byte
        
        Private _booleanProp As Boolean
        
        Private _byteArrayProp() As Byte
        
        Private _byteProp As Byte
        
        Private _charProp As Char
        
        Private _dateTimeOffsetProp As DateTimeOffset
        
        Private _dateTimeOffsetsCollectionProp As IEnumerable(Of DateTimeOffset)
        
        Private _dateTimeProp As DateTime
        
        Private _dateTimesCollectionProp As IEnumerable(Of DateTime)
        
        Private _decimalProp As Decimal
        
        Private _dictionaryDateTimeOffsetProp As Dictionary(Of DateTimeOffset, DateTimeOffset)
        
        Private _dictionaryDateTimeProp As Dictionary(Of DateTime, DateTime)
        
        Private _dictionaryGuidProp As Dictionary(Of Guid, Guid)
        
        Private _dictionaryStringProp As Dictionary(Of String, String)
        
        Private _dictionaryTestEnumProp As Dictionary(Of TestEnum, TestEnum)
        
        Private _dictionaryXElementProp As Dictionary(Of XElement, XElement)
        
        Private _doubleProp As Double
        
        Private _enumProp As TestEnum
        
        Private _enumsProp() As TestEnum
        
        Private _guidProp As Guid
        
        Private _guidsProp() As Guid
        
        Private _id As String
        
        Private _int16Prop As Short
        
        Private _int32Prop As Integer
        
        Private _int64Prop As Long
        
        Private _intsProp() As Integer
        
        Private _nullableBooleanProp As Nullable(Of Boolean)
        
        Private _nullableByteProp As Nullable(Of Byte)
        
        Private _nullableCharProp As Nullable(Of Char)
        
        Private _nullableDateTimeOffsetCollectionProp As IEnumerable(Of Nullable(Of DateTimeOffset))
        
        Private _nullableDateTimeOffsetProp As Nullable(Of DateTimeOffset)
        
        Private _nullableDateTimeProp As Nullable(Of DateTime)
        
        Private _nullableDateTimesCollectionProp As IEnumerable(Of Nullable(Of DateTime))
        
        Private _nullableDecimalProp As Nullable(Of Decimal)
        
        Private _nullableDictionaryDateTimeOffsetProp As Dictionary(Of DateTimeOffset, Nullable(Of DateTimeOffset))
        
        Private _nullableDictionaryDateTimeProp As Dictionary(Of DateTime, Nullable(Of DateTime))
        
        Private _nullableDoubleProp As Nullable(Of Double)
        
        Private _nullableEnumProp As Nullable(Of TestEnum)
        
        Private _nullableEnumsArrayProp() As Nullable(Of DateTime)
        
        Private _nullableGuidProp As Nullable(Of Guid)
        
        Private _nullableInt16Prop As Nullable(Of Short)
        
        Private _nullableInt32Prop As Nullable(Of Integer)
        
        Private _nullableInt64Prop As Nullable(Of Long)
        
        Private _nullableSByteProp As Nullable(Of SByte)
        
        Private _nullableSingleProp As Nullable(Of Single)
        
        Private _nullableTimeSpanListProp As IEnumerable(Of Nullable(Of TimeSpan))
        
        Private _nullableTimeSpanProp As Nullable(Of TimeSpan)
        
        Private _nullableUInt16Prop As Nullable(Of UShort)
        
        Private _nullableUInt32Prop As Nullable(Of UInteger)
        
        Private _nullableUInt64Prop As Nullable(Of ULong)
        
        Private _sByteProp As SByte
        
        Private _singleProp As Single
        
        Private _stringProp As String
        
        Private _stringsProp As IEnumerable(Of String)
        
        Private _timeSpanListProp As IEnumerable(Of TimeSpan)
        
        Private _timeSpanProp As TimeSpan
        
        Private _uInt16Prop As UShort
        
        Private _uInt32Prop As UInteger
        
        Private _uInt64Prop As ULong
        
        Private _uInt64sProp() As ULong
        
        Private _uriProp As Uri
        
        Private _xElementProp As XElement
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnBinaryPropChanging(ByVal value() As Byte)
        End Sub
        Private Partial Sub OnBinaryPropChanged()
        End Sub
        Private Partial Sub OnBooleanPropChanging(ByVal value As Boolean)
        End Sub
        Private Partial Sub OnBooleanPropChanged()
        End Sub
        Private Partial Sub OnByteArrayPropChanging(ByVal value() As Byte)
        End Sub
        Private Partial Sub OnByteArrayPropChanged()
        End Sub
        Private Partial Sub OnBytePropChanging(ByVal value As Byte)
        End Sub
        Private Partial Sub OnBytePropChanged()
        End Sub
        Private Partial Sub OnCharPropChanging(ByVal value As Char)
        End Sub
        Private Partial Sub OnCharPropChanged()
        End Sub
        Private Partial Sub OnDateTimeOffsetPropChanging(ByVal value As DateTimeOffset)
        End Sub
        Private Partial Sub OnDateTimeOffsetPropChanged()
        End Sub
        Private Partial Sub OnDateTimeOffsetsCollectionPropChanging(ByVal value As IEnumerable(Of DateTimeOffset))
        End Sub
        Private Partial Sub OnDateTimeOffsetsCollectionPropChanged()
        End Sub
        Private Partial Sub OnDateTimePropChanging(ByVal value As DateTime)
        End Sub
        Private Partial Sub OnDateTimePropChanged()
        End Sub
        Private Partial Sub OnDateTimesCollectionPropChanging(ByVal value As IEnumerable(Of DateTime))
        End Sub
        Private Partial Sub OnDateTimesCollectionPropChanged()
        End Sub
        Private Partial Sub OnDecimalPropChanging(ByVal value As Decimal)
        End Sub
        Private Partial Sub OnDecimalPropChanged()
        End Sub
        Private Partial Sub OnDictionaryDateTimeOffsetPropChanging(ByVal value As Dictionary(Of DateTimeOffset, DateTimeOffset))
        End Sub
        Private Partial Sub OnDictionaryDateTimeOffsetPropChanged()
        End Sub
        Private Partial Sub OnDictionaryDateTimePropChanging(ByVal value As Dictionary(Of DateTime, DateTime))
        End Sub
        Private Partial Sub OnDictionaryDateTimePropChanged()
        End Sub
        Private Partial Sub OnDictionaryGuidPropChanging(ByVal value As Dictionary(Of Guid, Guid))
        End Sub
        Private Partial Sub OnDictionaryGuidPropChanged()
        End Sub
        Private Partial Sub OnDictionaryStringPropChanging(ByVal value As Dictionary(Of String, String))
        End Sub
        Private Partial Sub OnDictionaryStringPropChanged()
        End Sub
        Private Partial Sub OnDictionaryTestEnumPropChanging(ByVal value As Dictionary(Of TestEnum, TestEnum))
        End Sub
        Private Partial Sub OnDictionaryTestEnumPropChanged()
        End Sub
        Private Partial Sub OnDictionaryXElementPropChanging(ByVal value As Dictionary(Of XElement, XElement))
        End Sub
        Private Partial Sub OnDictionaryXElementPropChanged()
        End Sub
        Private Partial Sub OnDoublePropChanging(ByVal value As Double)
        End Sub
        Private Partial Sub OnDoublePropChanged()
        End Sub
        Private Partial Sub OnEnumPropChanging(ByVal value As TestEnum)
        End Sub
        Private Partial Sub OnEnumPropChanged()
        End Sub
        Private Partial Sub OnEnumsPropChanging(ByVal value() As TestEnum)
        End Sub
        Private Partial Sub OnEnumsPropChanged()
        End Sub
        Private Partial Sub OnGuidPropChanging(ByVal value As Guid)
        End Sub
        Private Partial Sub OnGuidPropChanged()
        End Sub
        Private Partial Sub OnGuidsPropChanging(ByVal value() As Guid)
        End Sub
        Private Partial Sub OnGuidsPropChanged()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnInt16PropChanging(ByVal value As Short)
        End Sub
        Private Partial Sub OnInt16PropChanged()
        End Sub
        Private Partial Sub OnInt32PropChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnInt32PropChanged()
        End Sub
        Private Partial Sub OnInt64PropChanging(ByVal value As Long)
        End Sub
        Private Partial Sub OnInt64PropChanged()
        End Sub
        Private Partial Sub OnIntsPropChanging(ByVal value() As Integer)
        End Sub
        Private Partial Sub OnIntsPropChanged()
        End Sub
        Private Partial Sub OnNullableBooleanPropChanging(ByVal value As Nullable(Of Boolean))
        End Sub
        Private Partial Sub OnNullableBooleanPropChanged()
        End Sub
        Private Partial Sub OnNullableBytePropChanging(ByVal value As Nullable(Of Byte))
        End Sub
        Private Partial Sub OnNullableBytePropChanged()
        End Sub
        Private Partial Sub OnNullableCharPropChanging(ByVal value As Nullable(Of Char))
        End Sub
        Private Partial Sub OnNullableCharPropChanged()
        End Sub
        Private Partial Sub OnNullableDateTimeOffsetCollectionPropChanging(ByVal value As IEnumerable(Of Nullable(Of DateTimeOffset)))
        End Sub
        Private Partial Sub OnNullableDateTimeOffsetCollectionPropChanged()
        End Sub
        Private Partial Sub OnNullableDateTimeOffsetPropChanging(ByVal value As Nullable(Of DateTimeOffset))
        End Sub
        Private Partial Sub OnNullableDateTimeOffsetPropChanged()
        End Sub
        Private Partial Sub OnNullableDateTimePropChanging(ByVal value As Nullable(Of DateTime))
        End Sub
        Private Partial Sub OnNullableDateTimePropChanged()
        End Sub
        Private Partial Sub OnNullableDateTimesCollectionPropChanging(ByVal value As IEnumerable(Of Nullable(Of DateTime)))
        End Sub
        Private Partial Sub OnNullableDateTimesCollectionPropChanged()
        End Sub
        Private Partial Sub OnNullableDecimalPropChanging(ByVal value As Nullable(Of Decimal))
        End Sub
        Private Partial Sub OnNullableDecimalPropChanged()
        End Sub
        Private Partial Sub OnNullableDictionaryDateTimeOffsetPropChanging(ByVal value As Dictionary(Of DateTimeOffset, Nullable(Of DateTimeOffset)))
        End Sub
        Private Partial Sub OnNullableDictionaryDateTimeOffsetPropChanged()
        End Sub
        Private Partial Sub OnNullableDictionaryDateTimePropChanging(ByVal value As Dictionary(Of DateTime, Nullable(Of DateTime)))
        End Sub
        Private Partial Sub OnNullableDictionaryDateTimePropChanged()
        End Sub
        Private Partial Sub OnNullableDoublePropChanging(ByVal value As Nullable(Of Double))
        End Sub
        Private Partial Sub OnNullableDoublePropChanged()
        End Sub
        Private Partial Sub OnNullableEnumPropChanging(ByVal value As Nullable(Of TestEnum))
        End Sub
        Private Partial Sub OnNullableEnumPropChanged()
        End Sub
        Private Partial Sub OnNullableEnumsArrayPropChanging(ByVal value() As Nullable(Of DateTime))
        End Sub
        Private Partial Sub OnNullableEnumsArrayPropChanged()
        End Sub
        Private Partial Sub OnNullableGuidPropChanging(ByVal value As Nullable(Of Guid))
        End Sub
        Private Partial Sub OnNullableGuidPropChanged()
        End Sub
        Private Partial Sub OnNullableInt16PropChanging(ByVal value As Nullable(Of Short))
        End Sub
        Private Partial Sub OnNullableInt16PropChanged()
        End Sub
        Private Partial Sub OnNullableInt32PropChanging(ByVal value As Nullable(Of Integer))
        End Sub
        Private Partial Sub OnNullableInt32PropChanged()
        End Sub
        Private Partial Sub OnNullableInt64PropChanging(ByVal value As Nullable(Of Long))
        End Sub
        Private Partial Sub OnNullableInt64PropChanged()
        End Sub
        Private Partial Sub OnNullableSBytePropChanging(ByVal value As Nullable(Of SByte))
        End Sub
        Private Partial Sub OnNullableSBytePropChanged()
        End Sub
        Private Partial Sub OnNullableSinglePropChanging(ByVal value As Nullable(Of Single))
        End Sub
        Private Partial Sub OnNullableSinglePropChanged()
        End Sub
        Private Partial Sub OnNullableTimeSpanListPropChanging(ByVal value As IEnumerable(Of Nullable(Of TimeSpan)))
        End Sub
        Private Partial Sub OnNullableTimeSpanListPropChanged()
        End Sub
        Private Partial Sub OnNullableTimeSpanPropChanging(ByVal value As Nullable(Of TimeSpan))
        End Sub
        Private Partial Sub OnNullableTimeSpanPropChanged()
        End Sub
        Private Partial Sub OnNullableUInt16PropChanging(ByVal value As Nullable(Of UShort))
        End Sub
        Private Partial Sub OnNullableUInt16PropChanged()
        End Sub
        Private Partial Sub OnNullableUInt32PropChanging(ByVal value As Nullable(Of UInteger))
        End Sub
        Private Partial Sub OnNullableUInt32PropChanged()
        End Sub
        Private Partial Sub OnNullableUInt64PropChanging(ByVal value As Nullable(Of ULong))
        End Sub
        Private Partial Sub OnNullableUInt64PropChanged()
        End Sub
        Private Partial Sub OnSBytePropChanging(ByVal value As SByte)
        End Sub
        Private Partial Sub OnSBytePropChanged()
        End Sub
        Private Partial Sub OnSinglePropChanging(ByVal value As Single)
        End Sub
        Private Partial Sub OnSinglePropChanged()
        End Sub
        Private Partial Sub OnStringPropChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnStringPropChanged()
        End Sub
        Private Partial Sub OnStringsPropChanging(ByVal value As IEnumerable(Of String))
        End Sub
        Private Partial Sub OnStringsPropChanged()
        End Sub
        Private Partial Sub OnTimeSpanListPropChanging(ByVal value As IEnumerable(Of TimeSpan))
        End Sub
        Private Partial Sub OnTimeSpanListPropChanged()
        End Sub
        Private Partial Sub OnTimeSpanPropChanging(ByVal value As TimeSpan)
        End Sub
        Private Partial Sub OnTimeSpanPropChanged()
        End Sub
        Private Partial Sub OnUInt16PropChanging(ByVal value As UShort)
        End Sub
        Private Partial Sub OnUInt16PropChanged()
        End Sub
        Private Partial Sub OnUInt32PropChanging(ByVal value As UInteger)
        End Sub
        Private Partial Sub OnUInt32PropChanged()
        End Sub
        Private Partial Sub OnUInt64PropChanging(ByVal value As ULong)
        End Sub
        Private Partial Sub OnUInt64PropChanged()
        End Sub
        Private Partial Sub OnUInt64sPropChanging(ByVal value() As ULong)
        End Sub
        Private Partial Sub OnUInt64sPropChanged()
        End Sub
        Private Partial Sub OnUriPropChanging(ByVal value As Uri)
        End Sub
        Private Partial Sub OnUriPropChanged()
        End Sub
        Private Partial Sub OnXElementPropChanging(ByVal value As XElement)
        End Sub
        Private Partial Sub OnXElementPropChanged()
        End Sub
        Private Partial Sub OnTestNullablePredefinedInvoking(ByVal d As Nullable(Of Decimal), ByVal dt As Nullable(Of DateTime), ByVal ts As Nullable(Of TimeSpan), ByVal g As Nullable(Of Guid), ByVal en As Nullable(Of TestEnum), ByVal dto As Nullable(Of DateTimeOffset))
        End Sub
        Private Partial Sub OnTestNullablePredefinedInvoked()
        End Sub
        Private Partial Sub OnTestNullablePrimitiveInvoking(ByVal b1 As Nullable(Of Boolean), ByVal b2 As Nullable(Of Byte), ByVal sb As Nullable(Of SByte), ByVal int16 As Nullable(Of Short), ByVal uint16 As Nullable(Of UShort), ByVal int32 As Nullable(Of Integer), ByVal uint32 As Nullable(Of UInteger), ByVal int64 As Nullable(Of Long), ByVal uint64 As Nullable(Of ULong), ByVal ch As Nullable(Of Char), ByVal d As Nullable(Of Double), ByVal s As Nullable(Of Single))
        End Sub
        Private Partial Sub OnTestNullablePrimitiveInvoked()
        End Sub
        Private Partial Sub OnTestPredefinedInvoking(ByVal s As String, ByVal d As Decimal, ByVal dt As DateTime, ByVal ts As TimeSpan, ByVal strings As IEnumerable(Of String), ByVal uri As Uri, ByVal g As Guid, ByVal b() As Byte, ByVal bArray() As Byte, ByVal en As TestEnum, ByVal dictionary As Dictionary(Of String, String), ByVal dto As DateTimeOffset)
        End Sub
        Private Partial Sub OnTestPredefinedInvoked()
        End Sub
        Private Partial Sub OnTestPrimitiveInvoking(ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single)
        End Sub
        Private Partial Sub OnTestPrimitiveInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MixedType"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'BinaryProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property BinaryProp() As Byte()
            Get
                Return Me._binaryProp
            End Get
            Set
                If (Object.Equals(Me._binaryProp, value) = false) Then
                    Me.OnBinaryPropChanging(value)
                    Me.RaiseDataMemberChanging("BinaryProp")
                    Me.ValidateProperty("BinaryProp", value)
                    Me._binaryProp = value
                    Me.RaiseDataMemberChanged("BinaryProp")
                    Me.OnBinaryPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'BooleanProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property BooleanProp() As Boolean
            Get
                Return Me._booleanProp
            End Get
            Set
                If ((Me._booleanProp = value)  _
                            = false) Then
                    Me.OnBooleanPropChanging(value)
                    Me.RaiseDataMemberChanging("BooleanProp")
                    Me.ValidateProperty("BooleanProp", value)
                    Me._booleanProp = value
                    Me.RaiseDataMemberChanged("BooleanProp")
                    Me.OnBooleanPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ByteArrayProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property ByteArrayProp() As Byte()
            Get
                Return Me._byteArrayProp
            End Get
            Set
                If (Object.Equals(Me._byteArrayProp, value) = false) Then
                    Me.OnByteArrayPropChanging(value)
                    Me.RaiseDataMemberChanging("ByteArrayProp")
                    Me.ValidateProperty("ByteArrayProp", value)
                    Me._byteArrayProp = value
                    Me.RaiseDataMemberChanged("ByteArrayProp")
                    Me.OnByteArrayPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ByteProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property ByteProp() As Byte
            Get
                Return Me._byteProp
            End Get
            Set
                If ((Me._byteProp = value)  _
                            = false) Then
                    Me.OnBytePropChanging(value)
                    Me.RaiseDataMemberChanging("ByteProp")
                    Me.ValidateProperty("ByteProp", value)
                    Me._byteProp = value
                    Me.RaiseDataMemberChanged("ByteProp")
                    Me.OnBytePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CharProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property CharProp() As Char
            Get
                Return Me._charProp
            End Get
            Set
                If ((Me._charProp = value)  _
                            = false) Then
                    Me.OnCharPropChanging(value)
                    Me.RaiseDataMemberChanging("CharProp")
                    Me.ValidateProperty("CharProp", value)
                    Me._charProp = value
                    Me.RaiseDataMemberChanged("CharProp")
                    Me.OnCharPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DateTimeOffsetProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DateTimeOffsetProp() As DateTimeOffset
            Get
                Return Me._dateTimeOffsetProp
            End Get
            Set
                If ((Me._dateTimeOffsetProp = value)  _
                            = false) Then
                    Me.OnDateTimeOffsetPropChanging(value)
                    Me.RaiseDataMemberChanging("DateTimeOffsetProp")
                    Me.ValidateProperty("DateTimeOffsetProp", value)
                    Me._dateTimeOffsetProp = value
                    Me.RaiseDataMemberChanged("DateTimeOffsetProp")
                    Me.OnDateTimeOffsetPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DateTimeOffsetsCollectionProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DateTimeOffsetsCollectionProp() As IEnumerable(Of DateTimeOffset)
            Get
                Return Me._dateTimeOffsetsCollectionProp
            End Get
            Set
                If (Object.Equals(Me._dateTimeOffsetsCollectionProp, value) = false) Then
                    Me.OnDateTimeOffsetsCollectionPropChanging(value)
                    Me.RaiseDataMemberChanging("DateTimeOffsetsCollectionProp")
                    Me.ValidateProperty("DateTimeOffsetsCollectionProp", value)
                    Me._dateTimeOffsetsCollectionProp = value
                    Me.RaiseDataMemberChanged("DateTimeOffsetsCollectionProp")
                    Me.OnDateTimeOffsetsCollectionPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DateTimeProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DateTimeProp() As DateTime
            Get
                Return Me._dateTimeProp
            End Get
            Set
                If ((Me._dateTimeProp = value)  _
                            = false) Then
                    Me.OnDateTimePropChanging(value)
                    Me.RaiseDataMemberChanging("DateTimeProp")
                    Me.ValidateProperty("DateTimeProp", value)
                    Me._dateTimeProp = value
                    Me.RaiseDataMemberChanged("DateTimeProp")
                    Me.OnDateTimePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DateTimesCollectionProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DateTimesCollectionProp() As IEnumerable(Of DateTime)
            Get
                Return Me._dateTimesCollectionProp
            End Get
            Set
                If (Object.Equals(Me._dateTimesCollectionProp, value) = false) Then
                    Me.OnDateTimesCollectionPropChanging(value)
                    Me.RaiseDataMemberChanging("DateTimesCollectionProp")
                    Me.ValidateProperty("DateTimesCollectionProp", value)
                    Me._dateTimesCollectionProp = value
                    Me.RaiseDataMemberChanged("DateTimesCollectionProp")
                    Me.OnDateTimesCollectionPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DecimalProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DecimalProp() As Decimal
            Get
                Return Me._decimalProp
            End Get
            Set
                If ((Me._decimalProp = value)  _
                            = false) Then
                    Me.OnDecimalPropChanging(value)
                    Me.RaiseDataMemberChanging("DecimalProp")
                    Me.ValidateProperty("DecimalProp", value)
                    Me._decimalProp = value
                    Me.RaiseDataMemberChanged("DecimalProp")
                    Me.OnDecimalPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DictionaryDateTimeOffsetProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DictionaryDateTimeOffsetProp() As Dictionary(Of DateTimeOffset, DateTimeOffset)
            Get
                Return Me._dictionaryDateTimeOffsetProp
            End Get
            Set
                If (Object.Equals(Me._dictionaryDateTimeOffsetProp, value) = false) Then
                    Me.OnDictionaryDateTimeOffsetPropChanging(value)
                    Me.RaiseDataMemberChanging("DictionaryDateTimeOffsetProp")
                    Me.ValidateProperty("DictionaryDateTimeOffsetProp", value)
                    Me._dictionaryDateTimeOffsetProp = value
                    Me.RaiseDataMemberChanged("DictionaryDateTimeOffsetProp")
                    Me.OnDictionaryDateTimeOffsetPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DictionaryDateTimeProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DictionaryDateTimeProp() As Dictionary(Of DateTime, DateTime)
            Get
                Return Me._dictionaryDateTimeProp
            End Get
            Set
                If (Object.Equals(Me._dictionaryDateTimeProp, value) = false) Then
                    Me.OnDictionaryDateTimePropChanging(value)
                    Me.RaiseDataMemberChanging("DictionaryDateTimeProp")
                    Me.ValidateProperty("DictionaryDateTimeProp", value)
                    Me._dictionaryDateTimeProp = value
                    Me.RaiseDataMemberChanged("DictionaryDateTimeProp")
                    Me.OnDictionaryDateTimePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DictionaryGuidProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DictionaryGuidProp() As Dictionary(Of Guid, Guid)
            Get
                Return Me._dictionaryGuidProp
            End Get
            Set
                If (Object.Equals(Me._dictionaryGuidProp, value) = false) Then
                    Me.OnDictionaryGuidPropChanging(value)
                    Me.RaiseDataMemberChanging("DictionaryGuidProp")
                    Me.ValidateProperty("DictionaryGuidProp", value)
                    Me._dictionaryGuidProp = value
                    Me.RaiseDataMemberChanged("DictionaryGuidProp")
                    Me.OnDictionaryGuidPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DictionaryStringProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DictionaryStringProp() As Dictionary(Of String, String)
            Get
                Return Me._dictionaryStringProp
            End Get
            Set
                If (Object.Equals(Me._dictionaryStringProp, value) = false) Then
                    Me.OnDictionaryStringPropChanging(value)
                    Me.RaiseDataMemberChanging("DictionaryStringProp")
                    Me.ValidateProperty("DictionaryStringProp", value)
                    Me._dictionaryStringProp = value
                    Me.RaiseDataMemberChanged("DictionaryStringProp")
                    Me.OnDictionaryStringPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DictionaryTestEnumProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DictionaryTestEnumProp() As Dictionary(Of TestEnum, TestEnum)
            Get
                Return Me._dictionaryTestEnumProp
            End Get
            Set
                If (Object.Equals(Me._dictionaryTestEnumProp, value) = false) Then
                    Me.OnDictionaryTestEnumPropChanging(value)
                    Me.RaiseDataMemberChanging("DictionaryTestEnumProp")
                    Me.ValidateProperty("DictionaryTestEnumProp", value)
                    Me._dictionaryTestEnumProp = value
                    Me.RaiseDataMemberChanged("DictionaryTestEnumProp")
                    Me.OnDictionaryTestEnumPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DictionaryXElementProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DictionaryXElementProp() As Dictionary(Of XElement, XElement)
            Get
                Return Me._dictionaryXElementProp
            End Get
            Set
                If (Object.Equals(Me._dictionaryXElementProp, value) = false) Then
                    Me.OnDictionaryXElementPropChanging(value)
                    Me.RaiseDataMemberChanging("DictionaryXElementProp")
                    Me.ValidateProperty("DictionaryXElementProp", value)
                    Me._dictionaryXElementProp = value
                    Me.RaiseDataMemberChanged("DictionaryXElementProp")
                    Me.OnDictionaryXElementPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'DoubleProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property DoubleProp() As Double
            Get
                Return Me._doubleProp
            End Get
            Set
                If ((Me._doubleProp = value)  _
                            = false) Then
                    Me.OnDoublePropChanging(value)
                    Me.RaiseDataMemberChanging("DoubleProp")
                    Me.ValidateProperty("DoubleProp", value)
                    Me._doubleProp = value
                    Me.RaiseDataMemberChanged("DoubleProp")
                    Me.OnDoublePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'EnumProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property EnumProp() As TestEnum
            Get
                Return Me._enumProp
            End Get
            Set
                If ((Me._enumProp = value)  _
                            = false) Then
                    Me.OnEnumPropChanging(value)
                    Me.RaiseDataMemberChanging("EnumProp")
                    Me.ValidateProperty("EnumProp", value)
                    Me._enumProp = value
                    Me.RaiseDataMemberChanged("EnumProp")
                    Me.OnEnumPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'EnumsProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property EnumsProp() As TestEnum()
            Get
                Return Me._enumsProp
            End Get
            Set
                If (Object.Equals(Me._enumsProp, value) = false) Then
                    Me.OnEnumsPropChanging(value)
                    Me.RaiseDataMemberChanging("EnumsProp")
                    Me.ValidateProperty("EnumsProp", value)
                    Me._enumsProp = value
                    Me.RaiseDataMemberChanged("EnumsProp")
                    Me.OnEnumsPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'GuidProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property GuidProp() As Guid
            Get
                Return Me._guidProp
            End Get
            Set
                If ((Me._guidProp = value)  _
                            = false) Then
                    Me.OnGuidPropChanging(value)
                    Me.RaiseDataMemberChanging("GuidProp")
                    Me.ValidateProperty("GuidProp", value)
                    Me._guidProp = value
                    Me.RaiseDataMemberChanged("GuidProp")
                    Me.OnGuidPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'GuidsProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property GuidsProp() As Guid()
            Get
                Return Me._guidsProp
            End Get
            Set
                If (Object.Equals(Me._guidsProp, value) = false) Then
                    Me.OnGuidsPropChanging(value)
                    Me.RaiseDataMemberChanging("GuidsProp")
                    Me.ValidateProperty("GuidsProp", value)
                    Me._guidsProp = value
                    Me.RaiseDataMemberChanged("GuidsProp")
                    Me.OnGuidsPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As String
            Get
                Return Me._id
            End Get
            Set
                If (String.Equals(Me._id, value) = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Int16Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Int16Prop() As Short
            Get
                Return Me._int16Prop
            End Get
            Set
                If ((Me._int16Prop = value)  _
                            = false) Then
                    Me.OnInt16PropChanging(value)
                    Me.RaiseDataMemberChanging("Int16Prop")
                    Me.ValidateProperty("Int16Prop", value)
                    Me._int16Prop = value
                    Me.RaiseDataMemberChanged("Int16Prop")
                    Me.OnInt16PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Int32Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Int32Prop() As Integer
            Get
                Return Me._int32Prop
            End Get
            Set
                If ((Me._int32Prop = value)  _
                            = false) Then
                    Me.OnInt32PropChanging(value)
                    Me.RaiseDataMemberChanging("Int32Prop")
                    Me.ValidateProperty("Int32Prop", value)
                    Me._int32Prop = value
                    Me.RaiseDataMemberChanged("Int32Prop")
                    Me.OnInt32PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Int64Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Int64Prop() As Long
            Get
                Return Me._int64Prop
            End Get
            Set
                If ((Me._int64Prop = value)  _
                            = false) Then
                    Me.OnInt64PropChanging(value)
                    Me.RaiseDataMemberChanging("Int64Prop")
                    Me.ValidateProperty("Int64Prop", value)
                    Me._int64Prop = value
                    Me.RaiseDataMemberChanged("Int64Prop")
                    Me.OnInt64PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'IntsProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property IntsProp() As Integer()
            Get
                Return Me._intsProp
            End Get
            Set
                If (Object.Equals(Me._intsProp, value) = false) Then
                    Me.OnIntsPropChanging(value)
                    Me.RaiseDataMemberChanging("IntsProp")
                    Me.ValidateProperty("IntsProp", value)
                    Me._intsProp = value
                    Me.RaiseDataMemberChanged("IntsProp")
                    Me.OnIntsPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableBooleanProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableBooleanProp() As Nullable(Of Boolean)
            Get
                Return Me._nullableBooleanProp
            End Get
            Set
                If (Me._nullableBooleanProp.Equals(value) = false) Then
                    Me.OnNullableBooleanPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableBooleanProp")
                    Me.ValidateProperty("NullableBooleanProp", value)
                    Me._nullableBooleanProp = value
                    Me.RaiseDataMemberChanged("NullableBooleanProp")
                    Me.OnNullableBooleanPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableByteProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableByteProp() As Nullable(Of Byte)
            Get
                Return Me._nullableByteProp
            End Get
            Set
                If (Me._nullableByteProp.Equals(value) = false) Then
                    Me.OnNullableBytePropChanging(value)
                    Me.RaiseDataMemberChanging("NullableByteProp")
                    Me.ValidateProperty("NullableByteProp", value)
                    Me._nullableByteProp = value
                    Me.RaiseDataMemberChanged("NullableByteProp")
                    Me.OnNullableBytePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableCharProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableCharProp() As Nullable(Of Char)
            Get
                Return Me._nullableCharProp
            End Get
            Set
                If (Me._nullableCharProp.Equals(value) = false) Then
                    Me.OnNullableCharPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableCharProp")
                    Me.ValidateProperty("NullableCharProp", value)
                    Me._nullableCharProp = value
                    Me.RaiseDataMemberChanged("NullableCharProp")
                    Me.OnNullableCharPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDateTimeOffsetCollectionProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDateTimeOffsetCollectionProp() As IEnumerable(Of Nullable(Of DateTimeOffset))
            Get
                Return Me._nullableDateTimeOffsetCollectionProp
            End Get
            Set
                If (Object.Equals(Me._nullableDateTimeOffsetCollectionProp, value) = false) Then
                    Me.OnNullableDateTimeOffsetCollectionPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDateTimeOffsetCollectionProp")
                    Me.ValidateProperty("NullableDateTimeOffsetCollectionProp", value)
                    Me._nullableDateTimeOffsetCollectionProp = value
                    Me.RaiseDataMemberChanged("NullableDateTimeOffsetCollectionProp")
                    Me.OnNullableDateTimeOffsetCollectionPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDateTimeOffsetProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDateTimeOffsetProp() As Nullable(Of DateTimeOffset)
            Get
                Return Me._nullableDateTimeOffsetProp
            End Get
            Set
                If (Me._nullableDateTimeOffsetProp.Equals(value) = false) Then
                    Me.OnNullableDateTimeOffsetPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDateTimeOffsetProp")
                    Me.ValidateProperty("NullableDateTimeOffsetProp", value)
                    Me._nullableDateTimeOffsetProp = value
                    Me.RaiseDataMemberChanged("NullableDateTimeOffsetProp")
                    Me.OnNullableDateTimeOffsetPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDateTimeProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDateTimeProp() As Nullable(Of DateTime)
            Get
                Return Me._nullableDateTimeProp
            End Get
            Set
                If (Me._nullableDateTimeProp.Equals(value) = false) Then
                    Me.OnNullableDateTimePropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDateTimeProp")
                    Me.ValidateProperty("NullableDateTimeProp", value)
                    Me._nullableDateTimeProp = value
                    Me.RaiseDataMemberChanged("NullableDateTimeProp")
                    Me.OnNullableDateTimePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDateTimesCollectionProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDateTimesCollectionProp() As IEnumerable(Of Nullable(Of DateTime))
            Get
                Return Me._nullableDateTimesCollectionProp
            End Get
            Set
                If (Object.Equals(Me._nullableDateTimesCollectionProp, value) = false) Then
                    Me.OnNullableDateTimesCollectionPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDateTimesCollectionProp")
                    Me.ValidateProperty("NullableDateTimesCollectionProp", value)
                    Me._nullableDateTimesCollectionProp = value
                    Me.RaiseDataMemberChanged("NullableDateTimesCollectionProp")
                    Me.OnNullableDateTimesCollectionPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDecimalProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDecimalProp() As Nullable(Of Decimal)
            Get
                Return Me._nullableDecimalProp
            End Get
            Set
                If (Me._nullableDecimalProp.Equals(value) = false) Then
                    Me.OnNullableDecimalPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDecimalProp")
                    Me.ValidateProperty("NullableDecimalProp", value)
                    Me._nullableDecimalProp = value
                    Me.RaiseDataMemberChanged("NullableDecimalProp")
                    Me.OnNullableDecimalPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDictionaryDateTimeOffsetProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDictionaryDateTimeOffsetProp() As Dictionary(Of DateTimeOffset, Nullable(Of DateTimeOffset))
            Get
                Return Me._nullableDictionaryDateTimeOffsetProp
            End Get
            Set
                If (Object.Equals(Me._nullableDictionaryDateTimeOffsetProp, value) = false) Then
                    Me.OnNullableDictionaryDateTimeOffsetPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDictionaryDateTimeOffsetProp")
                    Me.ValidateProperty("NullableDictionaryDateTimeOffsetProp", value)
                    Me._nullableDictionaryDateTimeOffsetProp = value
                    Me.RaiseDataMemberChanged("NullableDictionaryDateTimeOffsetProp")
                    Me.OnNullableDictionaryDateTimeOffsetPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDictionaryDateTimeProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDictionaryDateTimeProp() As Dictionary(Of DateTime, Nullable(Of DateTime))
            Get
                Return Me._nullableDictionaryDateTimeProp
            End Get
            Set
                If (Object.Equals(Me._nullableDictionaryDateTimeProp, value) = false) Then
                    Me.OnNullableDictionaryDateTimePropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDictionaryDateTimeProp")
                    Me.ValidateProperty("NullableDictionaryDateTimeProp", value)
                    Me._nullableDictionaryDateTimeProp = value
                    Me.RaiseDataMemberChanged("NullableDictionaryDateTimeProp")
                    Me.OnNullableDictionaryDateTimePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableDoubleProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableDoubleProp() As Nullable(Of Double)
            Get
                Return Me._nullableDoubleProp
            End Get
            Set
                If (Me._nullableDoubleProp.Equals(value) = false) Then
                    Me.OnNullableDoublePropChanging(value)
                    Me.RaiseDataMemberChanging("NullableDoubleProp")
                    Me.ValidateProperty("NullableDoubleProp", value)
                    Me._nullableDoubleProp = value
                    Me.RaiseDataMemberChanged("NullableDoubleProp")
                    Me.OnNullableDoublePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableEnumProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableEnumProp() As Nullable(Of TestEnum)
            Get
                Return Me._nullableEnumProp
            End Get
            Set
                If (Me._nullableEnumProp.Equals(value) = false) Then
                    Me.OnNullableEnumPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableEnumProp")
                    Me.ValidateProperty("NullableEnumProp", value)
                    Me._nullableEnumProp = value
                    Me.RaiseDataMemberChanged("NullableEnumProp")
                    Me.OnNullableEnumPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableEnumsArrayProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableEnumsArrayProp() As Nullable(Of DateTime)()
            Get
                Return Me._nullableEnumsArrayProp
            End Get
            Set
                If (Object.Equals(Me._nullableEnumsArrayProp, value) = false) Then
                    Me.OnNullableEnumsArrayPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableEnumsArrayProp")
                    Me.ValidateProperty("NullableEnumsArrayProp", value)
                    Me._nullableEnumsArrayProp = value
                    Me.RaiseDataMemberChanged("NullableEnumsArrayProp")
                    Me.OnNullableEnumsArrayPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableGuidProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableGuidProp() As Nullable(Of Guid)
            Get
                Return Me._nullableGuidProp
            End Get
            Set
                If (Me._nullableGuidProp.Equals(value) = false) Then
                    Me.OnNullableGuidPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableGuidProp")
                    Me.ValidateProperty("NullableGuidProp", value)
                    Me._nullableGuidProp = value
                    Me.RaiseDataMemberChanged("NullableGuidProp")
                    Me.OnNullableGuidPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableInt16Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableInt16Prop() As Nullable(Of Short)
            Get
                Return Me._nullableInt16Prop
            End Get
            Set
                If (Me._nullableInt16Prop.Equals(value) = false) Then
                    Me.OnNullableInt16PropChanging(value)
                    Me.RaiseDataMemberChanging("NullableInt16Prop")
                    Me.ValidateProperty("NullableInt16Prop", value)
                    Me._nullableInt16Prop = value
                    Me.RaiseDataMemberChanged("NullableInt16Prop")
                    Me.OnNullableInt16PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableInt32Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableInt32Prop() As Nullable(Of Integer)
            Get
                Return Me._nullableInt32Prop
            End Get
            Set
                If (Me._nullableInt32Prop.Equals(value) = false) Then
                    Me.OnNullableInt32PropChanging(value)
                    Me.RaiseDataMemberChanging("NullableInt32Prop")
                    Me.ValidateProperty("NullableInt32Prop", value)
                    Me._nullableInt32Prop = value
                    Me.RaiseDataMemberChanged("NullableInt32Prop")
                    Me.OnNullableInt32PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableInt64Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableInt64Prop() As Nullable(Of Long)
            Get
                Return Me._nullableInt64Prop
            End Get
            Set
                If (Me._nullableInt64Prop.Equals(value) = false) Then
                    Me.OnNullableInt64PropChanging(value)
                    Me.RaiseDataMemberChanging("NullableInt64Prop")
                    Me.ValidateProperty("NullableInt64Prop", value)
                    Me._nullableInt64Prop = value
                    Me.RaiseDataMemberChanged("NullableInt64Prop")
                    Me.OnNullableInt64PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableSByteProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableSByteProp() As Nullable(Of SByte)
            Get
                Return Me._nullableSByteProp
            End Get
            Set
                If (Me._nullableSByteProp.Equals(value) = false) Then
                    Me.OnNullableSBytePropChanging(value)
                    Me.RaiseDataMemberChanging("NullableSByteProp")
                    Me.ValidateProperty("NullableSByteProp", value)
                    Me._nullableSByteProp = value
                    Me.RaiseDataMemberChanged("NullableSByteProp")
                    Me.OnNullableSBytePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableSingleProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableSingleProp() As Nullable(Of Single)
            Get
                Return Me._nullableSingleProp
            End Get
            Set
                If (Me._nullableSingleProp.Equals(value) = false) Then
                    Me.OnNullableSinglePropChanging(value)
                    Me.RaiseDataMemberChanging("NullableSingleProp")
                    Me.ValidateProperty("NullableSingleProp", value)
                    Me._nullableSingleProp = value
                    Me.RaiseDataMemberChanged("NullableSingleProp")
                    Me.OnNullableSinglePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableTimeSpanListProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableTimeSpanListProp() As IEnumerable(Of Nullable(Of TimeSpan))
            Get
                Return Me._nullableTimeSpanListProp
            End Get
            Set
                If (Object.Equals(Me._nullableTimeSpanListProp, value) = false) Then
                    Me.OnNullableTimeSpanListPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableTimeSpanListProp")
                    Me.ValidateProperty("NullableTimeSpanListProp", value)
                    Me._nullableTimeSpanListProp = value
                    Me.RaiseDataMemberChanged("NullableTimeSpanListProp")
                    Me.OnNullableTimeSpanListPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableTimeSpanProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableTimeSpanProp() As Nullable(Of TimeSpan)
            Get
                Return Me._nullableTimeSpanProp
            End Get
            Set
                If (Me._nullableTimeSpanProp.Equals(value) = false) Then
                    Me.OnNullableTimeSpanPropChanging(value)
                    Me.RaiseDataMemberChanging("NullableTimeSpanProp")
                    Me.ValidateProperty("NullableTimeSpanProp", value)
                    Me._nullableTimeSpanProp = value
                    Me.RaiseDataMemberChanged("NullableTimeSpanProp")
                    Me.OnNullableTimeSpanPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableUInt16Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableUInt16Prop() As Nullable(Of UShort)
            Get
                Return Me._nullableUInt16Prop
            End Get
            Set
                If (Me._nullableUInt16Prop.Equals(value) = false) Then
                    Me.OnNullableUInt16PropChanging(value)
                    Me.RaiseDataMemberChanging("NullableUInt16Prop")
                    Me.ValidateProperty("NullableUInt16Prop", value)
                    Me._nullableUInt16Prop = value
                    Me.RaiseDataMemberChanged("NullableUInt16Prop")
                    Me.OnNullableUInt16PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableUInt32Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableUInt32Prop() As Nullable(Of UInteger)
            Get
                Return Me._nullableUInt32Prop
            End Get
            Set
                If (Me._nullableUInt32Prop.Equals(value) = false) Then
                    Me.OnNullableUInt32PropChanging(value)
                    Me.RaiseDataMemberChanging("NullableUInt32Prop")
                    Me.ValidateProperty("NullableUInt32Prop", value)
                    Me._nullableUInt32Prop = value
                    Me.RaiseDataMemberChanged("NullableUInt32Prop")
                    Me.OnNullableUInt32PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NullableUInt64Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NullableUInt64Prop() As Nullable(Of ULong)
            Get
                Return Me._nullableUInt64Prop
            End Get
            Set
                If (Me._nullableUInt64Prop.Equals(value) = false) Then
                    Me.OnNullableUInt64PropChanging(value)
                    Me.RaiseDataMemberChanging("NullableUInt64Prop")
                    Me.ValidateProperty("NullableUInt64Prop", value)
                    Me._nullableUInt64Prop = value
                    Me.RaiseDataMemberChanged("NullableUInt64Prop")
                    Me.OnNullableUInt64PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'SByteProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property SByteProp() As SByte
            Get
                Return Me._sByteProp
            End Get
            Set
                If ((Me._sByteProp = value)  _
                            = false) Then
                    Me.OnSBytePropChanging(value)
                    Me.RaiseDataMemberChanging("SByteProp")
                    Me.ValidateProperty("SByteProp", value)
                    Me._sByteProp = value
                    Me.RaiseDataMemberChanged("SByteProp")
                    Me.OnSBytePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'SingleProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property SingleProp() As Single
            Get
                Return Me._singleProp
            End Get
            Set
                If ((Me._singleProp = value)  _
                            = false) Then
                    Me.OnSinglePropChanging(value)
                    Me.RaiseDataMemberChanging("SingleProp")
                    Me.ValidateProperty("SingleProp", value)
                    Me._singleProp = value
                    Me.RaiseDataMemberChanged("SingleProp")
                    Me.OnSinglePropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'StringProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property StringProp() As String
            Get
                Return Me._stringProp
            End Get
            Set
                If (String.Equals(Me._stringProp, value) = false) Then
                    Me.OnStringPropChanging(value)
                    Me.RaiseDataMemberChanging("StringProp")
                    Me.ValidateProperty("StringProp", value)
                    Me._stringProp = value
                    Me.RaiseDataMemberChanged("StringProp")
                    Me.OnStringPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'StringsProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property StringsProp() As IEnumerable(Of String)
            Get
                Return Me._stringsProp
            End Get
            Set
                If (Object.Equals(Me._stringsProp, value) = false) Then
                    Me.OnStringsPropChanging(value)
                    Me.RaiseDataMemberChanging("StringsProp")
                    Me.ValidateProperty("StringsProp", value)
                    Me._stringsProp = value
                    Me.RaiseDataMemberChanged("StringsProp")
                    Me.OnStringsPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'TimeSpanListProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property TimeSpanListProp() As IEnumerable(Of TimeSpan)
            Get
                Return Me._timeSpanListProp
            End Get
            Set
                If (Object.Equals(Me._timeSpanListProp, value) = false) Then
                    Me.OnTimeSpanListPropChanging(value)
                    Me.RaiseDataMemberChanging("TimeSpanListProp")
                    Me.ValidateProperty("TimeSpanListProp", value)
                    Me._timeSpanListProp = value
                    Me.RaiseDataMemberChanged("TimeSpanListProp")
                    Me.OnTimeSpanListPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'TimeSpanProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property TimeSpanProp() As TimeSpan
            Get
                Return Me._timeSpanProp
            End Get
            Set
                If ((Me._timeSpanProp = value)  _
                            = false) Then
                    Me.OnTimeSpanPropChanging(value)
                    Me.RaiseDataMemberChanging("TimeSpanProp")
                    Me.ValidateProperty("TimeSpanProp", value)
                    Me._timeSpanProp = value
                    Me.RaiseDataMemberChanged("TimeSpanProp")
                    Me.OnTimeSpanPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'UInt16Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property UInt16Prop() As UShort
            Get
                Return Me._uInt16Prop
            End Get
            Set
                If ((Me._uInt16Prop = value)  _
                            = false) Then
                    Me.OnUInt16PropChanging(value)
                    Me.RaiseDataMemberChanging("UInt16Prop")
                    Me.ValidateProperty("UInt16Prop", value)
                    Me._uInt16Prop = value
                    Me.RaiseDataMemberChanged("UInt16Prop")
                    Me.OnUInt16PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'UInt32Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property UInt32Prop() As UInteger
            Get
                Return Me._uInt32Prop
            End Get
            Set
                If ((Me._uInt32Prop = value)  _
                            = false) Then
                    Me.OnUInt32PropChanging(value)
                    Me.RaiseDataMemberChanging("UInt32Prop")
                    Me.ValidateProperty("UInt32Prop", value)
                    Me._uInt32Prop = value
                    Me.RaiseDataMemberChanged("UInt32Prop")
                    Me.OnUInt32PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'UInt64Prop' value.
        ''' </summary>
        <DataMember()>  _
        Public Property UInt64Prop() As ULong
            Get
                Return Me._uInt64Prop
            End Get
            Set
                If ((Me._uInt64Prop = value)  _
                            = false) Then
                    Me.OnUInt64PropChanging(value)
                    Me.RaiseDataMemberChanging("UInt64Prop")
                    Me.ValidateProperty("UInt64Prop", value)
                    Me._uInt64Prop = value
                    Me.RaiseDataMemberChanged("UInt64Prop")
                    Me.OnUInt64PropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'UInt64sProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property UInt64sProp() As ULong()
            Get
                Return Me._uInt64sProp
            End Get
            Set
                If (Object.Equals(Me._uInt64sProp, value) = false) Then
                    Me.OnUInt64sPropChanging(value)
                    Me.RaiseDataMemberChanging("UInt64sProp")
                    Me.ValidateProperty("UInt64sProp", value)
                    Me._uInt64sProp = value
                    Me.RaiseDataMemberChanged("UInt64sProp")
                    Me.OnUInt64sPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'UriProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property UriProp() As Uri
            Get
                Return Me._uriProp
            End Get
            Set
                If (Object.Equals(Me._uriProp, value) = false) Then
                    Me.OnUriPropChanging(value)
                    Me.RaiseDataMemberChanging("UriProp")
                    Me.ValidateProperty("UriProp", value)
                    Me._uriProp = value
                    Me.RaiseDataMemberChanged("UriProp")
                    Me.OnUriPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'XElementProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property XElementProp() As XElement
            Get
                Return Me._xElementProp
            End Get
            Set
                If (Object.Equals(Me._xElementProp, value) = false) Then
                    Me.OnXElementPropChanging(value)
                    Me.RaiseDataMemberChanging("XElementProp")
                    Me.ValidateProperty("XElementProp", value)
                    Me._xElementProp = value
                    Me.RaiseDataMemberChanged("XElementProp")
                    Me.OnXElementPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestNullablePredefined' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsTestNullablePredefinedInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("TestNullablePredefined")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestNullablePredefined' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanTestNullablePredefined() As Boolean
            Get
                Return MyBase.CanInvokeAction("TestNullablePredefined")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestNullablePrimitive' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsTestNullablePrimitiveInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("TestNullablePrimitive")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestNullablePrimitive' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanTestNullablePrimitive() As Boolean
            Get
                Return MyBase.CanInvokeAction("TestNullablePrimitive")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestPredefined' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsTestPredefinedInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("TestPredefined")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestPredefined' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanTestPredefined() As Boolean
            Get
                Return MyBase.CanInvokeAction("TestPredefined")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestPrimitive' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsTestPrimitiveInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("TestPrimitive")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'TestPrimitive' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanTestPrimitive() As Boolean
            Get
                Return MyBase.CanInvokeAction("TestPrimitive")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
        
        ''' <summary>
        ''' Invokes the 'TestNullablePredefined' action on this entity.
        ''' </summary>
        ''' <param name="d">The value to pass to the server method's 'd' parameter.</param>
        ''' <param name="dt">The value to pass to the server method's 'dt' parameter.</param>
        ''' <param name="ts">The value to pass to the server method's 'ts' parameter.</param>
        ''' <param name="g">The value to pass to the server method's 'g' parameter.</param>
        ''' <param name="en">The value to pass to the server method's 'en' parameter.</param>
        ''' <param name="dto">The value to pass to the server method's 'dto' parameter.</param>
        <EntityAction("TestNullablePredefined", AllowMultipleInvocations:=false)>  _
        Public Sub TestNullablePredefined(ByVal d As Nullable(Of Decimal), ByVal dt As Nullable(Of DateTime), ByVal ts As Nullable(Of TimeSpan), ByVal g As Nullable(Of Guid), ByVal en As Nullable(Of TestEnum), ByVal dto As Nullable(Of DateTimeOffset))
            Me.OnTestNullablePredefinedInvoking(d, dt, ts, g, en, dto)
            MyBase.InvokeAction("TestNullablePredefined", d, dt, ts, g, en, dto)
            Me.OnTestNullablePredefinedInvoked
        End Sub
        
        ''' <summary>
        ''' Invokes the 'TestNullablePrimitive' action on this entity.
        ''' </summary>
        ''' <param name="b1">The value to pass to the server method's 'b1' parameter.</param>
        ''' <param name="b2">The value to pass to the server method's 'b2' parameter.</param>
        ''' <param name="sb">The value to pass to the server method's 'sb' parameter.</param>
        ''' <param name="int16">The value to pass to the server method's 'int16' parameter.</param>
        ''' <param name="uint16">The value to pass to the server method's 'uint16' parameter.</param>
        ''' <param name="int32">The value to pass to the server method's 'int32' parameter.</param>
        ''' <param name="uint32">The value to pass to the server method's 'uint32' parameter.</param>
        ''' <param name="int64">The value to pass to the server method's 'int64' parameter.</param>
        ''' <param name="uint64">The value to pass to the server method's 'uint64' parameter.</param>
        ''' <param name="ch">The value to pass to the server method's 'ch' parameter.</param>
        ''' <param name="d">The value to pass to the server method's 'd' parameter.</param>
        ''' <param name="s">The value to pass to the server method's 's' parameter.</param>
        <EntityAction("TestNullablePrimitive", AllowMultipleInvocations:=false)>  _
        Public Sub TestNullablePrimitive(ByVal b1 As Nullable(Of Boolean), ByVal b2 As Nullable(Of Byte), ByVal sb As Nullable(Of SByte), ByVal int16 As Nullable(Of Short), ByVal uint16 As Nullable(Of UShort), ByVal int32 As Nullable(Of Integer), ByVal uint32 As Nullable(Of UInteger), ByVal int64 As Nullable(Of Long), ByVal uint64 As Nullable(Of ULong), ByVal ch As Nullable(Of Char), ByVal d As Nullable(Of Double), ByVal s As Nullable(Of Single))
            Me.OnTestNullablePrimitiveInvoking(b1, b2, sb, int16, uint16, int32, uint32, int64, uint64, ch, d, s)
            MyBase.InvokeAction("TestNullablePrimitive", b1, b2, sb, int16, uint16, int32, uint32, int64, uint64, ch, d, s)
            Me.OnTestNullablePrimitiveInvoked
        End Sub
        
        ''' <summary>
        ''' Invokes the 'TestPredefined' action on this entity.
        ''' </summary>
        ''' <param name="s">The value to pass to the server method's 's' parameter.</param>
        ''' <param name="d">The value to pass to the server method's 'd' parameter.</param>
        ''' <param name="dt">The value to pass to the server method's 'dt' parameter.</param>
        ''' <param name="ts">The value to pass to the server method's 'ts' parameter.</param>
        ''' <param name="strings">The value to pass to the server method's 'strings' parameter.</param>
        ''' <param name="uri">The value to pass to the server method's 'uri' parameter.</param>
        ''' <param name="g">The value to pass to the server method's 'g' parameter.</param>
        ''' <param name="b">The value to pass to the server method's 'b' parameter.</param>
        ''' <param name="bArray">The value to pass to the server method's 'bArray' parameter.</param>
        ''' <param name="en">The value to pass to the server method's 'en' parameter.</param>
        ''' <param name="dictionary">The value to pass to the server method's 'dictionary' parameter.</param>
        ''' <param name="dto">The value to pass to the server method's 'dto' parameter.</param>
        <EntityAction("TestPredefined", AllowMultipleInvocations:=false)>  _
        Public Sub TestPredefined(ByVal s As String, ByVal d As Decimal, ByVal dt As DateTime, ByVal ts As TimeSpan, ByVal strings As IEnumerable(Of String), ByVal uri As Uri, ByVal g As Guid, ByVal b() As Byte, ByVal bArray() As Byte, ByVal en As TestEnum, ByVal dictionary As Dictionary(Of String, String), ByVal dto As DateTimeOffset)
            Me.OnTestPredefinedInvoking(s, d, dt, ts, strings, uri, g, b, bArray, en, dictionary, dto)
            MyBase.InvokeAction("TestPredefined", s, d, dt, ts, strings, uri, g, b, bArray, en, dictionary, dto)
            Me.OnTestPredefinedInvoked
        End Sub
        
        ''' <summary>
        ''' Invokes the 'TestPrimitive' action on this entity.
        ''' </summary>
        ''' <param name="b1">The value to pass to the server method's 'b1' parameter.</param>
        ''' <param name="b2">The value to pass to the server method's 'b2' parameter.</param>
        ''' <param name="sb">The value to pass to the server method's 'sb' parameter.</param>
        ''' <param name="int16">The value to pass to the server method's 'int16' parameter.</param>
        ''' <param name="uint16">The value to pass to the server method's 'uint16' parameter.</param>
        ''' <param name="int32">The value to pass to the server method's 'int32' parameter.</param>
        ''' <param name="uint32">The value to pass to the server method's 'uint32' parameter.</param>
        ''' <param name="int64">The value to pass to the server method's 'int64' parameter.</param>
        ''' <param name="uint64">The value to pass to the server method's 'uint64' parameter.</param>
        ''' <param name="ch">The value to pass to the server method's 'ch' parameter.</param>
        ''' <param name="d">The value to pass to the server method's 'd' parameter.</param>
        ''' <param name="s">The value to pass to the server method's 's' parameter.</param>
        <EntityAction("TestPrimitive", AllowMultipleInvocations:=false)>  _
        Public Sub TestPrimitive(ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single)
            Me.OnTestPrimitiveInvoking(b1, b2, sb, int16, uint16, int32, uint32, int64, uint64, ch, d, s)
            MyBase.InvokeAction("TestPrimitive", b1, b2, sb, int16, uint16, int32, uint32, int64, uint64, ch, d, s)
            Me.OnTestPrimitiveInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MultipartKeyTestEntity1' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class MultipartKeyTestEntity1
        Inherits Entity
        
        Private _a As Integer
        
        Private _b As String
        
        Private _c As Nullable(Of Integer)
        
        Private _d As Char
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnAChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnAChanged()
        End Sub
        Private Partial Sub OnBChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnBChanged()
        End Sub
        Private Partial Sub OnCChanging(ByVal value As Nullable(Of Integer))
        End Sub
        Private Partial Sub OnCChanged()
        End Sub
        Private Partial Sub OnDChanging(ByVal value As Char)
        End Sub
        Private Partial Sub OnDChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MultipartKeyTestEntity1"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'A' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property A() As Integer
            Get
                Return Me._a
            End Get
            Set
                If ((Me._a = value)  _
                            = false) Then
                    Me.OnAChanging(value)
                    Me.ValidateProperty("A", value)
                    Me._a = value
                    Me.RaisePropertyChanged("A")
                    Me.OnAChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'B' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property B() As String
            Get
                Return Me._b
            End Get
            Set
                If (String.Equals(Me._b, value) = false) Then
                    Me.OnBChanging(value)
                    Me.ValidateProperty("B", value)
                    Me._b = value
                    Me.RaisePropertyChanged("B")
                    Me.OnBChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'C' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property C() As Nullable(Of Integer)
            Get
                Return Me._c
            End Get
            Set
                If (Me._c.Equals(value) = false) Then
                    Me.OnCChanging(value)
                    Me.ValidateProperty("C", value)
                    Me._c = value
                    Me.RaisePropertyChanged("C")
                    Me.OnCChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'D' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property D() As Char
            Get
                Return Me._d
            End Get
            Set
                If ((Me._d = value)  _
                            = false) Then
                    Me.OnDChanging(value)
                    Me.ValidateProperty("D", value)
                    Me._d = value
                    Me.RaisePropertyChanged("D")
                    Me.OnDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            If ((Me._b Is Nothing)  _
                        OrElse (Me._c Is Nothing)) Then
                Return Nothing
            End If
            Return EntityKey.Create(Me._a, Me._b, Me._c, Me._d)
        End Function
    End Class
    
    ''' <summary>
    ''' The 'MultipartKeyTestEntity2' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class MultipartKeyTestEntity2
        Inherits Entity
        
        Private _a As Integer
        
        Private _b As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnAChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnAChanged()
        End Sub
        Private Partial Sub OnBChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnBChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MultipartKeyTestEntity2"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'A' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property A() As Integer
            Get
                Return Me._a
            End Get
            Set
                If ((Me._a = value)  _
                            = false) Then
                    Me.OnAChanging(value)
                    Me.ValidateProperty("A", value)
                    Me._a = value
                    Me.RaisePropertyChanged("A")
                    Me.OnAChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'B' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property B() As String
            Get
                Return Me._b
            End Get
            Set
                If (String.Equals(Me._b, value) = false) Then
                    Me.OnBChanging(value)
                    Me.ValidateProperty("B", value)
                    Me._b = value
                    Me.RaisePropertyChanged("B")
                    Me.OnBChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            If (Me._b Is Nothing) Then
                Return Nothing
            End If
            Return EntityKey.Create(Me._a, Me._b)
        End Function
    End Class
    
    ''' <summary>
    ''' The 'MultipartKeyTestEntity3' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class MultipartKeyTestEntity3
        Inherits Entity
        
        Private _a As Integer
        
        Private _b As Char
        
        Private _c As Nullable(Of Integer)
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnAChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnAChanged()
        End Sub
        Private Partial Sub OnBChanging(ByVal value As Char)
        End Sub
        Private Partial Sub OnBChanged()
        End Sub
        Private Partial Sub OnCChanging(ByVal value As Nullable(Of Integer))
        End Sub
        Private Partial Sub OnCChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MultipartKeyTestEntity3"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'A' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property A() As Integer
            Get
                Return Me._a
            End Get
            Set
                If ((Me._a = value)  _
                            = false) Then
                    Me.OnAChanging(value)
                    Me.ValidateProperty("A", value)
                    Me._a = value
                    Me.RaisePropertyChanged("A")
                    Me.OnAChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'B' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property B() As Char
            Get
                Return Me._b
            End Get
            Set
                If ((Me._b = value)  _
                            = false) Then
                    Me.OnBChanging(value)
                    Me.ValidateProperty("B", value)
                    Me._b = value
                    Me.RaisePropertyChanged("B")
                    Me.OnBChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'C' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property C() As Nullable(Of Integer)
            Get
                Return Me._c
            End Get
            Set
                If (Me._c.Equals(value) = false) Then
                    Me.OnCChanging(value)
                    Me.ValidateProperty("C", value)
                    Me._c = value
                    Me.RaisePropertyChanged("C")
                    Me.OnCChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            If (Me._c Is Nothing) Then
                Return Nothing
            End If
            Return EntityKey.Create(Me._a, Me._b, Me._c)
        End Function
    End Class
    
    ''' <summary>
    ''' The 'NullableFKChild' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class NullableFKChild
        Inherits Entity
        
        Private _data As String
        
        Private _id As Integer
        
        Private _parent As EntityRef(Of NullableFKParent)
        
        Private _parent2 As EntityRef(Of NullableFKParent)
        
        Private _parentID As Nullable(Of Integer)
        
        Private _parentID_Singleton As Nullable(Of Integer)
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnDataChanged()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnParentIDChanging(ByVal value As Nullable(Of Integer))
        End Sub
        Private Partial Sub OnParentIDChanged()
        End Sub
        Private Partial Sub OnParentID_SingletonChanging(ByVal value As Nullable(Of Integer))
        End Sub
        Private Partial Sub OnParentID_SingletonChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NullableFKChild"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Data' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Data() As String
            Get
                Return Me._data
            End Get
            Set
                If (String.Equals(Me._data, value) = false) Then
                    Me.OnDataChanging(value)
                    Me.RaiseDataMemberChanging("Data")
                    Me.ValidateProperty("Data", value)
                    Me._data = value
                    Me.RaiseDataMemberChanged("Data")
                    Me.OnDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="NullableFKParent"/> entity.
        ''' </summary>
        <Association("Parent_Child", "ParentID", "ID", IsForeignKey:=true)>  _
        Public Property Parent() As NullableFKParent
            Get
                If (Me._parent Is Nothing) Then
                    Me._parent = New EntityRef(Of NullableFKParent)(Me, "Parent", AddressOf Me.FilterParent)
                End If
                Return Me._parent.Entity
            End Get
            Set
                Dim previous As NullableFKParent = Me.Parent
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("Parent", value)
                    If (Not (previous) Is Nothing) Then
                        Me._parent.Entity = Nothing
                        previous.Children.Remove(Me)
                    End If
                    If (Not (value) Is Nothing) Then
                        Me.ParentID = value.ID
                    Else
                        Me.ParentID = CType(Nothing, Nullable(Of Integer))
                    End If
                    Me._parent.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.Children.Add(Me)
                    End If
                    Me.RaisePropertyChanged("Parent")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="NullableFKParent"/> entity.
        ''' </summary>
        <Association("Parent_Child_Singleton", "ParentID_Singleton", "ID", IsForeignKey:=true)>  _
        Public Property Parent2() As NullableFKParent
            Get
                If (Me._parent2 Is Nothing) Then
                    Me._parent2 = New EntityRef(Of NullableFKParent)(Me, "Parent2", AddressOf Me.FilterParent2)
                End If
                Return Me._parent2.Entity
            End Get
            Set
                Dim previous As NullableFKParent = Me.Parent2
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("Parent2", value)
                    If (Not (previous) Is Nothing) Then
                        Me._parent2.Entity = Nothing
                        previous.Child = Nothing
                    End If
                    If (Not (value) Is Nothing) Then
                        Me.ParentID_Singleton = value.ID
                    Else
                        Me.ParentID_Singleton = CType(Nothing, Nullable(Of Integer))
                    End If
                    Me._parent2.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.Child = Me
                    End If
                    Me.RaisePropertyChanged("Parent2")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ParentID' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property ParentID() As Nullable(Of Integer)
            Get
                Return Me._parentID
            End Get
            Set
                If (Me._parentID.Equals(value) = false) Then
                    Me.OnParentIDChanging(value)
                    Me.RaiseDataMemberChanging("ParentID")
                    Me.ValidateProperty("ParentID", value)
                    Me._parentID = value
                    Me.RaiseDataMemberChanged("ParentID")
                    Me.OnParentIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ParentID_Singleton' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property ParentID_Singleton() As Nullable(Of Integer)
            Get
                Return Me._parentID_Singleton
            End Get
            Set
                If (Me._parentID_Singleton.Equals(value) = false) Then
                    Me.OnParentID_SingletonChanging(value)
                    Me.RaiseDataMemberChanging("ParentID_Singleton")
                    Me.ValidateProperty("ParentID_Singleton", value)
                    Me._parentID_Singleton = value
                    Me.RaiseDataMemberChanged("ParentID_Singleton")
                    Me.OnParentID_SingletonChanged
                End If
            End Set
        End Property
        
        Private Function FilterParent(ByVal entity As NullableFKParent) As Boolean
            Return Object.Equals(entity.ID, Me.ParentID)
        End Function
        
        Private Function FilterParent2(ByVal entity As NullableFKParent) As Boolean
            Return Object.Equals(entity.ID, Me.ParentID_Singleton)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'NullableFKParent' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class NullableFKParent
        Inherits Entity
        
        Private _child As EntityRef(Of NullableFKChild)
        
        Private _children As EntityCollection(Of NullableFKChild)
        
        Private _data As String
        
        Private _id As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnDataChanged()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NullableFKParent"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="NullableFKChild"/> entity.
        ''' </summary>
        <Association("Parent_Child_Singleton", "ID", "ParentID_Singleton")>  _
        Public Property Child() As NullableFKChild
            Get
                If (Me._child Is Nothing) Then
                    Me._child = New EntityRef(Of NullableFKChild)(Me, "Child", AddressOf Me.FilterChild)
                End If
                Return Me._child.Entity
            End Get
            Set
                Dim previous As NullableFKChild = Me.Child
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("Child", value)
                    If (Not (previous) Is Nothing) Then
                        Me._child.Entity = Nothing
                        previous.Parent2 = Nothing
                    End If
                    Me._child.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.Parent2 = Me
                    End If
                    Me.RaisePropertyChanged("Child")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets the collection of associated <see cref="NullableFKChild"/> entity instances.
        ''' </summary>
        <Association("Parent_Child", "ID", "ParentID")>  _
        Public ReadOnly Property Children() As EntityCollection(Of NullableFKChild)
            Get
                If (Me._children Is Nothing) Then
                    Me._children = New EntityCollection(Of NullableFKChild)(Me, "Children", AddressOf Me.FilterChildren, AddressOf Me.AttachChildren, AddressOf Me.DetachChildren)
                End If
                Return Me._children
            End Get
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Data' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Data() As String
            Get
                Return Me._data
            End Get
            Set
                If (String.Equals(Me._data, value) = false) Then
                    Me.OnDataChanging(value)
                    Me.RaiseDataMemberChanging("Data")
                    Me.ValidateProperty("Data", value)
                    Me._data = value
                    Me.RaiseDataMemberChanged("Data")
                    Me.OnDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        Private Function FilterChild(ByVal entity As NullableFKChild) As Boolean
            Return Object.Equals(entity.ParentID_Singleton, Me.ID)
        End Function
        
        Private Sub AttachChildren(ByVal entity As NullableFKChild)
            entity.Parent = Me
        End Sub
        
        Private Sub DetachChildren(ByVal entity As NullableFKChild)
            entity.Parent = Nothing
        End Sub
        
        Private Function FilterChildren(ByVal entity As NullableFKChild) As Boolean
            Return Object.Equals(entity.ParentID, Me.ID)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'POCONoValidation' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class POCONoValidation
        Inherits Entity
        
        Private _a As String
        
        Private _b As String
        
        Private _c As String
        
        Private _d As String
        
        Private _e As String
        
        Private _id As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnAChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnAChanged()
        End Sub
        Private Partial Sub OnBChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnBChanged()
        End Sub
        Private Partial Sub OnCChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnCChanged()
        End Sub
        Private Partial Sub OnDChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnDChanged()
        End Sub
        Private Partial Sub OnEChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnEChanged()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="POCONoValidation"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'A' value.
        ''' </summary>
        <DataMember()>  _
        Public Property A() As String
            Get
                Return Me._a
            End Get
            Set
                If (String.Equals(Me._a, value) = false) Then
                    Me.OnAChanging(value)
                    Me.RaiseDataMemberChanging("A")
                    Me.ValidateProperty("A", value)
                    Me._a = value
                    Me.RaiseDataMemberChanged("A")
                    Me.OnAChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'B' value.
        ''' </summary>
        <DataMember()>  _
        Public Property B() As String
            Get
                Return Me._b
            End Get
            Set
                If (String.Equals(Me._b, value) = false) Then
                    Me.OnBChanging(value)
                    Me.RaiseDataMemberChanging("B")
                    Me.ValidateProperty("B", value)
                    Me._b = value
                    Me.RaiseDataMemberChanged("B")
                    Me.OnBChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'C' value.
        ''' </summary>
        <DataMember()>  _
        Public Property C() As String
            Get
                Return Me._c
            End Get
            Set
                If (String.Equals(Me._c, value) = false) Then
                    Me.OnCChanging(value)
                    Me.RaiseDataMemberChanging("C")
                    Me.ValidateProperty("C", value)
                    Me._c = value
                    Me.RaiseDataMemberChanged("C")
                    Me.OnCChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'D' value.
        ''' </summary>
        <DataMember()>  _
        Public Property D() As String
            Get
                Return Me._d
            End Get
            Set
                If (String.Equals(Me._d, value) = false) Then
                    Me.OnDChanging(value)
                    Me.RaiseDataMemberChanging("D")
                    Me.ValidateProperty("D", value)
                    Me._d = value
                    Me.RaiseDataMemberChanged("D")
                    Me.OnDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'E' value.
        ''' </summary>
        <DataMember()>  _
        Public Property E() As String
            Get
                Return Me._e
            End Get
            Set
                If (String.Equals(Me._e, value) = false) Then
                    Me.OnEChanging(value)
                    Me.RaiseDataMemberChanging("E")
                    Me.ValidateProperty("E", value)
                    Me._e = value
                    Me.RaiseDataMemberChanged("E")
                    Me.OnEChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'RoundtripOriginal_TestEntity' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class RoundtripOriginal_TestEntity
        Inherits Entity
        
        Private _id As Integer
        
        Private _nonRoundtrippedMember As Integer
        
        Private _roundtrippedMember As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnNonRoundtrippedMemberChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnNonRoundtrippedMemberChanged()
        End Sub
        Private Partial Sub OnRoundtrippedMemberChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnRoundtrippedMemberChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="RoundtripOriginal_TestEntity"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'NonRoundtrippedMember' value.
        ''' </summary>
        <DataMember()>  _
        Public Property NonRoundtrippedMember() As Integer
            Get
                Return Me._nonRoundtrippedMember
            End Get
            Set
                If ((Me._nonRoundtrippedMember = value)  _
                            = false) Then
                    Me.OnNonRoundtrippedMemberChanging(value)
                    Me.RaiseDataMemberChanging("NonRoundtrippedMember")
                    Me.ValidateProperty("NonRoundtrippedMember", value)
                    Me._nonRoundtrippedMember = value
                    Me.RaiseDataMemberChanged("NonRoundtrippedMember")
                    Me.OnNonRoundtrippedMemberChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'RoundtrippedMember' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property RoundtrippedMember() As Integer
            Get
                Return Me._roundtrippedMember
            End Get
            Set
                If ((Me._roundtrippedMember = value)  _
                            = false) Then
                    Me.OnRoundtrippedMemberChanging(value)
                    Me.RaiseDataMemberChanging("RoundtrippedMember")
                    Me.ValidateProperty("RoundtrippedMember", value)
                    Me._roundtrippedMember = value
                    Me.RaiseDataMemberChanged("RoundtrippedMember")
                    Me.OnRoundtrippedMemberChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'RoundtripOriginal_TestEntity2' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices"),  _
     RoundtripOriginal()>  _
    Partial Public NotInheritable Class RoundtripOriginal_TestEntity2
        Inherits Entity
        
        Private _assocProp As EntityRef(Of RoundtripOriginal_TestEntity)
        
        Private _id As Integer
        
        Private _roundtrippedMember1 As Integer
        
        Private _roundtrippedMember2 As Integer
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnRoundtrippedMember1Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnRoundtrippedMember1Changed()
        End Sub
        Private Partial Sub OnRoundtrippedMember2Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnRoundtrippedMember2Changed()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="RoundtripOriginal_TestEntity2"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="RoundtripOriginal_TestEntity"/> entity.
        ''' </summary>
        <Association("RTO_RTO2", "ID", "ID")>  _
        Public Property AssocProp() As RoundtripOriginal_TestEntity
            Get
                If (Me._assocProp Is Nothing) Then
                    Me._assocProp = New EntityRef(Of RoundtripOriginal_TestEntity)(Me, "AssocProp", AddressOf Me.FilterAssocProp)
                End If
                Return Me._assocProp.Entity
            End Get
            Set
                Dim previous As RoundtripOriginal_TestEntity = Me.AssocProp
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("AssocProp", value)
                    Me._assocProp.Entity = value
                    Me.RaisePropertyChanged("AssocProp")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'RoundtrippedMember1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property RoundtrippedMember1() As Integer
            Get
                Return Me._roundtrippedMember1
            End Get
            Set
                If ((Me._roundtrippedMember1 = value)  _
                            = false) Then
                    Me.OnRoundtrippedMember1Changing(value)
                    Me.RaiseDataMemberChanging("RoundtrippedMember1")
                    Me.ValidateProperty("RoundtrippedMember1", value)
                    Me._roundtrippedMember1 = value
                    Me.RaiseDataMemberChanged("RoundtrippedMember1")
                    Me.OnRoundtrippedMember1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'RoundtrippedMember2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property RoundtrippedMember2() As Integer
            Get
                Return Me._roundtrippedMember2
            End Get
            Set
                If ((Me._roundtrippedMember2 = value)  _
                            = false) Then
                    Me.OnRoundtrippedMember2Changing(value)
                    Me.RaiseDataMemberChanging("RoundtrippedMember2")
                    Me.ValidateProperty("RoundtrippedMember2", value)
                    Me._roundtrippedMember2 = value
                    Me.RaiseDataMemberChanged("RoundtrippedMember2")
                    Me.OnRoundtrippedMember2Changed
                End If
            End Set
        End Property
        
        Private Function FilterAssocProp(ByVal entity As RoundtripOriginal_TestEntity) As Boolean
            Return Object.Equals(entity.ID, Me.ID)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'RoundtripQueryEntity' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class RoundtripQueryEntity
        Inherits Entity
        
        Private _id As Integer
        
        Private _propB As String
        
        Private _propC As String
        
        Private _query As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnPropBChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnPropBChanged()
        End Sub
        Private Partial Sub OnPropCChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnPropCChanged()
        End Sub
        Private Partial Sub OnQueryChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnQueryChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="RoundtripQueryEntity"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'PropB' value.
        ''' </summary>
        <DataMember()>  _
        Public Property PropB() As String
            Get
                Return Me._propB
            End Get
            Set
                If (String.Equals(Me._propB, value) = false) Then
                    Me.OnPropBChanging(value)
                    Me.RaiseDataMemberChanging("PropB")
                    Me.ValidateProperty("PropB", value)
                    Me._propB = value
                    Me.RaiseDataMemberChanged("PropB")
                    Me.OnPropBChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'PropC' value.
        ''' </summary>
        <DataMember()>  _
        Public Property PropC() As String
            Get
                Return Me._propC
            End Get
            Set
                If (String.Equals(Me._propC, value) = false) Then
                    Me.OnPropCChanging(value)
                    Me.RaiseDataMemberChanging("PropC")
                    Me.ValidateProperty("PropC", value)
                    Me._propC = value
                    Me.RaiseDataMemberChanged("PropC")
                    Me.OnPropCChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Query' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Query() As String
            Get
                Return Me._query
            End Get
            Set
                If (String.Equals(Me._query, value) = false) Then
                    Me.OnQueryChanging(value)
                    Me.RaiseDataMemberChanging("Query")
                    Me.ValidateProperty("Query", value)
                    Me._query = value
                    Me.RaiseDataMemberChanged("Query")
                    Me.OnQueryChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'TestCT' class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class TestCT
        Inherits ComplexObject
        
        Private _ctProp1 As Integer
        
        Private _ctProp2 As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCTProp1Changing(ByVal value As Integer)
        End Sub
        Private Partial Sub OnCTProp1Changed()
        End Sub
        Private Partial Sub OnCTProp2Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnCTProp2Changed()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TestCT"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'CTProp1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property CTProp1() As Integer
            Get
                Return Me._ctProp1
            End Get
            Set
                If ((Me._ctProp1 = value)  _
                            = false) Then
                    Me.OnCTProp1Changing(value)
                    Me.RaiseDataMemberChanging("CTProp1")
                    Me.ValidateProperty("CTProp1", value)
                    Me._ctProp1 = value
                    Me.RaiseDataMemberChanged("CTProp1")
                    Me.OnCTProp1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CTProp2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property CTProp2() As String
            Get
                Return Me._ctProp2
            End Get
            Set
                If (String.Equals(Me._ctProp2, value) = false) Then
                    Me.OnCTProp2Changing(value)
                    Me.RaiseDataMemberChanging("CTProp2")
                    Me.ValidateProperty("CTProp2", value)
                    Me._ctProp2 = value
                    Me.RaiseDataMemberChanged("CTProp2")
                    Me.OnCTProp2Changed
                End If
            End Set
        End Property
    End Class
    
    ''' <summary>
    ''' The 'TestCycles' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class TestCycles
        Inherits Entity
        
        Private _includedT As EntityRef(Of TestCycles)
        
        Private _includedTs As EntityCollection(Of TestCycles)
        
        Private _name As String
        
        Private _parentName As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnNameChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnNameChanged()
        End Sub
        Private Partial Sub OnParentNameChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnParentNameChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TestCycles"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="TestCycles"/> entity.
        ''' </summary>
        <Association("TestCycle_Parent", "ParentName", "Name", IsForeignKey:=true)>  _
        Public Property IncludedT() As TestCycles
            Get
                If (Me._includedT Is Nothing) Then
                    Me._includedT = New EntityRef(Of TestCycles)(Me, "IncludedT", AddressOf Me.FilterIncludedT)
                End If
                Return Me._includedT.Entity
            End Get
            Set
                Dim previous As TestCycles = Me.IncludedT
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("IncludedT", value)
                    If (Not (previous) Is Nothing) Then
                        Me._includedT.Entity = Nothing
                        previous.IncludedTs.Remove(Me)
                    End If
                    If (Not (value) Is Nothing) Then
                        Me.ParentName = value.Name
                    Else
                        Me.ParentName = CType(Nothing, String)
                    End If
                    Me._includedT.Entity = value
                    If (Not (value) Is Nothing) Then
                        value.IncludedTs.Add(Me)
                    End If
                    Me.RaisePropertyChanged("IncludedT")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets the collection of associated <see cref="TestCycles"/> entity instances.
        ''' </summary>
        <Association("TestCycle_Parent", "Name", "ParentName")>  _
        Public ReadOnly Property IncludedTs() As EntityCollection(Of TestCycles)
            Get
                If (Me._includedTs Is Nothing) Then
                    Me._includedTs = New EntityCollection(Of TestCycles)(Me, "IncludedTs", AddressOf Me.FilterIncludedTs, AddressOf Me.AttachIncludedTs, AddressOf Me.DetachIncludedTs)
                End If
                Return Me._includedTs
            End Get
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Name' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Name() As String
            Get
                Return Me._name
            End Get
            Set
                If (String.Equals(Me._name, value) = false) Then
                    Me.OnNameChanging(value)
                    Me.ValidateProperty("Name", value)
                    Me._name = value
                    Me.RaisePropertyChanged("Name")
                    Me.OnNameChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ParentName' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property ParentName() As String
            Get
                Return Me._parentName
            End Get
            Set
                If (String.Equals(Me._parentName, value) = false) Then
                    Me.OnParentNameChanging(value)
                    Me.RaiseDataMemberChanging("ParentName")
                    Me.ValidateProperty("ParentName", value)
                    Me._parentName = value
                    Me.RaiseDataMemberChanged("ParentName")
                    Me.OnParentNameChanged
                End If
            End Set
        End Property
        
        Private Function FilterIncludedT(ByVal entity As TestCycles) As Boolean
            Return Object.Equals(entity.Name, Me.ParentName)
        End Function
        
        Private Sub AttachIncludedTs(ByVal entity As TestCycles)
            entity.IncludedT = Me
        End Sub
        
        Private Sub DetachIncludedTs(ByVal entity As TestCycles)
            entity.IncludedT = Nothing
        End Sub
        
        Private Function FilterIncludedTs(ByVal entity As TestCycles) As Boolean
            Return Object.Equals(entity.ParentName, Me.Name)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._name
        End Function
    End Class
    
    ''' <summary>
    ''' The 'TestEntityForInvokeOperations' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class TestEntityForInvokeOperations
        Inherits Entity
        
        Private _ctProp As TestCT
        
        Private _key As Integer
        
        Private _strProp As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCTPropChanging(ByVal value As TestCT)
        End Sub
        Private Partial Sub OnCTPropChanged()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnStrPropChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnStrPropChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TestEntityForInvokeOperations"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'CTProp' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property CTProp() As TestCT
            Get
                Return Me._ctProp
            End Get
            Set
                If (Object.Equals(Me._ctProp, value) = false) Then
                    Me.OnCTPropChanging(value)
                    Me.RaiseDataMemberChanging("CTProp")
                    Me.ValidateProperty("CTProp", value)
                    Me._ctProp = value
                    Me.RaiseDataMemberChanged("CTProp")
                    Me.OnCTPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'StrProp' value.
        ''' </summary>
        <DataMember()>  _
        Public Property StrProp() As String
            Get
                Return Me._strProp
            End Get
            Set
                If (String.Equals(Me._strProp, value) = false) Then
                    Me.OnStrPropChanging(value)
                    Me.RaiseDataMemberChanging("StrProp")
                    Me.ValidateProperty("StrProp", value)
                    Me._strProp = value
                    Me.RaiseDataMemberChanged("StrProp")
                    Me.OnStrPropChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
    End Class
    
    ''' <summary>
    ''' The DomainContext corresponding to the 'TestProvider_Scenarios' DomainService.
    ''' </summary>
    Partial Public NotInheritable Class TestProvider_Scenarios
        Inherits DomainContext
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TestProvider_Scenarios"/> class.
        ''' </summary>
        Public Sub New()
            Me.New(New Uri("TestDomainServices-TestProvider_Scenarios.svc", UriKind.Relative))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TestProvider_Scenarios"/> class with the specified service URI.
        ''' </summary>
        ''' <param name="serviceUri">The TestProvider_Scenarios service URI.</param>
        Public Sub New(ByVal serviceUri As Uri)
            Me.New(DomainContext.CreateDomainClient(GetType(ITestProvider_ScenariosContract), serviceUri, false))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TestProvider_Scenarios"/> class with the specified <paramref name="domainClient"/>.
        ''' </summary>
        ''' <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        Public Sub New(ByVal domainClient As DomainClient)
            MyBase.New(domainClient)
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets the set of <see cref="TestSideEffects"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property TestSideEffects() As EntitySet(Of TestSideEffects)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of TestSideEffects)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="A"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property [As]() As EntitySet(Of A)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of A)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="B"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property Bs() As EntitySet(Of B)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of B)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="CartItem"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property CartItems() As EntitySet(Of CartItem)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of CartItem)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="Cart"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property Carts() As EntitySet(Of Cart)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Cart)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="CityWithCacheData"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property CityWithCacheDatas() As EntitySet(Of CityWithCacheData)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of CityWithCacheData)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="C"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property Cs() As EntitySet(Of C)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of C)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="D"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property Ds() As EntitySet(Of D)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of D)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="EntityWithDataContract"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property EntityWithDataContracts() As EntitySet(Of EntityWithDataContract)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of EntityWithDataContract)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="EntityWithDataContract2"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property EntityWithDataContract2s() As EntitySet(Of EntityWithDataContract2)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of EntityWithDataContract2)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="EntityWithSpecialTypeName"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property EntityWithSpecialTypeNames() As EntitySet(Of EntityWithSpecialTypeName)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of EntityWithSpecialTypeName)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="Entity_TestEditableAttribute"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property Entity_TestEditableAttributes() As EntitySet(Of Entity_TestEditableAttribute)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of Entity_TestEditableAttribute)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="EntityWithDefaultDefaultValue"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property EntityWithDefaultDefaultValues() As EntitySet(Of EntityWithDefaultDefaultValue)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of EntityWithDefaultDefaultValue)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MixedType"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property MixedTypes() As EntitySet(Of MixedType)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MixedType)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MultipartKeyTestEntity1"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property MultipartKeyTestEntity1s() As EntitySet(Of MultipartKeyTestEntity1)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MultipartKeyTestEntity1)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MultipartKeyTestEntity2"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property MultipartKeyTestEntity2s() As EntitySet(Of MultipartKeyTestEntity2)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MultipartKeyTestEntity2)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MultipartKeyTestEntity3"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property MultipartKeyTestEntity3s() As EntitySet(Of MultipartKeyTestEntity3)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MultipartKeyTestEntity3)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="NullableFKParent"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property NullableFKParents() As EntitySet(Of NullableFKParent)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of NullableFKParent)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="POCONoValidation"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property POCONoValidations() As EntitySet(Of POCONoValidation)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of POCONoValidation)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="RoundtripOriginal_TestEntity2"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property RoundtripOriginal_TestEntity2s() As EntitySet(Of RoundtripOriginal_TestEntity2)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of RoundtripOriginal_TestEntity2)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="RoundtripOriginal_TestEntity"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property RoundtripOriginal_TestEntities() As EntitySet(Of RoundtripOriginal_TestEntity)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of RoundtripOriginal_TestEntity)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="RoundtripQueryEntity"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property RoundtripQueryEntities() As EntitySet(Of RoundtripQueryEntity)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of RoundtripQueryEntity)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="TestCycles"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property TestCycles() As EntitySet(Of TestCycles)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of TestCycles)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="TestEntityForInvokeOperations"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property TestEntityForInvokeOperations() As EntitySet(Of TestEntityForInvokeOperations)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of TestEntityForInvokeOperations)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="TimestampEntityA"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property TimestampEntityAs() As EntitySet(Of TimestampEntityA)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of TimestampEntityA)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="TimestampEntityB"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property TimestampEntityBs() As EntitySet(Of TimestampEntityB)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of TimestampEntityB)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="EntityWithXElement"/> entity instances that have been loaded into this <see cref="TestProvider_Scenarios"/> instance.
        ''' </summary>
        Public ReadOnly Property EntityWithXElements() As EntitySet(Of EntityWithXElement)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of EntityWithXElement)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="TestSideEffects"/> entity instances using the 'CreateAndGetSideEffectsObjects' query.
        ''' </summary>
        ''' <param name="name">The value for the 'name' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="TestSideEffects"/> entity instances.</returns>
        Public Function CreateAndGetSideEffectsObjectsQuery(ByVal name As String) As EntityQuery(Of TestSideEffects)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("name", name)
            Me.ValidateMethod("CreateAndGetSideEffectsObjectsQuery", parameters)
            Return MyBase.CreateQuery(Of TestSideEffects)("CreateAndGetSideEffectsObjects", parameters, true, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="A"/> entity instances using the 'GetAReturnNull' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="A"/> entity instances.</returns>
        Public Function GetAReturnNullQuery() As EntityQuery(Of A)
            Me.ValidateMethod("GetAReturnNullQuery", Nothing)
            Return MyBase.CreateQuery(Of A)("GetAReturnNull", Nothing, false, false)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="A"/> entity instances using the 'GetAs' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="A"/> entity instances.</returns>
        Public Function GetAsQuery() As EntityQuery(Of A)
            Me.ValidateMethod("GetAsQuery", Nothing)
            Return MyBase.CreateQuery(Of A)("GetAs", Nothing, false, false)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="A"/> entity instances using the 'GetAsReturnNull' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="A"/> entity instances.</returns>
        Public Function GetAsReturnNullQuery() As EntityQuery(Of A)
            Me.ValidateMethod("GetAsReturnNullQuery", Nothing)
            Return MyBase.CreateQuery(Of A)("GetAsReturnNull", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="B"/> entity instances using the 'GetBs' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="B"/> entity instances.</returns>
        Public Function GetBsQuery() As EntityQuery(Of B)
            Me.ValidateMethod("GetBsQuery", Nothing)
            Return MyBase.CreateQuery(Of B)("GetBs", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CartItem"/> entity instances using the 'GetCartItems' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CartItem"/> entity instances.</returns>
        Public Function GetCartItemsQuery() As EntityQuery(Of CartItem)
            Me.ValidateMethod("GetCartItemsQuery", Nothing)
            Return MyBase.CreateQuery(Of CartItem)("GetCartItems", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="Cart"/> entity instances using the 'GetCarts' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="Cart"/> entity instances.</returns>
        Public Function GetCartsQuery() As EntityQuery(Of Cart)
            Me.ValidateMethod("GetCartsQuery", Nothing)
            Return MyBase.CreateQuery(Of Cart)("GetCarts", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesInState' query.
        ''' </summary>
        ''' <param name="state">The value for the 'state' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesInStateQuery(ByVal state As String) As EntityQuery(Of CityWithCacheData)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("state", state)
            Me.ValidateMethod("GetCitiesInStateQuery", parameters)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesInState", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesInStateWithCaching' query.
        ''' </summary>
        ''' <param name="state">The value for the 'state' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesInStateWithCachingQuery(ByVal state As String) As EntityQuery(Of CityWithCacheData)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("state", state)
            Me.ValidateMethod("GetCitiesInStateWithCachingQuery", parameters)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesInStateWithCaching", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesInStateWithCaching2' query.
        ''' </summary>
        ''' <param name="state">The value for the 'state' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesInStateWithCaching2Query(ByVal state As String) As EntityQuery(Of CityWithCacheData)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("state", state)
            Me.ValidateMethod("GetCitiesInStateWithCaching2Query", parameters)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesInStateWithCaching2", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCacheLocationAny' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCacheLocationAnyQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCacheLocationAnyQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCacheLocationAny", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCacheLocationDownstream' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCacheLocationDownstreamQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCacheLocationDownstreamQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCacheLocationDownstream", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCacheLocationServer' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCacheLocationServerQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCacheLocationServerQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCacheLocationServer", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCacheLocationServerAndClient' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCacheLocationServerAndClientQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCacheLocationServerAndClientQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCacheLocationServerAndClient", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCaching' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCachingQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCachingQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCaching", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCaching2' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCaching2Query() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCaching2Query", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCaching2", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCachingAndThrow' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCachingAndThrowQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCachingAndThrowQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCachingAndThrow", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCachingVaryByHeaders' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCachingVaryByHeadersQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCachingVaryByHeadersQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCachingVaryByHeaders", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CityWithCacheData"/> entity instances using the 'GetCitiesWithCachingViaCacheProfile' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CityWithCacheData"/> entity instances.</returns>
        Public Function GetCitiesWithCachingViaCacheProfileQuery() As EntityQuery(Of CityWithCacheData)
            Me.ValidateMethod("GetCitiesWithCachingViaCacheProfileQuery", Nothing)
            Return MyBase.CreateQuery(Of CityWithCacheData)("GetCitiesWithCachingViaCacheProfile", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="C"/> entity instances using the 'GetCs' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="C"/> entity instances.</returns>
        Public Function GetCsQuery() As EntityQuery(Of C)
            Me.ValidateMethod("GetCsQuery", Nothing)
            Return MyBase.CreateQuery(Of C)("GetCs", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="D"/> entity instances using the 'GetDs' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="D"/> entity instances.</returns>
        Public Function GetDsQuery() As EntityQuery(Of D)
            Me.ValidateMethod("GetDsQuery", Nothing)
            Return MyBase.CreateQuery(Of D)("GetDs", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="EntityWithDataContract"/> entity instances using the 'GetEntitiesWithDataContracts' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="EntityWithDataContract"/> entity instances.</returns>
        Public Function GetEntitiesWithDataContractsQuery() As EntityQuery(Of EntityWithDataContract)
            Me.ValidateMethod("GetEntitiesWithDataContractsQuery", Nothing)
            Return MyBase.CreateQuery(Of EntityWithDataContract)("GetEntitiesWithDataContracts", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="EntityWithDataContract2"/> entity instances using the 'GetEntitiesWithDataContracts2' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="EntityWithDataContract2"/> entity instances.</returns>
        Public Function GetEntitiesWithDataContracts2Query() As EntityQuery(Of EntityWithDataContract2)
            Me.ValidateMethod("GetEntitiesWithDataContracts2Query", Nothing)
            Return MyBase.CreateQuery(Of EntityWithDataContract2)("GetEntitiesWithDataContracts2", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="EntityWithSpecialTypeName"/> entity instances using the 'GetEntitiesWithSpecialTypeName' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="EntityWithSpecialTypeName"/> entity instances.</returns>
        Public Function GetEntitiesWithSpecialTypeNameQuery() As EntityQuery(Of EntityWithSpecialTypeName)
            Me.ValidateMethod("GetEntitiesWithSpecialTypeNameQuery", Nothing)
            Return MyBase.CreateQuery(Of EntityWithSpecialTypeName)("GetEntitiesWithSpecialTypeName", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="Entity_TestEditableAttribute"/> entity instances using the 'GetEntity_TestEditableAttributes' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="Entity_TestEditableAttribute"/> entity instances.</returns>
        Public Function GetEntity_TestEditableAttributesQuery() As EntityQuery(Of Entity_TestEditableAttribute)
            Me.ValidateMethod("GetEntity_TestEditableAttributesQuery", Nothing)
            Return MyBase.CreateQuery(Of Entity_TestEditableAttribute)("GetEntity_TestEditableAttributes", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="EntityWithDefaultDefaultValue"/> entity instances using the 'GetEntityWithDefaultValue' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="EntityWithDefaultDefaultValue"/> entity instances.</returns>
        Public Function GetEntityWithDefaultValueQuery() As EntityQuery(Of EntityWithDefaultDefaultValue)
            Me.ValidateMethod("GetEntityWithDefaultValueQuery", Nothing)
            Return MyBase.CreateQuery(Of EntityWithDefaultDefaultValue)("GetEntityWithDefaultValue", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MixedType"/> entity instances using the 'GetMixedTypes' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MixedType"/> entity instances.</returns>
        Public Function GetMixedTypesQuery() As EntityQuery(Of MixedType)
            Me.ValidateMethod("GetMixedTypesQuery", Nothing)
            Return MyBase.CreateQuery(Of MixedType)("GetMixedTypes", Nothing, false, true)
        End Function
        
        'Unable to generate the following attributes for parameter 'broiled' due to the following errors:
        '
        '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'. If you would like the attribute to be generated, make sure the assembly containing the attribute is referenced on the client.
        '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references a method 'IsStringValid' on type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'.
        '<CustomValidationAttribute(GetType(TestDomainServices.ServerOnlyValidator), "IsStringValid")> _
        '
        'Unable to generate the following attributes for parameter 'cheese' due to the following errors:
        '
        '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'. If you would like the attribute to be generated, make sure the assembly containing the attribute is referenced on the client.
        '- The attribute 'System.ComponentModel.DataAnnotations.CustomValidationAttribute' references a method 'IsStringValid' on type 'TestDomainServices.ServerOnlyValidator' that is not accessible in the client project 'MockProject'.
        '<CustomValidationAttribute(GetType(TestDomainServices.ServerOnlyValidator), "IsStringValid")> _
        '
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MixedType"/> entity instances using the 'GetMixedTypes_BadAttributes' query.
        ''' </summary>
        ''' <param name="broiled">The value for the 'broiled' parameter of the query.</param>
        ''' <param name="cheese">The value for the 'cheese' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MixedType"/> entity instances.</returns>
        Public Function GetMixedTypes_BadAttributesQuery(ByVal broiled As Char, ByVal cheese As String) As EntityQuery(Of MixedType)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("broiled", broiled)
            parameters.Add("cheese", cheese)
            Me.ValidateMethod("GetMixedTypes_BadAttributesQuery", parameters)
            Return MyBase.CreateQuery(Of MixedType)("GetMixedTypes_BadAttributes", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MixedType"/> entity instances using the 'GetMixedTypes_Nullable' query.
        ''' </summary>
        ''' <param name="idToChange">The value for the 'idToChange' parameter of the query.</param>
        ''' <param name="b1">The value for the 'b1' parameter of the query.</param>
        ''' <param name="b2">The value for the 'b2' parameter of the query.</param>
        ''' <param name="sb">The value for the 'sb' parameter of the query.</param>
        ''' <param name="int16">The value for the 'int16' parameter of the query.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of the query.</param>
        ''' <param name="int32">The value for the 'int32' parameter of the query.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of the query.</param>
        ''' <param name="int64">The value for the 'int64' parameter of the query.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of the query.</param>
        ''' <param name="ch">The value for the 'ch' parameter of the query.</param>
        ''' <param name="d">The value for the 'd' parameter of the query.</param>
        ''' <param name="s">The value for the 's' parameter of the query.</param>
        ''' <param name="dec">The value for the 'dec' parameter of the query.</param>
        ''' <param name="dt">The value for the 'dt' parameter of the query.</param>
        ''' <param name="ts">The value for the 'ts' parameter of the query.</param>
        ''' <param name="g">The value for the 'g' parameter of the query.</param>
        ''' <param name="en">The value for the 'en' parameter of the query.</param>
        ''' <param name="nullableTimeSpans">The value for the 'nullableTimeSpans' parameter of the query.</param>
        ''' <param name="nullableDictionaryDateTime">The value for the 'nullableDictionaryDateTime' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MixedType"/> entity instances.</returns>
        Public Function GetMixedTypes_NullableQuery( _
                    ByVal idToChange As String,  _
                    ByVal b1 As Nullable(Of Boolean),  _
                    ByVal b2 As Nullable(Of Byte),  _
                    ByVal sb As Nullable(Of SByte),  _
                    ByVal int16 As Nullable(Of Short),  _
                    ByVal uint16 As Nullable(Of UShort),  _
                    ByVal int32 As Nullable(Of Integer),  _
                    ByVal uint32 As Nullable(Of UInteger),  _
                    ByVal int64 As Nullable(Of Long),  _
                    ByVal uint64 As Nullable(Of ULong),  _
                    ByVal ch As Nullable(Of Char),  _
                    ByVal d As Nullable(Of Double),  _
                    ByVal s As Nullable(Of Single),  _
                    ByVal dec As Nullable(Of Decimal),  _
                    ByVal dt As Nullable(Of DateTime),  _
                    ByVal ts As Nullable(Of TimeSpan),  _
                    ByVal g As Nullable(Of Guid),  _
                    ByVal en As Nullable(Of TestEnum),  _
                    ByVal nullableTimeSpans As IEnumerable(Of Nullable(Of TimeSpan)),  _
                    ByVal nullableDictionaryDateTime As Dictionary(Of DateTime, Nullable(Of DateTime))) As EntityQuery(Of MixedType)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("idToChange", idToChange)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            parameters.Add("dec", dec)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("g", g)
            parameters.Add("en", en)
            parameters.Add("nullableTimeSpans", nullableTimeSpans)
            parameters.Add("nullableDictionaryDateTime", nullableDictionaryDateTime)
            Me.ValidateMethod("GetMixedTypes_NullableQuery", parameters)
            Return MyBase.CreateQuery(Of MixedType)("GetMixedTypes_Nullable", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MixedType"/> entity instances using the 'GetMixedTypes_Predefined' query.
        ''' </summary>
        ''' <param name="idToChange">The value for the 'idToChange' parameter of the query.</param>
        ''' <param name="s">The value for the 's' parameter of the query.</param>
        ''' <param name="d">The value for the 'd' parameter of the query.</param>
        ''' <param name="dt">The value for the 'dt' parameter of the query.</param>
        ''' <param name="ts">The value for the 'ts' parameter of the query.</param>
        ''' <param name="dto">The value for the 'dto' parameter of the query.</param>
        ''' <param name="strings">The value for the 'strings' parameter of the query.</param>
        ''' <param name="uri">The value for the 'uri' parameter of the query.</param>
        ''' <param name="g">The value for the 'g' parameter of the query.</param>
        ''' <param name="b">The value for the 'b' parameter of the query.</param>
        ''' <param name="x">The value for the 'x' parameter of the query.</param>
        ''' <param name="bArray">The value for the 'bArray' parameter of the query.</param>
        ''' <param name="en">The value for the 'en' parameter of the query.</param>
        ''' <param name="ints">The value for the 'ints' parameter of the query.</param>
        ''' <param name="dictionaryDateTime">The value for the 'dictionaryDateTime' parameter of the query.</param>
        ''' <param name="dictionaryGuid">The value for the 'dictionaryGuid' parameter of the query.</param>
        ''' <param name="dictionaryString">The value for the 'dictionaryString' parameter of the query.</param>
        ''' <param name="dictionaryTestEnum">The value for the 'dictionaryTestEnum' parameter of the query.</param>
        ''' <param name="dictionaryXElement">The value for the 'dictionaryXElement' parameter of the query.</param>
        ''' <param name="dictionaryDateTimeOffset">The value for the 'dictionaryDateTimeOffset' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MixedType"/> entity instances.</returns>
        Public Function GetMixedTypes_PredefinedQuery( _
                    ByVal idToChange As String,  _
                    ByVal s As String,  _
                    ByVal d As Decimal,  _
                    ByVal dt As DateTime,  _
                    ByVal ts As TimeSpan,  _
                    ByVal dto As DateTimeOffset,  _
                    ByVal strings As IEnumerable(Of String),  _
                    ByVal uri As Uri,  _
                    ByVal g As Guid,  _
                    ByVal b() As Byte,  _
                    ByVal x As XElement,  _
                    ByVal bArray() As Byte,  _
                    ByVal en As TestEnum,  _
                    ByVal ints() As Integer,  _
                    ByVal dictionaryDateTime As Dictionary(Of DateTime, DateTime),  _
                    ByVal dictionaryGuid As Dictionary(Of Guid, Guid),  _
                    ByVal dictionaryString As Dictionary(Of String, String),  _
                    ByVal dictionaryTestEnum As Dictionary(Of TestEnum, TestEnum),  _
                    ByVal dictionaryXElement As Dictionary(Of XElement, XElement),  _
                    ByVal dictionaryDateTimeOffset As Dictionary(Of DateTimeOffset, DateTimeOffset)) As EntityQuery(Of MixedType)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("idToChange", idToChange)
            parameters.Add("s", s)
            parameters.Add("d", d)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("dto", dto)
            parameters.Add("strings", strings)
            parameters.Add("uri", uri)
            parameters.Add("g", g)
            parameters.Add("b", b)
            parameters.Add("x", x)
            parameters.Add("bArray", bArray)
            parameters.Add("en", en)
            parameters.Add("ints", ints)
            parameters.Add("dictionaryDateTime", dictionaryDateTime)
            parameters.Add("dictionaryGuid", dictionaryGuid)
            parameters.Add("dictionaryString", dictionaryString)
            parameters.Add("dictionaryTestEnum", dictionaryTestEnum)
            parameters.Add("dictionaryXElement", dictionaryXElement)
            parameters.Add("dictionaryDateTimeOffset", dictionaryDateTimeOffset)
            Me.ValidateMethod("GetMixedTypes_PredefinedQuery", parameters)
            Return MyBase.CreateQuery(Of MixedType)("GetMixedTypes_Predefined", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MixedType"/> entity instances using the 'GetMixedTypes_Primitive' query.
        ''' </summary>
        ''' <param name="idToChange">The value for the 'idToChange' parameter of the query.</param>
        ''' <param name="b1">The value for the 'b1' parameter of the query.</param>
        ''' <param name="b2">The value for the 'b2' parameter of the query.</param>
        ''' <param name="sb">The value for the 'sb' parameter of the query.</param>
        ''' <param name="int16">The value for the 'int16' parameter of the query.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of the query.</param>
        ''' <param name="int32">The value for the 'int32' parameter of the query.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of the query.</param>
        ''' <param name="int64">The value for the 'int64' parameter of the query.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of the query.</param>
        ''' <param name="ch">The value for the 'ch' parameter of the query.</param>
        ''' <param name="d">The value for the 'd' parameter of the query.</param>
        ''' <param name="s">The value for the 's' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MixedType"/> entity instances.</returns>
        Public Function GetMixedTypes_PrimitiveQuery(ByVal idToChange As String, ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single) As EntityQuery(Of MixedType)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("idToChange", idToChange)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            Me.ValidateMethod("GetMixedTypes_PrimitiveQuery", parameters)
            Return MyBase.CreateQuery(Of MixedType)("GetMixedTypes_Primitive", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MixedType"/> entity instances using the 'GetMixedTypesThrow' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MixedType"/> entity instances.</returns>
        Public Function GetMixedTypesThrowQuery() As EntityQuery(Of MixedType)
            Me.ValidateMethod("GetMixedTypesThrowQuery", Nothing)
            Return MyBase.CreateQuery(Of MixedType)("GetMixedTypesThrow", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MixedType"/> entity instances using the 'GetMixedTypeSuperset' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MixedType"/> entity instances.</returns>
        Public Function GetMixedTypeSupersetQuery() As EntityQuery(Of MixedType)
            Me.ValidateMethod("GetMixedTypeSupersetQuery", Nothing)
            Return MyBase.CreateQuery(Of MixedType)("GetMixedTypeSuperset", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MultipartKeyTestEntity1"/> entity instances using the 'GetMultipartKeyTestEntity1s' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MultipartKeyTestEntity1"/> entity instances.</returns>
        Public Function GetMultipartKeyTestEntity1sQuery() As EntityQuery(Of MultipartKeyTestEntity1)
            Me.ValidateMethod("GetMultipartKeyTestEntity1sQuery", Nothing)
            Return MyBase.CreateQuery(Of MultipartKeyTestEntity1)("GetMultipartKeyTestEntity1s", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MultipartKeyTestEntity2"/> entity instances using the 'GetMultipartKeyTestEntity2s' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MultipartKeyTestEntity2"/> entity instances.</returns>
        Public Function GetMultipartKeyTestEntity2sQuery() As EntityQuery(Of MultipartKeyTestEntity2)
            Me.ValidateMethod("GetMultipartKeyTestEntity2sQuery", Nothing)
            Return MyBase.CreateQuery(Of MultipartKeyTestEntity2)("GetMultipartKeyTestEntity2s", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MultipartKeyTestEntity3"/> entity instances using the 'GetMultipartKeyTestEntity3s' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MultipartKeyTestEntity3"/> entity instances.</returns>
        Public Function GetMultipartKeyTestEntity3sQuery() As EntityQuery(Of MultipartKeyTestEntity3)
            Me.ValidateMethod("GetMultipartKeyTestEntity3sQuery", Nothing)
            Return MyBase.CreateQuery(Of MultipartKeyTestEntity3)("GetMultipartKeyTestEntity3s", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="NullableFKParent"/> entity instances using the 'GetNullableFKParents' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="NullableFKParent"/> entity instances.</returns>
        Public Function GetNullableFKParentsQuery() As EntityQuery(Of NullableFKParent)
            Me.ValidateMethod("GetNullableFKParentsQuery", Nothing)
            Return MyBase.CreateQuery(Of NullableFKParent)("GetNullableFKParents", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="POCONoValidation"/> entity instances using the 'GetPOCONoValidations' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="POCONoValidation"/> entity instances.</returns>
        Public Function GetPOCONoValidationsQuery() As EntityQuery(Of POCONoValidation)
            Me.ValidateMethod("GetPOCONoValidationsQuery", Nothing)
            Return MyBase.CreateQuery(Of POCONoValidation)("GetPOCONoValidations", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="RoundtripOriginal_TestEntity2"/> entity instances using the 'GetRoundtripOriginal_ClassAttribute_TestEntities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="RoundtripOriginal_TestEntity2"/> entity instances.</returns>
        Public Function GetRoundtripOriginal_ClassAttribute_TestEntitiesQuery() As EntityQuery(Of RoundtripOriginal_TestEntity2)
            Me.ValidateMethod("GetRoundtripOriginal_ClassAttribute_TestEntitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of RoundtripOriginal_TestEntity2)("GetRoundtripOriginal_ClassAttribute_TestEntities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="RoundtripOriginal_TestEntity"/> entity instances using the 'GetRoundtripOriginal_TestEntities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="RoundtripOriginal_TestEntity"/> entity instances.</returns>
        Public Function GetRoundtripOriginal_TestEntitiesQuery() As EntityQuery(Of RoundtripOriginal_TestEntity)
            Me.ValidateMethod("GetRoundtripOriginal_TestEntitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of RoundtripOriginal_TestEntity)("GetRoundtripOriginal_TestEntities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="RoundtripQueryEntity"/> entity instances using the 'GetRoundtripQueryEntities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="RoundtripQueryEntity"/> entity instances.</returns>
        Public Function GetRoundtripQueryEntitiesQuery() As EntityQuery(Of RoundtripQueryEntity)
            Me.ValidateMethod("GetRoundtripQueryEntitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of RoundtripQueryEntity)("GetRoundtripQueryEntities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="TestCycles"/> entity instances using the 'GetTestCyclesRoot' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="TestCycles"/> entity instances.</returns>
        Public Function GetTestCyclesRootQuery() As EntityQuery(Of TestCycles)
            Me.ValidateMethod("GetTestCyclesRootQuery", Nothing)
            Return MyBase.CreateQuery(Of TestCycles)("GetTestCyclesRoot", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="TestCycles"/> entity instances using the 'GetTestCyclesTier1' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="TestCycles"/> entity instances.</returns>
        Public Function GetTestCyclesTier1Query() As EntityQuery(Of TestCycles)
            Me.ValidateMethod("GetTestCyclesTier1Query", Nothing)
            Return MyBase.CreateQuery(Of TestCycles)("GetTestCyclesTier1", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="TestEntityForInvokeOperations"/> entity instances using the 'GetTestEntityForInvokeOperations' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="TestEntityForInvokeOperations"/> entity instances.</returns>
        Public Function GetTestEntityForInvokeOperationsQuery() As EntityQuery(Of TestEntityForInvokeOperations)
            Me.ValidateMethod("GetTestEntityForInvokeOperationsQuery", Nothing)
            Return MyBase.CreateQuery(Of TestEntityForInvokeOperations)("GetTestEntityForInvokeOperations", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="TimestampEntityA"/> entity instances using the 'GetTimestampEntityAs' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="TimestampEntityA"/> entity instances.</returns>
        Public Function GetTimestampEntityAsQuery() As EntityQuery(Of TimestampEntityA)
            Me.ValidateMethod("GetTimestampEntityAsQuery", Nothing)
            Return MyBase.CreateQuery(Of TimestampEntityA)("GetTimestampEntityAs", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="TimestampEntityB"/> entity instances using the 'GetTimestampEntityBs' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="TimestampEntityB"/> entity instances.</returns>
        Public Function GetTimestampEntityBsQuery() As EntityQuery(Of TimestampEntityB)
            Me.ValidateMethod("GetTimestampEntityBsQuery", Nothing)
            Return MyBase.CreateQuery(Of TimestampEntityB)("GetTimestampEntityBs", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="EntityWithXElement"/> entity instances using the 'GetXElemEntities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="EntityWithXElement"/> entity instances.</returns>
        Public Function GetXElemEntitiesQuery() As EntityQuery(Of EntityWithXElement)
            Me.ValidateMethod("GetXElemEntitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of EntityWithXElement)("GetXElemEntities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="A"/> entity instances using the 'QueryWithParamValidation' query.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of the query.</param>
        ''' <param name="b">The value for the 'b' parameter of the query.</param>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="A"/> entity instances.</returns>
        Public Function QueryWithParamValidationQuery(<Range(0, 10)> ByVal a As Integer, <StringLength(2)> ByVal b As String) As EntityQuery(Of A)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            parameters.Add("b", b)
            Me.ValidateMethod("QueryWithParamValidationQuery", parameters)
            Return MyBase.CreateQuery(Of A)("QueryWithParamValidation", parameters, false, true)
        End Function
        
        ''' <summary>
        ''' Invokes the 'TestPrimitive' method of the specified <see cref="MixedType"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MixedType"/> entity instance.</param>
        ''' <param name="b1">The value for the 'b1' parameter for this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter for this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter for this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter for this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter for this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter for this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter for this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter for this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter for this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter for this action.</param>
        ''' <param name="d">The value for the 'd' parameter for this action.</param>
        ''' <param name="s">The value for the 's' parameter for this action.</param>
        Public Sub TestPrimitive(ByVal entity As MixedType, ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single)
            entity.TestPrimitive(b1, b2, sb, int16, uint16, int32, uint32, int64, uint64, ch, d, s)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'TestPredefined' method of the specified <see cref="MixedType"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MixedType"/> entity instance.</param>
        ''' <param name="s">The value for the 's' parameter for this action.</param>
        ''' <param name="d">The value for the 'd' parameter for this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter for this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter for this action.</param>
        ''' <param name="strings">The value for the 'strings' parameter for this action.</param>
        ''' <param name="uri">The value for the 'uri' parameter for this action.</param>
        ''' <param name="g">The value for the 'g' parameter for this action.</param>
        ''' <param name="b">The value for the 'b' parameter for this action.</param>
        ''' <param name="bArray">The value for the 'bArray' parameter for this action.</param>
        ''' <param name="en">The value for the 'en' parameter for this action.</param>
        ''' <param name="dictionary">The value for the 'dictionary' parameter for this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter for this action.</param>
        Public Sub TestPredefined(ByVal entity As MixedType, ByVal s As String, ByVal d As Decimal, ByVal dt As DateTime, ByVal ts As TimeSpan, ByVal strings As IEnumerable(Of String), ByVal uri As Uri, ByVal g As Guid, ByVal b() As Byte, ByVal bArray() As Byte, ByVal en As TestEnum, ByVal dictionary As Dictionary(Of String, String), ByVal dto As DateTimeOffset)
            entity.TestPredefined(s, d, dt, ts, strings, uri, g, b, bArray, en, dictionary, dto)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'TestNullablePrimitive' method of the specified <see cref="MixedType"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MixedType"/> entity instance.</param>
        ''' <param name="b1">The value for the 'b1' parameter for this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter for this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter for this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter for this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter for this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter for this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter for this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter for this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter for this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter for this action.</param>
        ''' <param name="d">The value for the 'd' parameter for this action.</param>
        ''' <param name="s">The value for the 's' parameter for this action.</param>
        Public Sub TestNullablePrimitive(ByVal entity As MixedType, ByVal b1 As Nullable(Of Boolean), ByVal b2 As Nullable(Of Byte), ByVal sb As Nullable(Of SByte), ByVal int16 As Nullable(Of Short), ByVal uint16 As Nullable(Of UShort), ByVal int32 As Nullable(Of Integer), ByVal uint32 As Nullable(Of UInteger), ByVal int64 As Nullable(Of Long), ByVal uint64 As Nullable(Of ULong), ByVal ch As Nullable(Of Char), ByVal d As Nullable(Of Double), ByVal s As Nullable(Of Single))
            entity.TestNullablePrimitive(b1, b2, sb, int16, uint16, int32, uint32, int64, uint64, ch, d, s)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'TestNullablePredefined' method of the specified <see cref="MixedType"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MixedType"/> entity instance.</param>
        ''' <param name="d">The value for the 'd' parameter for this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter for this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter for this action.</param>
        ''' <param name="g">The value for the 'g' parameter for this action.</param>
        ''' <param name="en">The value for the 'en' parameter for this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter for this action.</param>
        Public Sub TestNullablePredefined(ByVal entity As MixedType, ByVal d As Nullable(Of Decimal), ByVal dt As Nullable(Of DateTime), ByVal ts As Nullable(Of TimeSpan), ByVal g As Nullable(Of Guid), ByVal en As Nullable(Of TestEnum), ByVal dto As Nullable(Of DateTimeOffset))
            entity.TestNullablePredefined(d, dt, ts, g, en, dto)
        End Sub
        
        ''' <summary>
        ''' Asynchronously invokes the 'IncrementBid1ForA' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function IncrementBid1ForA(ByVal a As A, ByVal callback As Action(Of InvokeOperation(Of Integer)), ByVal userState As Object) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            Me.ValidateMethod("IncrementBid1ForA", parameters)
            Return Me.InvokeOperation(Of Integer)("IncrementBid1ForA", GetType(Integer), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'IncrementBid1ForA' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function IncrementBid1ForA(ByVal a As A) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            Me.ValidateMethod("IncrementBid1ForA", parameters)
            Return Me.InvokeOperation(Of Integer)("IncrementBid1ForA", GetType(Integer), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'IncrementBid1ForA' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function IncrementBid1ForAAsync(ByVal a As A, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            Me.ValidateMethod("IncrementBid1ForA", parameters)
            Return Me.InvokeOperationAsync(Of Integer)("IncrementBid1ForA", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'IncrementBid1ForABy' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="delta">The value for the 'delta' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function IncrementBid1ForABy(ByVal a As A, <Range(5, 10)> ByVal delta As Integer, ByVal callback As Action(Of InvokeOperation(Of Integer)), ByVal userState As Object) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            parameters.Add("delta", delta)
            Me.ValidateMethod("IncrementBid1ForABy", parameters)
            Return Me.InvokeOperation(Of Integer)("IncrementBid1ForABy", GetType(Integer), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'IncrementBid1ForABy' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="delta">The value for the 'delta' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function IncrementBid1ForABy(ByVal a As A, <Range(5, 10)> ByVal delta As Integer) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            parameters.Add("delta", delta)
            Me.ValidateMethod("IncrementBid1ForABy", parameters)
            Return Me.InvokeOperation(Of Integer)("IncrementBid1ForABy", GetType(Integer), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'IncrementBid1ForABy' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="delta">The value for the 'delta' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function IncrementBid1ForAByAsync(ByVal a As A, <Range(5, 10)> ByVal delta As Integer, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            parameters.Add("delta", delta)
            Me.ValidateMethod("IncrementBid1ForABy", parameters)
            Return Me.InvokeOperationAsync(Of Integer)("IncrementBid1ForABy", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOperationWithParamValidation' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="b">The value for the 'b' parameter of this action.</param>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function InvokeOperationWithParamValidation(<Range(0, 10)> ByVal a As Integer, <StringLength(2)> ByVal b As String, ByVal entity As CityWithCacheData, ByVal callback As Action(Of InvokeOperation(Of Boolean)), ByVal userState As Object) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            parameters.Add("b", b)
            parameters.Add("entity", entity)
            Me.ValidateMethod("InvokeOperationWithParamValidation", parameters)
            Return Me.InvokeOperation(Of Boolean)("InvokeOperationWithParamValidation", GetType(Boolean), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOperationWithParamValidation' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="b">The value for the 'b' parameter of this action.</param>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function InvokeOperationWithParamValidation(<Range(0, 10)> ByVal a As Integer, <StringLength(2)> ByVal b As String, ByVal entity As CityWithCacheData) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            parameters.Add("b", b)
            parameters.Add("entity", entity)
            Me.ValidateMethod("InvokeOperationWithParamValidation", parameters)
            Return Me.InvokeOperation(Of Boolean)("InvokeOperationWithParamValidation", GetType(Boolean), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOperationWithParamValidation' method of the DomainService.
        ''' </summary>
        ''' <param name="a">The value for the 'a' parameter of this action.</param>
        ''' <param name="b">The value for the 'b' parameter of this action.</param>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function InvokeOperationWithParamValidationAsync(<Range(0, 10)> ByVal a As Integer, <StringLength(2)> ByVal b As String, ByVal entity As CityWithCacheData, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Boolean))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("a", a)
            parameters.Add("b", b)
            parameters.Add("entity", entity)
            Me.ValidateMethod("InvokeOperationWithParamValidation", parameters)
            Return Me.InvokeOperationAsync(Of Boolean)("InvokeOperationWithParamValidation", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParam' method of the DomainService.
        ''' </summary>
        ''' <param name="list">The value for the 'list' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function InvokeOpWithIEnumerableParam(ByVal list As IEnumerable(Of TestEntityForInvokeOperations), ByVal callback As Action(Of InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))), ByVal userState As Object) As InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("list", list)
            Me.ValidateMethod("InvokeOpWithIEnumerableParam", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))("InvokeOpWithIEnumerableParam", GetType(IEnumerable(Of TestEntityForInvokeOperations)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParam' method of the DomainService.
        ''' </summary>
        ''' <param name="list">The value for the 'list' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function InvokeOpWithIEnumerableParam(ByVal list As IEnumerable(Of TestEntityForInvokeOperations)) As InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("list", list)
            Me.ValidateMethod("InvokeOpWithIEnumerableParam", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))("InvokeOpWithIEnumerableParam", GetType(IEnumerable(Of TestEntityForInvokeOperations)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParam' method of the DomainService.
        ''' </summary>
        ''' <param name="list">The value for the 'list' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function InvokeOpWithIEnumerableParamAsync(ByVal list As IEnumerable(Of TestEntityForInvokeOperations), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of IEnumerable(Of TestEntityForInvokeOperations)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("list", list)
            Me.ValidateMethod("InvokeOpWithIEnumerableParam", parameters)
            Return Me.InvokeOperationAsync(Of IEnumerable(Of TestEntityForInvokeOperations))("InvokeOpWithIEnumerableParam", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParamAndNoSideEffects' method of the DomainService.
        ''' </summary>
        ''' <param name="list">The value for the 'list' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function InvokeOpWithIEnumerableParamAndNoSideEffects(ByVal list As IEnumerable(Of TestEntityForInvokeOperations), ByVal callback As Action(Of InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))), ByVal userState As Object) As InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("list", list)
            Me.ValidateMethod("InvokeOpWithIEnumerableParamAndNoSideEffects", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))("InvokeOpWithIEnumerableParamAndNoSideEffects", GetType(IEnumerable(Of TestEntityForInvokeOperations)), parameters, false, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParamAndNoSideEffects' method of the DomainService.
        ''' </summary>
        ''' <param name="list">The value for the 'list' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function InvokeOpWithIEnumerableParamAndNoSideEffects(ByVal list As IEnumerable(Of TestEntityForInvokeOperations)) As InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("list", list)
            Me.ValidateMethod("InvokeOpWithIEnumerableParamAndNoSideEffects", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of TestEntityForInvokeOperations))("InvokeOpWithIEnumerableParamAndNoSideEffects", GetType(IEnumerable(Of TestEntityForInvokeOperations)), parameters, false, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParamAndNoSideEffects' method of the DomainService.
        ''' </summary>
        ''' <param name="list">The value for the 'list' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function InvokeOpWithIEnumerableParamAndNoSideEffectsAsync(ByVal list As IEnumerable(Of TestEntityForInvokeOperations), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of IEnumerable(Of TestEntityForInvokeOperations)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("list", list)
            Me.ValidateMethod("InvokeOpWithIEnumerableParamAndNoSideEffects", parameters)
            Return Me.InvokeOperationAsync(Of IEnumerable(Of TestEntityForInvokeOperations))("InvokeOpWithIEnumerableParamAndNoSideEffects", parameters, false, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'MethodRequiresAuthentication' method of the DomainService.
        ''' </summary>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function MethodRequiresAuthentication(ByVal callback As Action(Of InvokeOperation), ByVal userState As Object) As InvokeOperation
            Me.ValidateMethod("MethodRequiresAuthentication", Nothing)
            Return Me.InvokeOperation("MethodRequiresAuthentication", GetType(System.Void), Nothing, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'MethodRequiresAuthentication' method of the DomainService.
        ''' </summary>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function MethodRequiresAuthentication() As InvokeOperation
            Me.ValidateMethod("MethodRequiresAuthentication", Nothing)
            Return Me.InvokeOperation("MethodRequiresAuthentication", GetType(System.Void), Nothing, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'MethodRequiresAuthentication' method of the DomainService.
        ''' </summary>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function MethodRequiresAuthenticationAsync(Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult)
            Me.ValidateMethod("MethodRequiresAuthentication", Nothing)
            Return Me.InvokeOperationAsync("MethodRequiresAuthentication", Nothing, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnHttpMethodWithoutSideEffects_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnHttpMethodWithoutSideEffects_Online(ByVal callback As Action(Of InvokeOperation(Of String)), ByVal userState As Object) As InvokeOperation(Of String)
            Me.ValidateMethod("ReturnHttpMethodWithoutSideEffects_Online", Nothing)
            Return Me.InvokeOperation(Of String)("ReturnHttpMethodWithoutSideEffects_Online", GetType(String), Nothing, false, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnHttpMethodWithoutSideEffects_Online' method of the DomainService.
        ''' </summary>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnHttpMethodWithoutSideEffects_Online() As InvokeOperation(Of String)
            Me.ValidateMethod("ReturnHttpMethodWithoutSideEffects_Online", Nothing)
            Return Me.InvokeOperation(Of String)("ReturnHttpMethodWithoutSideEffects_Online", GetType(String), Nothing, false, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnHttpMethodWithoutSideEffects_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnHttpMethodWithoutSideEffects_OnlineAsync(Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of String))
            Me.ValidateMethod("ReturnHttpMethodWithoutSideEffects_Online", Nothing)
            Return Me.InvokeOperationAsync(Of String)("ReturnHttpMethodWithoutSideEffects_Online", Nothing, false, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnHttpMethodWithSideEffects_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnHttpMethodWithSideEffects_Online(ByVal callback As Action(Of InvokeOperation(Of String)), ByVal userState As Object) As InvokeOperation(Of String)
            Me.ValidateMethod("ReturnHttpMethodWithSideEffects_Online", Nothing)
            Return Me.InvokeOperation(Of String)("ReturnHttpMethodWithSideEffects_Online", GetType(String), Nothing, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnHttpMethodWithSideEffects_Online' method of the DomainService.
        ''' </summary>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnHttpMethodWithSideEffects_Online() As InvokeOperation(Of String)
            Me.ValidateMethod("ReturnHttpMethodWithSideEffects_Online", Nothing)
            Return Me.InvokeOperation(Of String)("ReturnHttpMethodWithSideEffects_Online", GetType(String), Nothing, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnHttpMethodWithSideEffects_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnHttpMethodWithSideEffects_OnlineAsync(Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of String))
            Me.ValidateMethod("ReturnHttpMethodWithSideEffects_Online", Nothing)
            Return Me.InvokeOperationAsync(Of String)("ReturnHttpMethodWithSideEffects_Online", Nothing, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsBinary_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsBinary_Online(ByVal value() As Byte, ByVal callback As Action(Of InvokeOperation(Of Byte())), ByVal userState As Object) As InvokeOperation(Of Byte())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsBinary_Online", parameters)
            Return Me.InvokeOperation(Of Byte())("ReturnsBinary_Online", GetType(Byte()), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsBinary_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsBinary_Online(ByVal value() As Byte) As InvokeOperation(Of Byte())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsBinary_Online", parameters)
            Return Me.InvokeOperation(Of Byte())("ReturnsBinary_Online", GetType(Byte()), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsBinary_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsBinary_OnlineAsync(ByVal value() As Byte, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Byte()))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsBinary_Online", parameters)
            Return Me.InvokeOperationAsync(Of Byte())("ReturnsBinary_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsBoolean_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsBoolean_Online(ByVal value As Boolean, ByVal callback As Action(Of InvokeOperation(Of Boolean)), ByVal userState As Object) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsBoolean_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("ReturnsBoolean_Online", GetType(Boolean), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsBoolean_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsBoolean_Online(ByVal value As Boolean) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsBoolean_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("ReturnsBoolean_Online", GetType(Boolean), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsBoolean_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsBoolean_OnlineAsync(ByVal value As Boolean, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Boolean))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsBoolean_Online", parameters)
            Return Me.InvokeOperationAsync(Of Boolean)("ReturnsBoolean_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsByte_Online(ByVal value As Byte, ByVal callback As Action(Of InvokeOperation(Of Byte)), ByVal userState As Object) As InvokeOperation(Of Byte)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsByte_Online", parameters)
            Return Me.InvokeOperation(Of Byte)("ReturnsByte_Online", GetType(Byte), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsByte_Online(ByVal value As Byte) As InvokeOperation(Of Byte)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsByte_Online", parameters)
            Return Me.InvokeOperation(Of Byte)("ReturnsByte_Online", GetType(Byte), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsByte_OnlineAsync(ByVal value As Byte, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Byte))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsByte_Online", parameters)
            Return Me.InvokeOperationAsync(Of Byte)("ReturnsByte_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsByteArray_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsByteArray_Online(ByVal value() As Byte, ByVal callback As Action(Of InvokeOperation(Of Byte())), ByVal userState As Object) As InvokeOperation(Of Byte())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsByteArray_Online", parameters)
            Return Me.InvokeOperation(Of Byte())("ReturnsByteArray_Online", GetType(Byte()), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsByteArray_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsByteArray_Online(ByVal value() As Byte) As InvokeOperation(Of Byte())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsByteArray_Online", parameters)
            Return Me.InvokeOperation(Of Byte())("ReturnsByteArray_Online", GetType(Byte()), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsByteArray_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsByteArray_OnlineAsync(ByVal value() As Byte, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Byte()))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsByteArray_Online", parameters)
            Return Me.InvokeOperationAsync(Of Byte())("ReturnsByteArray_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsChar_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsChar_Online(ByVal value As Char, ByVal callback As Action(Of InvokeOperation(Of Char)), ByVal userState As Object) As InvokeOperation(Of Char)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsChar_Online", parameters)
            Return Me.InvokeOperation(Of Char)("ReturnsChar_Online", GetType(Char), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsChar_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsChar_Online(ByVal value As Char) As InvokeOperation(Of Char)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsChar_Online", parameters)
            Return Me.InvokeOperation(Of Char)("ReturnsChar_Online", GetType(Char), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsChar_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsChar_OnlineAsync(ByVal value As Char, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Char))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsChar_Online", parameters)
            Return Me.InvokeOperationAsync(Of Char)("ReturnsChar_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTime_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTime_Online(ByVal value As DateTime, ByVal callback As Action(Of InvokeOperation(Of DateTime)), ByVal userState As Object) As InvokeOperation(Of DateTime)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTime_Online", parameters)
            Return Me.InvokeOperation(Of DateTime)("ReturnsDateTime_Online", GetType(DateTime), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTime_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTime_Online(ByVal value As DateTime) As InvokeOperation(Of DateTime)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTime_Online", parameters)
            Return Me.InvokeOperation(Of DateTime)("ReturnsDateTime_Online", GetType(DateTime), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTime_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsDateTime_OnlineAsync(ByVal value As DateTime, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of DateTime))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTime_Online", parameters)
            Return Me.InvokeOperationAsync(Of DateTime)("ReturnsDateTime_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimeOffset_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTimeOffset_Online(ByVal value As DateTimeOffset, ByVal callback As Action(Of InvokeOperation(Of DateTimeOffset)), ByVal userState As Object) As InvokeOperation(Of DateTimeOffset)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimeOffset_Online", parameters)
            Return Me.InvokeOperation(Of DateTimeOffset)("ReturnsDateTimeOffset_Online", GetType(DateTimeOffset), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimeOffset_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTimeOffset_Online(ByVal value As DateTimeOffset) As InvokeOperation(Of DateTimeOffset)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimeOffset_Online", parameters)
            Return Me.InvokeOperation(Of DateTimeOffset)("ReturnsDateTimeOffset_Online", GetType(DateTimeOffset), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimeOffset_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsDateTimeOffset_OnlineAsync(ByVal value As DateTimeOffset, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of DateTimeOffset))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimeOffset_Online", parameters)
            Return Me.InvokeOperationAsync(Of DateTimeOffset)("ReturnsDateTimeOffset_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimeOffsets_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTimeOffsets_Online(ByVal value() As DateTimeOffset, ByVal callback As Action(Of InvokeOperation(Of DateTimeOffset())), ByVal userState As Object) As InvokeOperation(Of DateTimeOffset())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimeOffsets_Online", parameters)
            Return Me.InvokeOperation(Of DateTimeOffset())("ReturnsDateTimeOffsets_Online", GetType(DateTimeOffset()), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimeOffsets_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTimeOffsets_Online(ByVal value() As DateTimeOffset) As InvokeOperation(Of DateTimeOffset())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimeOffsets_Online", parameters)
            Return Me.InvokeOperation(Of DateTimeOffset())("ReturnsDateTimeOffsets_Online", GetType(DateTimeOffset()), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimeOffsets_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsDateTimeOffsets_OnlineAsync(ByVal value() As DateTimeOffset, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of DateTimeOffset()))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimeOffsets_Online", parameters)
            Return Me.InvokeOperationAsync(Of DateTimeOffset())("ReturnsDateTimeOffsets_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimes_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTimes_Online(ByVal value() As DateTime, ByVal callback As Action(Of InvokeOperation(Of DateTime())), ByVal userState As Object) As InvokeOperation(Of DateTime())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimes_Online", parameters)
            Return Me.InvokeOperation(Of DateTime())("ReturnsDateTimes_Online", GetType(DateTime()), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimes_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDateTimes_Online(ByVal value() As DateTime) As InvokeOperation(Of DateTime())
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimes_Online", parameters)
            Return Me.InvokeOperation(Of DateTime())("ReturnsDateTimes_Online", GetType(DateTime()), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDateTimes_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsDateTimes_OnlineAsync(ByVal value() As DateTime, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of DateTime()))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDateTimes_Online", parameters)
            Return Me.InvokeOperationAsync(Of DateTime())("ReturnsDateTimes_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDecimal_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDecimal_Online(ByVal value As Decimal, ByVal callback As Action(Of InvokeOperation(Of Decimal)), ByVal userState As Object) As InvokeOperation(Of Decimal)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDecimal_Online", parameters)
            Return Me.InvokeOperation(Of Decimal)("ReturnsDecimal_Online", GetType(Decimal), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDecimal_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDecimal_Online(ByVal value As Decimal) As InvokeOperation(Of Decimal)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDecimal_Online", parameters)
            Return Me.InvokeOperation(Of Decimal)("ReturnsDecimal_Online", GetType(Decimal), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDecimal_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsDecimal_OnlineAsync(ByVal value As Decimal, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Decimal))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDecimal_Online", parameters)
            Return Me.InvokeOperationAsync(Of Decimal)("ReturnsDecimal_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDictionary' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDictionary(ByVal value As Dictionary(Of String, Integer), ByVal callback As Action(Of InvokeOperation(Of Dictionary(Of String, Integer))), ByVal userState As Object) As InvokeOperation(Of Dictionary(Of String, Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDictionary", parameters)
            Return Me.InvokeOperation(Of Dictionary(Of String, Integer))("ReturnsDictionary", GetType(Dictionary(Of String, Integer)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDictionary' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDictionary(ByVal value As Dictionary(Of String, Integer)) As InvokeOperation(Of Dictionary(Of String, Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDictionary", parameters)
            Return Me.InvokeOperation(Of Dictionary(Of String, Integer))("ReturnsDictionary", GetType(Dictionary(Of String, Integer)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDictionary' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsDictionaryAsync(ByVal value As Dictionary(Of String, Integer), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Dictionary(Of String, Integer)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDictionary", parameters)
            Return Me.InvokeOperationAsync(Of Dictionary(Of String, Integer))("ReturnsDictionary", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDouble_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDouble_Online(ByVal value As Double, ByVal callback As Action(Of InvokeOperation(Of Double)), ByVal userState As Object) As InvokeOperation(Of Double)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDouble_Online", parameters)
            Return Me.InvokeOperation(Of Double)("ReturnsDouble_Online", GetType(Double), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDouble_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsDouble_Online(ByVal value As Double) As InvokeOperation(Of Double)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDouble_Online", parameters)
            Return Me.InvokeOperation(Of Double)("ReturnsDouble_Online", GetType(Double), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsDouble_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsDouble_OnlineAsync(ByVal value As Double, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Double))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsDouble_Online", parameters)
            Return Me.InvokeOperationAsync(Of Double)("ReturnsDouble_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEntity_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="id">The value for the 'id' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsEntity_Online(ByVal value As MixedType, ByVal id As String, ByVal callback As Action(Of InvokeOperation(Of MixedType)), ByVal userState As Object) As InvokeOperation(Of MixedType)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            parameters.Add("id", id)
            Me.ValidateMethod("ReturnsEntity_Online", parameters)
            Return Me.InvokeOperation(Of MixedType)("ReturnsEntity_Online", GetType(MixedType), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEntity_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="id">The value for the 'id' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsEntity_Online(ByVal value As MixedType, ByVal id As String) As InvokeOperation(Of MixedType)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            parameters.Add("id", id)
            Me.ValidateMethod("ReturnsEntity_Online", parameters)
            Return Me.InvokeOperation(Of MixedType)("ReturnsEntity_Online", GetType(MixedType), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEntity_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="id">The value for the 'id' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsEntity_OnlineAsync(ByVal value As MixedType, ByVal id As String, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of MixedType))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            parameters.Add("id", id)
            Me.ValidateMethod("ReturnsEntity_Online", parameters)
            Return Me.InvokeOperationAsync(Of MixedType)("ReturnsEntity_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEntityCollection_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsEntityCollection_Online(ByVal value As Integer, ByVal callback As Action(Of InvokeOperation(Of IEnumerable(Of MixedType))), ByVal userState As Object) As InvokeOperation(Of IEnumerable(Of MixedType))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsEntityCollection_Online", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of MixedType))("ReturnsEntityCollection_Online", GetType(IEnumerable(Of MixedType)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEntityCollection_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsEntityCollection_Online(ByVal value As Integer) As InvokeOperation(Of IEnumerable(Of MixedType))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsEntityCollection_Online", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of MixedType))("ReturnsEntityCollection_Online", GetType(IEnumerable(Of MixedType)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEntityCollection_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsEntityCollection_OnlineAsync(ByVal value As Integer, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of IEnumerable(Of MixedType)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsEntityCollection_Online", parameters)
            Return Me.InvokeOperationAsync(Of IEnumerable(Of MixedType))("ReturnsEntityCollection_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEnum_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsEnum_Online(ByVal value As TestEnum, ByVal callback As Action(Of InvokeOperation(Of TestEnum)), ByVal userState As Object) As InvokeOperation(Of TestEnum)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsEnum_Online", parameters)
            Return Me.InvokeOperation(Of TestEnum)("ReturnsEnum_Online", GetType(TestEnum), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEnum_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsEnum_Online(ByVal value As TestEnum) As InvokeOperation(Of TestEnum)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsEnum_Online", parameters)
            Return Me.InvokeOperation(Of TestEnum)("ReturnsEnum_Online", GetType(TestEnum), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsEnum_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsEnum_OnlineAsync(ByVal value As TestEnum, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of TestEnum))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsEnum_Online", parameters)
            Return Me.InvokeOperationAsync(Of TestEnum)("ReturnsEnum_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsGuid_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsGuid_Online(ByVal value As Guid, ByVal callback As Action(Of InvokeOperation(Of Guid)), ByVal userState As Object) As InvokeOperation(Of Guid)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsGuid_Online", parameters)
            Return Me.InvokeOperation(Of Guid)("ReturnsGuid_Online", GetType(Guid), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsGuid_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsGuid_Online(ByVal value As Guid) As InvokeOperation(Of Guid)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsGuid_Online", parameters)
            Return Me.InvokeOperation(Of Guid)("ReturnsGuid_Online", GetType(Guid), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsGuid_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsGuid_OnlineAsync(ByVal value As Guid, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Guid))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsGuid_Online", parameters)
            Return Me.InvokeOperationAsync(Of Guid)("ReturnsGuid_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsInt16_Online(ByVal value As Short, ByVal callback As Action(Of InvokeOperation(Of Short)), ByVal userState As Object) As InvokeOperation(Of Short)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt16_Online", parameters)
            Return Me.InvokeOperation(Of Short)("ReturnsInt16_Online", GetType(Short), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsInt16_Online(ByVal value As Short) As InvokeOperation(Of Short)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt16_Online", parameters)
            Return Me.InvokeOperation(Of Short)("ReturnsInt16_Online", GetType(Short), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsInt16_OnlineAsync(ByVal value As Short, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Short))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt16_Online", parameters)
            Return Me.InvokeOperationAsync(Of Short)("ReturnsInt16_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsInt32_Online(ByVal value As Integer, ByVal callback As Action(Of InvokeOperation(Of Integer)), ByVal userState As Object) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt32_Online", parameters)
            Return Me.InvokeOperation(Of Integer)("ReturnsInt32_Online", GetType(Integer), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsInt32_Online(ByVal value As Integer) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt32_Online", parameters)
            Return Me.InvokeOperation(Of Integer)("ReturnsInt32_Online", GetType(Integer), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsInt32_OnlineAsync(ByVal value As Integer, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt32_Online", parameters)
            Return Me.InvokeOperationAsync(Of Integer)("ReturnsInt32_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsInt64_Online(ByVal value As Long, ByVal callback As Action(Of InvokeOperation(Of Long)), ByVal userState As Object) As InvokeOperation(Of Long)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt64_Online", parameters)
            Return Me.InvokeOperation(Of Long)("ReturnsInt64_Online", GetType(Long), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsInt64_Online(ByVal value As Long) As InvokeOperation(Of Long)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt64_Online", parameters)
            Return Me.InvokeOperation(Of Long)("ReturnsInt64_Online", GetType(Long), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsInt64_OnlineAsync(ByVal value As Long, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Long))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsInt64_Online", parameters)
            Return Me.InvokeOperationAsync(Of Long)("ReturnsInt64_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableBoolean_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableBoolean_Online(ByVal value As Nullable(Of Boolean), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Boolean))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Boolean))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableBoolean_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Boolean))("ReturnsNullableBoolean_Online", GetType(Nullable(Of Boolean)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableBoolean_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableBoolean_Online(ByVal value As Nullable(Of Boolean)) As InvokeOperation(Of Nullable(Of Boolean))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableBoolean_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Boolean))("ReturnsNullableBoolean_Online", GetType(Nullable(Of Boolean)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableBoolean_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableBoolean_OnlineAsync(ByVal value As Nullable(Of Boolean), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Boolean)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableBoolean_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Boolean))("ReturnsNullableBoolean_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableByte_Online(ByVal value As Nullable(Of Byte), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Byte))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Byte))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableByte_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Byte))("ReturnsNullableByte_Online", GetType(Nullable(Of Byte)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableByte_Online(ByVal value As Nullable(Of Byte)) As InvokeOperation(Of Nullable(Of Byte))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableByte_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Byte))("ReturnsNullableByte_Online", GetType(Nullable(Of Byte)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableByte_OnlineAsync(ByVal value As Nullable(Of Byte), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Byte)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableByte_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Byte))("ReturnsNullableByte_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableChar_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableChar_Online(ByVal value As Nullable(Of Char), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Char))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Char))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableChar_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Char))("ReturnsNullableChar_Online", GetType(Nullable(Of Char)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableChar_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableChar_Online(ByVal value As Nullable(Of Char)) As InvokeOperation(Of Nullable(Of Char))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableChar_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Char))("ReturnsNullableChar_Online", GetType(Nullable(Of Char)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableChar_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableChar_OnlineAsync(ByVal value As Nullable(Of Char), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Char)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableChar_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Char))("ReturnsNullableChar_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDateTime_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDateTime_Online(ByVal value As Nullable(Of DateTime), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of DateTime))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of DateTime))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDateTime_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of DateTime))("ReturnsNullableDateTime_Online", GetType(Nullable(Of DateTime)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDateTime_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDateTime_Online(ByVal value As Nullable(Of DateTime)) As InvokeOperation(Of Nullable(Of DateTime))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDateTime_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of DateTime))("ReturnsNullableDateTime_Online", GetType(Nullable(Of DateTime)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDateTime_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableDateTime_OnlineAsync(ByVal value As Nullable(Of DateTime), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of DateTime)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDateTime_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of DateTime))("ReturnsNullableDateTime_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDateTimeOffset_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDateTimeOffset_Online(ByVal value As Nullable(Of DateTimeOffset), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of DateTimeOffset))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of DateTimeOffset))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDateTimeOffset_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of DateTimeOffset))("ReturnsNullableDateTimeOffset_Online", GetType(Nullable(Of DateTimeOffset)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDateTimeOffset_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDateTimeOffset_Online(ByVal value As Nullable(Of DateTimeOffset)) As InvokeOperation(Of Nullable(Of DateTimeOffset))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDateTimeOffset_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of DateTimeOffset))("ReturnsNullableDateTimeOffset_Online", GetType(Nullable(Of DateTimeOffset)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDateTimeOffset_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableDateTimeOffset_OnlineAsync(ByVal value As Nullable(Of DateTimeOffset), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of DateTimeOffset)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDateTimeOffset_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of DateTimeOffset))("ReturnsNullableDateTimeOffset_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDecimal_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDecimal_Online(ByVal value As Nullable(Of Decimal), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Decimal))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Decimal))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDecimal_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Decimal))("ReturnsNullableDecimal_Online", GetType(Nullable(Of Decimal)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDecimal_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDecimal_Online(ByVal value As Nullable(Of Decimal)) As InvokeOperation(Of Nullable(Of Decimal))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDecimal_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Decimal))("ReturnsNullableDecimal_Online", GetType(Nullable(Of Decimal)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDecimal_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableDecimal_OnlineAsync(ByVal value As Nullable(Of Decimal), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Decimal)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDecimal_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Decimal))("ReturnsNullableDecimal_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDouble_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDouble_Online(ByVal value As Nullable(Of Double), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Double))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Double))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDouble_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Double))("ReturnsNullableDouble_Online", GetType(Nullable(Of Double)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDouble_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableDouble_Online(ByVal value As Nullable(Of Double)) As InvokeOperation(Of Nullable(Of Double))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDouble_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Double))("ReturnsNullableDouble_Online", GetType(Nullable(Of Double)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableDouble_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableDouble_OnlineAsync(ByVal value As Nullable(Of Double), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Double)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableDouble_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Double))("ReturnsNullableDouble_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableEnum_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableEnum_Online(ByVal value As Nullable(Of TestEnum), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of TestEnum))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of TestEnum))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableEnum_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of TestEnum))("ReturnsNullableEnum_Online", GetType(Nullable(Of TestEnum)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableEnum_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableEnum_Online(ByVal value As Nullable(Of TestEnum)) As InvokeOperation(Of Nullable(Of TestEnum))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableEnum_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of TestEnum))("ReturnsNullableEnum_Online", GetType(Nullable(Of TestEnum)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableEnum_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableEnum_OnlineAsync(ByVal value As Nullable(Of TestEnum), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of TestEnum)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableEnum_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of TestEnum))("ReturnsNullableEnum_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableGuid_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableGuid_Online(ByVal value As Nullable(Of Guid), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Guid))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Guid))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableGuid_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Guid))("ReturnsNullableGuid_Online", GetType(Nullable(Of Guid)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableGuid_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableGuid_Online(ByVal value As Nullable(Of Guid)) As InvokeOperation(Of Nullable(Of Guid))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableGuid_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Guid))("ReturnsNullableGuid_Online", GetType(Nullable(Of Guid)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableGuid_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableGuid_OnlineAsync(ByVal value As Nullable(Of Guid), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Guid)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableGuid_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Guid))("ReturnsNullableGuid_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableInt16_Online(ByVal value As Nullable(Of Short), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Short))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Short))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt16_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Short))("ReturnsNullableInt16_Online", GetType(Nullable(Of Short)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableInt16_Online(ByVal value As Nullable(Of Short)) As InvokeOperation(Of Nullable(Of Short))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt16_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Short))("ReturnsNullableInt16_Online", GetType(Nullable(Of Short)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableInt16_OnlineAsync(ByVal value As Nullable(Of Short), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Short)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt16_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Short))("ReturnsNullableInt16_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableInt32_Online(ByVal value As Nullable(Of Integer), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Integer))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt32_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Integer))("ReturnsNullableInt32_Online", GetType(Nullable(Of Integer)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableInt32_Online(ByVal value As Nullable(Of Integer)) As InvokeOperation(Of Nullable(Of Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt32_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Integer))("ReturnsNullableInt32_Online", GetType(Nullable(Of Integer)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableInt32_OnlineAsync(ByVal value As Nullable(Of Integer), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Integer)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt32_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Integer))("ReturnsNullableInt32_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableInt64_Online(ByVal value As Nullable(Of Long), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Long))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Long))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt64_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Long))("ReturnsNullableInt64_Online", GetType(Nullable(Of Long)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableInt64_Online(ByVal value As Nullable(Of Long)) As InvokeOperation(Of Nullable(Of Long))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt64_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Long))("ReturnsNullableInt64_Online", GetType(Nullable(Of Long)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableInt64_OnlineAsync(ByVal value As Nullable(Of Long), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Long)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableInt64_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Long))("ReturnsNullableInt64_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableSByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableSByte_Online(ByVal value As Nullable(Of SByte), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of SByte))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of SByte))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableSByte_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of SByte))("ReturnsNullableSByte_Online", GetType(Nullable(Of SByte)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableSByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableSByte_Online(ByVal value As Nullable(Of SByte)) As InvokeOperation(Of Nullable(Of SByte))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableSByte_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of SByte))("ReturnsNullableSByte_Online", GetType(Nullable(Of SByte)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableSByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableSByte_OnlineAsync(ByVal value As Nullable(Of SByte), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of SByte)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableSByte_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of SByte))("ReturnsNullableSByte_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableSingle_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableSingle_Online(ByVal value As Nullable(Of Single), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of Single))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of Single))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableSingle_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Single))("ReturnsNullableSingle_Online", GetType(Nullable(Of Single)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableSingle_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableSingle_Online(ByVal value As Nullable(Of Single)) As InvokeOperation(Of Nullable(Of Single))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableSingle_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of Single))("ReturnsNullableSingle_Online", GetType(Nullable(Of Single)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableSingle_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableSingle_OnlineAsync(ByVal value As Nullable(Of Single), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of Single)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableSingle_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of Single))("ReturnsNullableSingle_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableTimeSpan_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableTimeSpan_Online(ByVal value As Nullable(Of TimeSpan), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of TimeSpan))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of TimeSpan))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableTimeSpan_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of TimeSpan))("ReturnsNullableTimeSpan_Online", GetType(Nullable(Of TimeSpan)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableTimeSpan_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableTimeSpan_Online(ByVal value As Nullable(Of TimeSpan)) As InvokeOperation(Of Nullable(Of TimeSpan))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableTimeSpan_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of TimeSpan))("ReturnsNullableTimeSpan_Online", GetType(Nullable(Of TimeSpan)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableTimeSpan_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableTimeSpan_OnlineAsync(ByVal value As Nullable(Of TimeSpan), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of TimeSpan)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableTimeSpan_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of TimeSpan))("ReturnsNullableTimeSpan_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableUInt16_Online(ByVal value As Nullable(Of UShort), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of UShort))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of UShort))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt16_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of UShort))("ReturnsNullableUInt16_Online", GetType(Nullable(Of UShort)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableUInt16_Online(ByVal value As Nullable(Of UShort)) As InvokeOperation(Of Nullable(Of UShort))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt16_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of UShort))("ReturnsNullableUInt16_Online", GetType(Nullable(Of UShort)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableUInt16_OnlineAsync(ByVal value As Nullable(Of UShort), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of UShort)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt16_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of UShort))("ReturnsNullableUInt16_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableUInt32_Online(ByVal value As Nullable(Of UInteger), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of UInteger))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of UInteger))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt32_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of UInteger))("ReturnsNullableUInt32_Online", GetType(Nullable(Of UInteger)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableUInt32_Online(ByVal value As Nullable(Of UInteger)) As InvokeOperation(Of Nullable(Of UInteger))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt32_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of UInteger))("ReturnsNullableUInt32_Online", GetType(Nullable(Of UInteger)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableUInt32_OnlineAsync(ByVal value As Nullable(Of UInteger), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of UInteger)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt32_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of UInteger))("ReturnsNullableUInt32_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableUInt64_Online(ByVal value As Nullable(Of ULong), ByVal callback As Action(Of InvokeOperation(Of Nullable(Of ULong))), ByVal userState As Object) As InvokeOperation(Of Nullable(Of ULong))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt64_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of ULong))("ReturnsNullableUInt64_Online", GetType(Nullable(Of ULong)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsNullableUInt64_Online(ByVal value As Nullable(Of ULong)) As InvokeOperation(Of Nullable(Of ULong))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt64_Online", parameters)
            Return Me.InvokeOperation(Of Nullable(Of ULong))("ReturnsNullableUInt64_Online", GetType(Nullable(Of ULong)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsNullableUInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsNullableUInt64_OnlineAsync(ByVal value As Nullable(Of ULong), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Nullable(Of ULong)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsNullableUInt64_Online", parameters)
            Return Me.InvokeOperationAsync(Of Nullable(Of ULong))("ReturnsNullableUInt64_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsSByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsSByte_Online(ByVal value As SByte, ByVal callback As Action(Of InvokeOperation(Of SByte)), ByVal userState As Object) As InvokeOperation(Of SByte)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsSByte_Online", parameters)
            Return Me.InvokeOperation(Of SByte)("ReturnsSByte_Online", GetType(SByte), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsSByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsSByte_Online(ByVal value As SByte) As InvokeOperation(Of SByte)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsSByte_Online", parameters)
            Return Me.InvokeOperation(Of SByte)("ReturnsSByte_Online", GetType(SByte), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsSByte_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsSByte_OnlineAsync(ByVal value As SByte, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of SByte))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsSByte_Online", parameters)
            Return Me.InvokeOperationAsync(Of SByte)("ReturnsSByte_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsSingle_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsSingle_Online(ByVal value As Single, ByVal callback As Action(Of InvokeOperation(Of Single)), ByVal userState As Object) As InvokeOperation(Of Single)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsSingle_Online", parameters)
            Return Me.InvokeOperation(Of Single)("ReturnsSingle_Online", GetType(Single), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsSingle_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsSingle_Online(ByVal value As Single) As InvokeOperation(Of Single)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsSingle_Online", parameters)
            Return Me.InvokeOperation(Of Single)("ReturnsSingle_Online", GetType(Single), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsSingle_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsSingle_OnlineAsync(ByVal value As Single, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Single))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsSingle_Online", parameters)
            Return Me.InvokeOperationAsync(Of Single)("ReturnsSingle_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsString_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsString_Online(ByVal value As String, ByVal callback As Action(Of InvokeOperation(Of String)), ByVal userState As Object) As InvokeOperation(Of String)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsString_Online", parameters)
            Return Me.InvokeOperation(Of String)("ReturnsString_Online", GetType(String), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsString_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsString_Online(ByVal value As String) As InvokeOperation(Of String)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsString_Online", parameters)
            Return Me.InvokeOperation(Of String)("ReturnsString_Online", GetType(String), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsString_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsString_OnlineAsync(ByVal value As String, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of String))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsString_Online", parameters)
            Return Me.InvokeOperationAsync(Of String)("ReturnsString_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsStrings_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsStrings_Online(ByVal value As IEnumerable(Of String), ByVal callback As Action(Of InvokeOperation(Of IEnumerable(Of String))), ByVal userState As Object) As InvokeOperation(Of IEnumerable(Of String))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsStrings_Online", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of String))("ReturnsStrings_Online", GetType(IEnumerable(Of String)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsStrings_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsStrings_Online(ByVal value As IEnumerable(Of String)) As InvokeOperation(Of IEnumerable(Of String))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsStrings_Online", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of String))("ReturnsStrings_Online", GetType(IEnumerable(Of String)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsStrings_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsStrings_OnlineAsync(ByVal value As IEnumerable(Of String), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of IEnumerable(Of String)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsStrings_Online", parameters)
            Return Me.InvokeOperationAsync(Of IEnumerable(Of String))("ReturnsStrings_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsTimeSpan_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsTimeSpan_Online(ByVal value As TimeSpan, ByVal callback As Action(Of InvokeOperation(Of TimeSpan)), ByVal userState As Object) As InvokeOperation(Of TimeSpan)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsTimeSpan_Online", parameters)
            Return Me.InvokeOperation(Of TimeSpan)("ReturnsTimeSpan_Online", GetType(TimeSpan), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsTimeSpan_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsTimeSpan_Online(ByVal value As TimeSpan) As InvokeOperation(Of TimeSpan)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsTimeSpan_Online", parameters)
            Return Me.InvokeOperation(Of TimeSpan)("ReturnsTimeSpan_Online", GetType(TimeSpan), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsTimeSpan_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsTimeSpan_OnlineAsync(ByVal value As TimeSpan, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of TimeSpan))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsTimeSpan_Online", parameters)
            Return Me.InvokeOperationAsync(Of TimeSpan)("ReturnsTimeSpan_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsTimeSpans_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsTimeSpans_Online(ByVal value As IEnumerable(Of TimeSpan), ByVal callback As Action(Of InvokeOperation(Of IEnumerable(Of TimeSpan))), ByVal userState As Object) As InvokeOperation(Of IEnumerable(Of TimeSpan))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsTimeSpans_Online", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of TimeSpan))("ReturnsTimeSpans_Online", GetType(IEnumerable(Of TimeSpan)), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsTimeSpans_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsTimeSpans_Online(ByVal value As IEnumerable(Of TimeSpan)) As InvokeOperation(Of IEnumerable(Of TimeSpan))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsTimeSpans_Online", parameters)
            Return Me.InvokeOperation(Of IEnumerable(Of TimeSpan))("ReturnsTimeSpans_Online", GetType(IEnumerable(Of TimeSpan)), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsTimeSpans_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsTimeSpans_OnlineAsync(ByVal value As IEnumerable(Of TimeSpan), Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of IEnumerable(Of TimeSpan)))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsTimeSpans_Online", parameters)
            Return Me.InvokeOperationAsync(Of IEnumerable(Of TimeSpan))("ReturnsTimeSpans_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUInt16_Online(ByVal value As UShort, ByVal callback As Action(Of InvokeOperation(Of UShort)), ByVal userState As Object) As InvokeOperation(Of UShort)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt16_Online", parameters)
            Return Me.InvokeOperation(Of UShort)("ReturnsUInt16_Online", GetType(UShort), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUInt16_Online(ByVal value As UShort) As InvokeOperation(Of UShort)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt16_Online", parameters)
            Return Me.InvokeOperation(Of UShort)("ReturnsUInt16_Online", GetType(UShort), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt16_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsUInt16_OnlineAsync(ByVal value As UShort, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of UShort))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt16_Online", parameters)
            Return Me.InvokeOperationAsync(Of UShort)("ReturnsUInt16_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUInt32_Online(ByVal value As UInteger, ByVal callback As Action(Of InvokeOperation(Of UInteger)), ByVal userState As Object) As InvokeOperation(Of UInteger)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt32_Online", parameters)
            Return Me.InvokeOperation(Of UInteger)("ReturnsUInt32_Online", GetType(UInteger), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUInt32_Online(ByVal value As UInteger) As InvokeOperation(Of UInteger)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt32_Online", parameters)
            Return Me.InvokeOperation(Of UInteger)("ReturnsUInt32_Online", GetType(UInteger), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt32_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsUInt32_OnlineAsync(ByVal value As UInteger, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of UInteger))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt32_Online", parameters)
            Return Me.InvokeOperationAsync(Of UInteger)("ReturnsUInt32_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUInt64_Online(ByVal value As ULong, ByVal callback As Action(Of InvokeOperation(Of ULong)), ByVal userState As Object) As InvokeOperation(Of ULong)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt64_Online", parameters)
            Return Me.InvokeOperation(Of ULong)("ReturnsUInt64_Online", GetType(ULong), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUInt64_Online(ByVal value As ULong) As InvokeOperation(Of ULong)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt64_Online", parameters)
            Return Me.InvokeOperation(Of ULong)("ReturnsUInt64_Online", GetType(ULong), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUInt64_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsUInt64_OnlineAsync(ByVal value As ULong, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of ULong))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUInt64_Online", parameters)
            Return Me.InvokeOperationAsync(Of ULong)("ReturnsUInt64_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUri_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUri_Online(ByVal value As Uri, ByVal callback As Action(Of InvokeOperation(Of Uri)), ByVal userState As Object) As InvokeOperation(Of Uri)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUri_Online", parameters)
            Return Me.InvokeOperation(Of Uri)("ReturnsUri_Online", GetType(Uri), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUri_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsUri_Online(ByVal value As Uri) As InvokeOperation(Of Uri)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUri_Online", parameters)
            Return Me.InvokeOperation(Of Uri)("ReturnsUri_Online", GetType(Uri), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsUri_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsUri_OnlineAsync(ByVal value As Uri, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Uri))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsUri_Online", parameters)
            Return Me.InvokeOperationAsync(Of Uri)("ReturnsUri_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsXElement' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsXElement(ByVal value As XElement, ByVal callback As Action(Of InvokeOperation(Of XElement)), ByVal userState As Object) As InvokeOperation(Of XElement)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsXElement", parameters)
            Return Me.InvokeOperation(Of XElement)("ReturnsXElement", GetType(XElement), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsXElement' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ReturnsXElement(ByVal value As XElement) As InvokeOperation(Of XElement)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsXElement", parameters)
            Return Me.InvokeOperation(Of XElement)("ReturnsXElement", GetType(XElement), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ReturnsXElement' method of the DomainService.
        ''' </summary>
        ''' <param name="value">The value for the 'value' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ReturnsXElementAsync(ByVal value As XElement, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of XElement))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("value", value)
            Me.ValidateMethod("ReturnsXElement", parameters)
            Return Me.InvokeOperationAsync(Of XElement)("ReturnsXElement", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'RoundtripDouble' method of the DomainService.
        ''' </summary>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function RoundtripDouble(ByVal d As Double, ByVal callback As Action(Of InvokeOperation(Of Double)), ByVal userState As Object) As InvokeOperation(Of Double)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("d", d)
            Me.ValidateMethod("RoundtripDouble", parameters)
            Return Me.InvokeOperation(Of Double)("RoundtripDouble", GetType(Double), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'RoundtripDouble' method of the DomainService.
        ''' </summary>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function RoundtripDouble(ByVal d As Double) As InvokeOperation(Of Double)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("d", d)
            Me.ValidateMethod("RoundtripDouble", parameters)
            Return Me.InvokeOperation(Of Double)("RoundtripDouble", GetType(Double), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'RoundtripDouble' method of the DomainService.
        ''' </summary>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function RoundtripDoubleAsync(ByVal d As Double, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Double))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("d", d)
            Me.ValidateMethod("RoundtripDouble", parameters)
            Return Me.InvokeOperationAsync(Of Double)("RoundtripDouble", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestNullable_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="dec">The value for the 'dec' parameter of this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
        ''' <param name="g">The value for the 'g' parameter of this action.</param>
        ''' <param name="en">The value for the 'en' parameter of this action.</param>
        ''' <param name="nullableTimeSpans">The value for the 'nullableTimeSpans' parameter of this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function TestNullable_Online( _
                    ByVal entity As MixedType,  _
                    ByVal b1 As Nullable(Of Boolean),  _
                    ByVal b2 As Nullable(Of Byte),  _
                    ByVal sb As Nullable(Of SByte),  _
                    ByVal int16 As Nullable(Of Short),  _
                    ByVal uint16 As Nullable(Of UShort),  _
                    ByVal int32 As Nullable(Of Integer),  _
                    ByVal uint32 As Nullable(Of UInteger),  _
                    ByVal int64 As Nullable(Of Long),  _
                    ByVal uint64 As Nullable(Of ULong),  _
                    ByVal ch As Nullable(Of Char),  _
                    ByVal d As Nullable(Of Double),  _
                    ByVal s As Nullable(Of Single),  _
                    ByVal dec As Nullable(Of Decimal),  _
                    ByVal dt As Nullable(Of DateTime),  _
                    ByVal ts As Nullable(Of TimeSpan),  _
                    ByVal g As Nullable(Of Guid),  _
                    ByVal en As Nullable(Of TestEnum),  _
                    ByVal nullableTimeSpans As IEnumerable(Of Nullable(Of TimeSpan)),  _
                    ByVal dto As Nullable(Of DateTimeOffset),  _
                    ByVal callback As Action(Of InvokeOperation(Of Boolean)),  _
                    ByVal userState As Object) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            parameters.Add("dec", dec)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("g", g)
            parameters.Add("en", en)
            parameters.Add("nullableTimeSpans", nullableTimeSpans)
            parameters.Add("dto", dto)
            Me.ValidateMethod("TestNullable_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("TestNullable_Online", GetType(Boolean), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestNullable_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="dec">The value for the 'dec' parameter of this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
        ''' <param name="g">The value for the 'g' parameter of this action.</param>
        ''' <param name="en">The value for the 'en' parameter of this action.</param>
        ''' <param name="nullableTimeSpans">The value for the 'nullableTimeSpans' parameter of this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function TestNullable_Online( _
                    ByVal entity As MixedType,  _
                    ByVal b1 As Nullable(Of Boolean),  _
                    ByVal b2 As Nullable(Of Byte),  _
                    ByVal sb As Nullable(Of SByte),  _
                    ByVal int16 As Nullable(Of Short),  _
                    ByVal uint16 As Nullable(Of UShort),  _
                    ByVal int32 As Nullable(Of Integer),  _
                    ByVal uint32 As Nullable(Of UInteger),  _
                    ByVal int64 As Nullable(Of Long),  _
                    ByVal uint64 As Nullable(Of ULong),  _
                    ByVal ch As Nullable(Of Char),  _
                    ByVal d As Nullable(Of Double),  _
                    ByVal s As Nullable(Of Single),  _
                    ByVal dec As Nullable(Of Decimal),  _
                    ByVal dt As Nullable(Of DateTime),  _
                    ByVal ts As Nullable(Of TimeSpan),  _
                    ByVal g As Nullable(Of Guid),  _
                    ByVal en As Nullable(Of TestEnum),  _
                    ByVal nullableTimeSpans As IEnumerable(Of Nullable(Of TimeSpan)),  _
                    ByVal dto As Nullable(Of DateTimeOffset)) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            parameters.Add("dec", dec)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("g", g)
            parameters.Add("en", en)
            parameters.Add("nullableTimeSpans", nullableTimeSpans)
            parameters.Add("dto", dto)
            Me.ValidateMethod("TestNullable_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("TestNullable_Online", GetType(Boolean), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestNullable_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="dec">The value for the 'dec' parameter of this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
        ''' <param name="g">The value for the 'g' parameter of this action.</param>
        ''' <param name="en">The value for the 'en' parameter of this action.</param>
        ''' <param name="nullableTimeSpans">The value for the 'nullableTimeSpans' parameter of this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function TestNullable_OnlineAsync( _
                    ByVal entity As MixedType,  _
                    ByVal b1 As Nullable(Of Boolean),  _
                    ByVal b2 As Nullable(Of Byte),  _
                    ByVal sb As Nullable(Of SByte),  _
                    ByVal int16 As Nullable(Of Short),  _
                    ByVal uint16 As Nullable(Of UShort),  _
                    ByVal int32 As Nullable(Of Integer),  _
                    ByVal uint32 As Nullable(Of UInteger),  _
                    ByVal int64 As Nullable(Of Long),  _
                    ByVal uint64 As Nullable(Of ULong),  _
                    ByVal ch As Nullable(Of Char),  _
                    ByVal d As Nullable(Of Double),  _
                    ByVal s As Nullable(Of Single),  _
                    ByVal dec As Nullable(Of Decimal),  _
                    ByVal dt As Nullable(Of DateTime),  _
                    ByVal ts As Nullable(Of TimeSpan),  _
                    ByVal g As Nullable(Of Guid),  _
                    ByVal en As Nullable(Of TestEnum),  _
                    ByVal nullableTimeSpans As IEnumerable(Of Nullable(Of TimeSpan)),  _
                    ByVal dto As Nullable(Of DateTimeOffset),  _
                    Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Boolean))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            parameters.Add("dec", dec)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("g", g)
            parameters.Add("en", en)
            parameters.Add("nullableTimeSpans", nullableTimeSpans)
            parameters.Add("dto", dto)
            Me.ValidateMethod("TestNullable_Online", parameters)
            Return Me.InvokeOperationAsync(Of Boolean)("TestNullable_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestPredefined_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
        ''' <param name="strings">The value for the 'strings' parameter of this action.</param>
        ''' <param name="uri">The value for the 'uri' parameter of this action.</param>
        ''' <param name="g">The value for the 'g' parameter of this action.</param>
        ''' <param name="b">The value for the 'b' parameter of this action.</param>
        ''' <param name="x">The value for the 'x' parameter of this action.</param>
        ''' <param name="bArray">The value for the 'bArray' parameter of this action.</param>
        ''' <param name="en">The value for the 'en' parameter of this action.</param>
        ''' <param name="guids">The value for the 'guids' parameter of this action.</param>
        ''' <param name="ulongs">The value for the 'ulongs' parameter of this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function TestPredefined_Online( _
                    ByVal entity As MixedType,  _
                    ByVal s As String,  _
                    ByVal d As Decimal,  _
                    ByVal dt As DateTime,  _
                    ByVal ts As TimeSpan,  _
                    ByVal strings As IEnumerable(Of String),  _
                    ByVal uri As Uri,  _
                    ByVal g As Guid,  _
                    ByVal b() As Byte,  _
                    ByVal x As XElement,  _
                    ByVal bArray() As Byte,  _
                    ByVal en As TestEnum,  _
                    ByVal guids() As Guid,  _
                    ByVal ulongs() As ULong,  _
                    ByVal dto As DateTimeOffset,  _
                    ByVal callback As Action(Of InvokeOperation(Of Boolean)),  _
                    ByVal userState As Object) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("s", s)
            parameters.Add("d", d)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("strings", strings)
            parameters.Add("uri", uri)
            parameters.Add("g", g)
            parameters.Add("b", b)
            parameters.Add("x", x)
            parameters.Add("bArray", bArray)
            parameters.Add("en", en)
            parameters.Add("guids", guids)
            parameters.Add("ulongs", ulongs)
            parameters.Add("dto", dto)
            Me.ValidateMethod("TestPredefined_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("TestPredefined_Online", GetType(Boolean), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestPredefined_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
        ''' <param name="strings">The value for the 'strings' parameter of this action.</param>
        ''' <param name="uri">The value for the 'uri' parameter of this action.</param>
        ''' <param name="g">The value for the 'g' parameter of this action.</param>
        ''' <param name="b">The value for the 'b' parameter of this action.</param>
        ''' <param name="x">The value for the 'x' parameter of this action.</param>
        ''' <param name="bArray">The value for the 'bArray' parameter of this action.</param>
        ''' <param name="en">The value for the 'en' parameter of this action.</param>
        ''' <param name="guids">The value for the 'guids' parameter of this action.</param>
        ''' <param name="ulongs">The value for the 'ulongs' parameter of this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function TestPredefined_Online(ByVal entity As MixedType, ByVal s As String, ByVal d As Decimal, ByVal dt As DateTime, ByVal ts As TimeSpan, ByVal strings As IEnumerable(Of String), ByVal uri As Uri, ByVal g As Guid, ByVal b() As Byte, ByVal x As XElement, ByVal bArray() As Byte, ByVal en As TestEnum, ByVal guids() As Guid, ByVal ulongs() As ULong, ByVal dto As DateTimeOffset) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("s", s)
            parameters.Add("d", d)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("strings", strings)
            parameters.Add("uri", uri)
            parameters.Add("g", g)
            parameters.Add("b", b)
            parameters.Add("x", x)
            parameters.Add("bArray", bArray)
            parameters.Add("en", en)
            parameters.Add("guids", guids)
            parameters.Add("ulongs", ulongs)
            parameters.Add("dto", dto)
            Me.ValidateMethod("TestPredefined_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("TestPredefined_Online", GetType(Boolean), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestPredefined_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
        ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
        ''' <param name="strings">The value for the 'strings' parameter of this action.</param>
        ''' <param name="uri">The value for the 'uri' parameter of this action.</param>
        ''' <param name="g">The value for the 'g' parameter of this action.</param>
        ''' <param name="b">The value for the 'b' parameter of this action.</param>
        ''' <param name="x">The value for the 'x' parameter of this action.</param>
        ''' <param name="bArray">The value for the 'bArray' parameter of this action.</param>
        ''' <param name="en">The value for the 'en' parameter of this action.</param>
        ''' <param name="guids">The value for the 'guids' parameter of this action.</param>
        ''' <param name="ulongs">The value for the 'ulongs' parameter of this action.</param>
        ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function TestPredefined_OnlineAsync( _
                    ByVal entity As MixedType,  _
                    ByVal s As String,  _
                    ByVal d As Decimal,  _
                    ByVal dt As DateTime,  _
                    ByVal ts As TimeSpan,  _
                    ByVal strings As IEnumerable(Of String),  _
                    ByVal uri As Uri,  _
                    ByVal g As Guid,  _
                    ByVal b() As Byte,  _
                    ByVal x As XElement,  _
                    ByVal bArray() As Byte,  _
                    ByVal en As TestEnum,  _
                    ByVal guids() As Guid,  _
                    ByVal ulongs() As ULong,  _
                    ByVal dto As DateTimeOffset,  _
                    Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Boolean))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("s", s)
            parameters.Add("d", d)
            parameters.Add("dt", dt)
            parameters.Add("ts", ts)
            parameters.Add("strings", strings)
            parameters.Add("uri", uri)
            parameters.Add("g", g)
            parameters.Add("b", b)
            parameters.Add("x", x)
            parameters.Add("bArray", bArray)
            parameters.Add("en", en)
            parameters.Add("guids", guids)
            parameters.Add("ulongs", ulongs)
            parameters.Add("dto", dto)
            Me.ValidateMethod("TestPredefined_Online", parameters)
            Return Me.InvokeOperationAsync(Of Boolean)("TestPredefined_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestPrimitive_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function TestPrimitive_Online(ByVal entity As MixedType, ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single, ByVal callback As Action(Of InvokeOperation(Of Boolean)), ByVal userState As Object) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            Me.ValidateMethod("TestPrimitive_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("TestPrimitive_Online", GetType(Boolean), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestPrimitive_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function TestPrimitive_Online(ByVal entity As MixedType, ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single) As InvokeOperation(Of Boolean)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            Me.ValidateMethod("TestPrimitive_Online", parameters)
            Return Me.InvokeOperation(Of Boolean)("TestPrimitive_Online", GetType(Boolean), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'TestPrimitive_Online' method of the DomainService.
        ''' </summary>
        ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
        ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
        ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
        ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
        ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
        ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
        ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
        ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
        ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
        ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
        ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
        ''' <param name="d">The value for the 'd' parameter of this action.</param>
        ''' <param name="s">The value for the 's' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function TestPrimitive_OnlineAsync(ByVal entity As MixedType, ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Boolean))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("entity", entity)
            parameters.Add("b1", b1)
            parameters.Add("b2", b2)
            parameters.Add("sb", sb)
            parameters.Add("int16", int16)
            parameters.Add("uint16", uint16)
            parameters.Add("int32", int32)
            parameters.Add("uint32", uint32)
            parameters.Add("int64", int64)
            parameters.Add("uint64", uint64)
            parameters.Add("ch", ch)
            parameters.Add("d", d)
            parameters.Add("s", s)
            Me.ValidateMethod("TestPrimitive_Online", parameters)
            Return Me.InvokeOperationAsync(Of Boolean)("TestPrimitive_Online", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ThrowOnlineException' method of the DomainService.
        ''' </summary>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ThrowOnlineException(ByVal callback As Action(Of InvokeOperation), ByVal userState As Object) As InvokeOperation
            Me.ValidateMethod("ThrowOnlineException", Nothing)
            Return Me.InvokeOperation("ThrowOnlineException", GetType(System.Void), Nothing, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ThrowOnlineException' method of the DomainService.
        ''' </summary>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ThrowOnlineException() As InvokeOperation
            Me.ValidateMethod("ThrowOnlineException", Nothing)
            Return Me.InvokeOperation("ThrowOnlineException", GetType(System.Void), Nothing, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ThrowOnlineException' method of the DomainService.
        ''' </summary>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ThrowOnlineExceptionAsync(Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult)
            Me.ValidateMethod("ThrowOnlineException", Nothing)
            Return Me.InvokeOperationAsync("ThrowOnlineException", Nothing, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ThrowValidationException' method of the DomainService.
        ''' </summary>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ThrowValidationException(ByVal callback As Action(Of InvokeOperation), ByVal userState As Object) As InvokeOperation
            Me.ValidateMethod("ThrowValidationException", Nothing)
            Return Me.InvokeOperation("ThrowValidationException", GetType(System.Void), Nothing, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ThrowValidationException' method of the DomainService.
        ''' </summary>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function ThrowValidationException() As InvokeOperation
            Me.ValidateMethod("ThrowValidationException", Nothing)
            Return Me.InvokeOperation("ThrowValidationException", GetType(System.Void), Nothing, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'ThrowValidationException' method of the DomainService.
        ''' </summary>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function ThrowValidationExceptionAsync(Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult)
            Me.ValidateMethod("ThrowValidationException", Nothing)
            Return Me.InvokeOperationAsync("ThrowValidationException", Nothing, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'VariousParameterTypes' method of the DomainService.
        ''' </summary>
        ''' <param name="str">The value for the 'str' parameter of this action.</param>
        ''' <param name="integer">The value for the 'integer' parameter of this action.</param>
        ''' <param name="boolean">The value for the 'boolean' parameter of this action.</param>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function VariousParameterTypes(<Required()> ByVal str As String, ByVal [integer] As Integer, ByVal [boolean] As Boolean, ByVal callback As Action(Of InvokeOperation(Of Integer)), ByVal userState As Object) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("str", str)
            parameters.Add("integer", [integer])
            parameters.Add("boolean", [boolean])
            Me.ValidateMethod("VariousParameterTypes", parameters)
            Return Me.InvokeOperation(Of Integer)("VariousParameterTypes", GetType(Integer), parameters, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'VariousParameterTypes' method of the DomainService.
        ''' </summary>
        ''' <param name="str">The value for the 'str' parameter of this action.</param>
        ''' <param name="integer">The value for the 'integer' parameter of this action.</param>
        ''' <param name="boolean">The value for the 'boolean' parameter of this action.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function VariousParameterTypes(<Required()> ByVal str As String, ByVal [integer] As Integer, ByVal [boolean] As Boolean) As InvokeOperation(Of Integer)
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("str", str)
            parameters.Add("integer", [integer])
            parameters.Add("boolean", [boolean])
            Me.ValidateMethod("VariousParameterTypes", parameters)
            Return Me.InvokeOperation(Of Integer)("VariousParameterTypes", GetType(Integer), parameters, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'VariousParameterTypes' method of the DomainService.
        ''' </summary>
        ''' <param name="str">The value for the 'str' parameter of this action.</param>
        ''' <param name="integer">The value for the 'integer' parameter of this action.</param>
        ''' <param name="boolean">The value for the 'boolean' parameter of this action.</param>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function VariousParameterTypesAsync(<Required()> ByVal str As String, ByVal [integer] As Integer, ByVal [boolean] As Boolean, Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult(Of Integer))
            Dim parameters As Dictionary(Of String, Object) = New Dictionary(Of String, Object)()
            parameters.Add("str", str)
            parameters.Add("integer", [integer])
            parameters.Add("boolean", [boolean])
            Me.ValidateMethod("VariousParameterTypes", parameters)
            Return Me.InvokeOperationAsync(Of Integer)("VariousParameterTypes", parameters, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'VoidMethod' method of the DomainService.
        ''' </summary>
        ''' <param name="callback">Callback to invoke when the operation completes.</param>
        ''' <param name="userState">Value to pass to the callback.  It can be <c>null</c>.</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function VoidMethod(ByVal callback As Action(Of InvokeOperation), ByVal userState As Object) As InvokeOperation
            Me.ValidateMethod("VoidMethod", Nothing)
            Return Me.InvokeOperation("VoidMethod", GetType(System.Void), Nothing, true, callback, userState)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'VoidMethod' method of the DomainService.
        ''' </summary>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Overloads Function VoidMethod() As InvokeOperation
            Me.ValidateMethod("VoidMethod", Nothing)
            Return Me.InvokeOperation("VoidMethod", GetType(System.Void), Nothing, true, Nothing, Nothing)
        End Function
        
        ''' <summary>
        ''' Asynchronously invokes the 'VoidMethod' method of the DomainService.
        ''' </summary>
        ''' <param name="cancellationToken">A cancellation token that can be used to cancel the work</param>
        ''' <returns>An operation instance that can be used to manage the asynchronous request.</returns>
        Public Function VoidMethodAsync(Optional ByVal cancellationToken As CancellationToken = Nothing) As System.Threading.Tasks.Task(Of InvokeResult)
            Me.ValidateMethod("VoidMethod", Nothing)
            Return Me.InvokeOperationAsync("VoidMethod", Nothing, true, cancellationToken)
        End Function
        
        ''' <summary>
        ''' Creates a new EntityContainer for this DomainContext's EntitySets.
        ''' </summary>
        ''' <returns>A new container instance.</returns>
        Protected Overrides Function CreateEntityContainer() As EntityContainer
            Return New TestProvider_ScenariosEntityContainer()
        End Function
        
        ''' <summary>
        ''' Service contract for the 'TestProvider_Scenarios' DomainService.
        ''' </summary>
        <ServiceContract(),  _
         ServiceKnownType(GetType(Decimal)),  _
         ServiceKnownType(GetType(DateTime)),  _
         ServiceKnownType(GetType(TimeSpan)),  _
         ServiceKnownType(GetType(Guid)),  _
         ServiceKnownType(GetType(TestEnum)),  _
         ServiceKnownType(GetType(DateTimeOffset)),  _
         ServiceKnownType(GetType(String())),  _
         ServiceKnownType(GetType(Uri)),  _
         ServiceKnownType(GetType(Byte())),  _
         ServiceKnownType(GetType(Dictionary(Of String, String)))>  _
        Public Interface ITestProvider_ScenariosContract
            
            ''' <summary>
            ''' Asynchronously invokes the 'CreateAndGetSideEffectsObjects' operation.
            ''' </summary>
            ''' <param name="name">The value for the 'name' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/CreateAndGetSideEffectsObjects", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/CreateAndGetSideEffectsObjectsResponse")>  _
            Function BeginCreateAndGetSideEffectsObjects(ByVal name As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginCreateAndGetSideEffectsObjects'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginCreateAndGetSideEffectsObjects'.</param>
            ''' <returns>The 'QueryResult' returned from the 'CreateAndGetSideEffectsObjects' operation.</returns>
            Function EndCreateAndGetSideEffectsObjects(ByVal result As IAsyncResult) As QueryResult(Of TestSideEffects)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetAReturnNull' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetAReturnNull", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetAReturnNullResponse")>  _
            Function BeginGetAReturnNull(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetAReturnNull'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetAReturnNull'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetAReturnNull' operation.</returns>
            Function EndGetAReturnNull(ByVal result As IAsyncResult) As QueryResult(Of A)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetAs' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetAs", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetAsResponse")>  _
            Function BeginGetAs(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetAs'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetAs'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetAs' operation.</returns>
            Function EndGetAs(ByVal result As IAsyncResult) As QueryResult(Of A)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetAsReturnNull' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetAsReturnNull", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetAsReturnNullResponse")>  _
            Function BeginGetAsReturnNull(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetAsReturnNull'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetAsReturnNull'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetAsReturnNull' operation.</returns>
            Function EndGetAsReturnNull(ByVal result As IAsyncResult) As QueryResult(Of A)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetBs' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetBs", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetBsResponse")>  _
            Function BeginGetBs(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetBs'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetBs'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetBs' operation.</returns>
            Function EndGetBs(ByVal result As IAsyncResult) As QueryResult(Of B)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCartItems' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCartItems", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCartItemsResponse")>  _
            Function BeginGetCartItems(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCartItems'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCartItems'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCartItems' operation.</returns>
            Function EndGetCartItems(ByVal result As IAsyncResult) As QueryResult(Of CartItem)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCarts' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCarts", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCartsResponse")>  _
            Function BeginGetCarts(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCarts'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCarts'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCarts' operation.</returns>
            Function EndGetCarts(ByVal result As IAsyncResult) As QueryResult(Of Cart)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCities", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesResponse")>  _
            Function BeginGetCities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCities' operation.</returns>
            Function EndGetCities(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesInState' operation.
            ''' </summary>
            ''' <param name="state">The value for the 'state' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesInState", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesInStateResponse")>  _
            Function BeginGetCitiesInState(ByVal state As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesInState'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesInState'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesInState' operation.</returns>
            Function EndGetCitiesInState(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesInStateWithCaching' operation.
            ''' </summary>
            ''' <param name="state">The value for the 'state' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesInStateWithCaching", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesInStateWithCachingResponse")>  _
            Function BeginGetCitiesInStateWithCaching(ByVal state As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesInStateWithCaching'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesInStateWithCaching'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesInStateWithCaching' operation.</returns>
            Function EndGetCitiesInStateWithCaching(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesInStateWithCaching2' operation.
            ''' </summary>
            ''' <param name="state">The value for the 'state' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesInStateWithCaching2", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesInStateWithCaching2Response")>  _
            Function BeginGetCitiesInStateWithCaching2(ByVal state As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesInStateWithCaching2'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesInStateWithCaching2'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesInStateWithCaching2' operation.</returns>
            Function EndGetCitiesInStateWithCaching2(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCacheLocationAny' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationAny", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationAnyResponse")>  _
            Function BeginGetCitiesWithCacheLocationAny(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCacheLocationAny'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCacheLocationAny'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCacheLocationAny' operation.</returns>
            Function EndGetCitiesWithCacheLocationAny(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCacheLocationDownstream' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationDownstream", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationDownstreamRes"& _ 
                "ponse")>  _
            Function BeginGetCitiesWithCacheLocationDownstream(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCacheLocationDownstream'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCacheLocationDownstream'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCacheLocationDownstream' operation.</returns>
            Function EndGetCitiesWithCacheLocationDownstream(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCacheLocationServer' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationServer", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationServerRespons"& _ 
                "e")>  _
            Function BeginGetCitiesWithCacheLocationServer(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCacheLocationServer'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCacheLocationServer'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCacheLocationServer' operation.</returns>
            Function EndGetCitiesWithCacheLocationServer(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCacheLocationServerAndClient' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationServerAndClie"& _ 
                "nt", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCacheLocationServerAndClie"& _ 
                "ntResponse")>  _
            Function BeginGetCitiesWithCacheLocationServerAndClient(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCacheLocationServerAndClient'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCacheLocationServerAndClient'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCacheLocationServerAndClient' operation.</returns>
            Function EndGetCitiesWithCacheLocationServerAndClient(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCaching' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCaching", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCachingResponse")>  _
            Function BeginGetCitiesWithCaching(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCaching'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCaching'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCaching' operation.</returns>
            Function EndGetCitiesWithCaching(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCaching2' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCaching2", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCaching2Response")>  _
            Function BeginGetCitiesWithCaching2(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCaching2'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCaching2'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCaching2' operation.</returns>
            Function EndGetCitiesWithCaching2(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCachingAndThrow' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCachingAndThrow", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCachingAndThrowResponse")>  _
            Function BeginGetCitiesWithCachingAndThrow(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCachingAndThrow'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCachingAndThrow'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCachingAndThrow' operation.</returns>
            Function EndGetCitiesWithCachingAndThrow(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCachingVaryByHeaders' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCachingVaryByHeaders", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCachingVaryByHeadersRespon"& _ 
                "se")>  _
            Function BeginGetCitiesWithCachingVaryByHeaders(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCachingVaryByHeaders'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCachingVaryByHeaders'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCachingVaryByHeaders' operation.</returns>
            Function EndGetCitiesWithCachingVaryByHeaders(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCitiesWithCachingViaCacheProfile' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCachingViaCacheProfile", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCitiesWithCachingViaCacheProfileResp"& _ 
                "onse")>  _
            Function BeginGetCitiesWithCachingViaCacheProfile(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCitiesWithCachingViaCacheProfile'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCitiesWithCachingViaCacheProfile'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCitiesWithCachingViaCacheProfile' operation.</returns>
            Function EndGetCitiesWithCachingViaCacheProfile(ByVal result As IAsyncResult) As QueryResult(Of CityWithCacheData)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCs' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetCs", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetCsResponse")>  _
            Function BeginGetCs(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCs'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCs'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCs' operation.</returns>
            Function EndGetCs(ByVal result As IAsyncResult) As QueryResult(Of C)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetDs' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetDs", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetDsResponse")>  _
            Function BeginGetDs(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetDs'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetDs'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetDs' operation.</returns>
            Function EndGetDs(ByVal result As IAsyncResult) As QueryResult(Of D)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntitiesWithDataContracts' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetEntitiesWithDataContracts", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetEntitiesWithDataContractsResponse")>  _
            Function BeginGetEntitiesWithDataContracts(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntitiesWithDataContracts'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntitiesWithDataContracts'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntitiesWithDataContracts' operation.</returns>
            Function EndGetEntitiesWithDataContracts(ByVal result As IAsyncResult) As QueryResult(Of EntityWithDataContract)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntitiesWithDataContracts2' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetEntitiesWithDataContracts2", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetEntitiesWithDataContracts2Response")>  _
            Function BeginGetEntitiesWithDataContracts2(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntitiesWithDataContracts2'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntitiesWithDataContracts2'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntitiesWithDataContracts2' operation.</returns>
            Function EndGetEntitiesWithDataContracts2(ByVal result As IAsyncResult) As QueryResult(Of EntityWithDataContract2)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntitiesWithSpecialTypeName' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetEntitiesWithSpecialTypeName", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetEntitiesWithSpecialTypeNameResponse")>  _
            Function BeginGetEntitiesWithSpecialTypeName(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntitiesWithSpecialTypeName'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntitiesWithSpecialTypeName'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntitiesWithSpecialTypeName' operation.</returns>
            Function EndGetEntitiesWithSpecialTypeName(ByVal result As IAsyncResult) As QueryResult(Of EntityWithSpecialTypeName)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntity_TestEditableAttributes' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetEntity_TestEditableAttributes", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetEntity_TestEditableAttributesRespons"& _ 
                "e")>  _
            Function BeginGetEntity_TestEditableAttributes(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntity_TestEditableAttributes'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntity_TestEditableAttributes'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntity_TestEditableAttributes' operation.</returns>
            Function EndGetEntity_TestEditableAttributes(ByVal result As IAsyncResult) As QueryResult(Of Entity_TestEditableAttribute)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntityWithDefaultValue' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetEntityWithDefaultValue", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetEntityWithDefaultValueResponse")>  _
            Function BeginGetEntityWithDefaultValue(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntityWithDefaultValue'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntityWithDefaultValue'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntityWithDefaultValue' operation.</returns>
            Function EndGetEntityWithDefaultValue(ByVal result As IAsyncResult) As QueryResult(Of EntityWithDefaultDefaultValue)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMixedTypes' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypesResponse")>  _
            Function BeginGetMixedTypes(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMixedTypes'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMixedTypes'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMixedTypes' operation.</returns>
            Function EndGetMixedTypes(ByVal result As IAsyncResult) As QueryResult(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMixedTypes_BadAttributes' operation.
            ''' </summary>
            ''' <param name="broiled">The value for the 'broiled' parameter of this action.</param>
            ''' <param name="cheese">The value for the 'cheese' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_BadAttributes", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_BadAttributesResponse")>  _
            Function BeginGetMixedTypes_BadAttributes(ByVal broiled As Char, ByVal cheese As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMixedTypes_BadAttributes'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMixedTypes_BadAttributes'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMixedTypes_BadAttributes' operation.</returns>
            Function EndGetMixedTypes_BadAttributes(ByVal result As IAsyncResult) As QueryResult(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMixedTypes_Nullable' operation.
            ''' </summary>
            ''' <param name="idToChange">The value for the 'idToChange' parameter of this action.</param>
            ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
            ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
            ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
            ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
            ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
            ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
            ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
            ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
            ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
            ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
            ''' <param name="d">The value for the 'd' parameter of this action.</param>
            ''' <param name="s">The value for the 's' parameter of this action.</param>
            ''' <param name="dec">The value for the 'dec' parameter of this action.</param>
            ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
            ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
            ''' <param name="g">The value for the 'g' parameter of this action.</param>
            ''' <param name="en">The value for the 'en' parameter of this action.</param>
            ''' <param name="nullableTimeSpans">The value for the 'nullableTimeSpans' parameter of this action.</param>
            ''' <param name="nullableDictionaryDateTime">The value for the 'nullableDictionaryDateTime' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_Nullable", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_NullableResponse")>  _
            Function BeginGetMixedTypes_Nullable( _
                        ByVal idToChange As String,  _
                        ByVal b1 As Nullable(Of Boolean),  _
                        ByVal b2 As Nullable(Of Byte),  _
                        ByVal sb As Nullable(Of SByte),  _
                        ByVal int16 As Nullable(Of Short),  _
                        ByVal uint16 As Nullable(Of UShort),  _
                        ByVal int32 As Nullable(Of Integer),  _
                        ByVal uint32 As Nullable(Of UInteger),  _
                        ByVal int64 As Nullable(Of Long),  _
                        ByVal uint64 As Nullable(Of ULong),  _
                        ByVal ch As Nullable(Of Char),  _
                        ByVal d As Nullable(Of Double),  _
                        ByVal s As Nullable(Of Single),  _
                        ByVal dec As Nullable(Of Decimal),  _
                        ByVal dt As Nullable(Of DateTime),  _
                        ByVal ts As Nullable(Of TimeSpan),  _
                        ByVal g As Nullable(Of Guid),  _
                        ByVal en As Nullable(Of TestEnum),  _
                        ByVal nullableTimeSpans As IEnumerable(Of Nullable(Of TimeSpan)),  _
                        ByVal nullableDictionaryDateTime As Dictionary(Of DateTime, Nullable(Of DateTime)),  _
                        ByVal callback As AsyncCallback,  _
                        ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMixedTypes_Nullable'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMixedTypes_Nullable'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMixedTypes_Nullable' operation.</returns>
            Function EndGetMixedTypes_Nullable(ByVal result As IAsyncResult) As QueryResult(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMixedTypes_Predefined' operation.
            ''' </summary>
            ''' <param name="idToChange">The value for the 'idToChange' parameter of this action.</param>
            ''' <param name="s">The value for the 's' parameter of this action.</param>
            ''' <param name="d">The value for the 'd' parameter of this action.</param>
            ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
            ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
            ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
            ''' <param name="strings">The value for the 'strings' parameter of this action.</param>
            ''' <param name="uri">The value for the 'uri' parameter of this action.</param>
            ''' <param name="g">The value for the 'g' parameter of this action.</param>
            ''' <param name="b">The value for the 'b' parameter of this action.</param>
            ''' <param name="x">The value for the 'x' parameter of this action.</param>
            ''' <param name="bArray">The value for the 'bArray' parameter of this action.</param>
            ''' <param name="en">The value for the 'en' parameter of this action.</param>
            ''' <param name="ints">The value for the 'ints' parameter of this action.</param>
            ''' <param name="dictionaryDateTime">The value for the 'dictionaryDateTime' parameter of this action.</param>
            ''' <param name="dictionaryGuid">The value for the 'dictionaryGuid' parameter of this action.</param>
            ''' <param name="dictionaryString">The value for the 'dictionaryString' parameter of this action.</param>
            ''' <param name="dictionaryTestEnum">The value for the 'dictionaryTestEnum' parameter of this action.</param>
            ''' <param name="dictionaryXElement">The value for the 'dictionaryXElement' parameter of this action.</param>
            ''' <param name="dictionaryDateTimeOffset">The value for the 'dictionaryDateTimeOffset' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_Predefined", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_PredefinedResponse")>  _
            Function BeginGetMixedTypes_Predefined( _
                        ByVal idToChange As String,  _
                        ByVal s As String,  _
                        ByVal d As Decimal,  _
                        ByVal dt As DateTime,  _
                        ByVal ts As TimeSpan,  _
                        ByVal dto As DateTimeOffset,  _
                        ByVal strings As IEnumerable(Of String),  _
                        ByVal uri As Uri,  _
                        ByVal g As Guid,  _
                        ByVal b() As Byte,  _
                        ByVal x As XElement,  _
                        ByVal bArray() As Byte,  _
                        ByVal en As TestEnum,  _
                        ByVal ints() As Integer,  _
                        ByVal dictionaryDateTime As Dictionary(Of DateTime, DateTime),  _
                        ByVal dictionaryGuid As Dictionary(Of Guid, Guid),  _
                        ByVal dictionaryString As Dictionary(Of String, String),  _
                        ByVal dictionaryTestEnum As Dictionary(Of TestEnum, TestEnum),  _
                        ByVal dictionaryXElement As Dictionary(Of XElement, XElement),  _
                        ByVal dictionaryDateTimeOffset As Dictionary(Of DateTimeOffset, DateTimeOffset),  _
                        ByVal callback As AsyncCallback,  _
                        ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMixedTypes_Predefined'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMixedTypes_Predefined'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMixedTypes_Predefined' operation.</returns>
            Function EndGetMixedTypes_Predefined(ByVal result As IAsyncResult) As QueryResult(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMixedTypes_Primitive' operation.
            ''' </summary>
            ''' <param name="idToChange">The value for the 'idToChange' parameter of this action.</param>
            ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
            ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
            ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
            ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
            ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
            ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
            ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
            ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
            ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
            ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
            ''' <param name="d">The value for the 'd' parameter of this action.</param>
            ''' <param name="s">The value for the 's' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_Primitive", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypes_PrimitiveResponse")>  _
            Function BeginGetMixedTypes_Primitive(ByVal idToChange As String, ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMixedTypes_Primitive'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMixedTypes_Primitive'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMixedTypes_Primitive' operation.</returns>
            Function EndGetMixedTypes_Primitive(ByVal result As IAsyncResult) As QueryResult(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMixedTypesThrow' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypesThrow", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypesThrowResponse")>  _
            Function BeginGetMixedTypesThrow(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMixedTypesThrow'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMixedTypesThrow'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMixedTypesThrow' operation.</returns>
            Function EndGetMixedTypesThrow(ByVal result As IAsyncResult) As QueryResult(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMixedTypeSuperset' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypeSuperset", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMixedTypeSupersetResponse")>  _
            Function BeginGetMixedTypeSuperset(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMixedTypeSuperset'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMixedTypeSuperset'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMixedTypeSuperset' operation.</returns>
            Function EndGetMixedTypeSuperset(ByVal result As IAsyncResult) As QueryResult(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMultipartKeyTestEntity1s' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMultipartKeyTestEntity1s", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMultipartKeyTestEntity1sResponse")>  _
            Function BeginGetMultipartKeyTestEntity1s(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMultipartKeyTestEntity1s'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMultipartKeyTestEntity1s'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMultipartKeyTestEntity1s' operation.</returns>
            Function EndGetMultipartKeyTestEntity1s(ByVal result As IAsyncResult) As QueryResult(Of MultipartKeyTestEntity1)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMultipartKeyTestEntity2s' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMultipartKeyTestEntity2s", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMultipartKeyTestEntity2sResponse")>  _
            Function BeginGetMultipartKeyTestEntity2s(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMultipartKeyTestEntity2s'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMultipartKeyTestEntity2s'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMultipartKeyTestEntity2s' operation.</returns>
            Function EndGetMultipartKeyTestEntity2s(ByVal result As IAsyncResult) As QueryResult(Of MultipartKeyTestEntity2)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetMultipartKeyTestEntity3s' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetMultipartKeyTestEntity3s", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetMultipartKeyTestEntity3sResponse")>  _
            Function BeginGetMultipartKeyTestEntity3s(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetMultipartKeyTestEntity3s'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetMultipartKeyTestEntity3s'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetMultipartKeyTestEntity3s' operation.</returns>
            Function EndGetMultipartKeyTestEntity3s(ByVal result As IAsyncResult) As QueryResult(Of MultipartKeyTestEntity3)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetNullableFKParents' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetNullableFKParents", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetNullableFKParentsResponse")>  _
            Function BeginGetNullableFKParents(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetNullableFKParents'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetNullableFKParents'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetNullableFKParents' operation.</returns>
            Function EndGetNullableFKParents(ByVal result As IAsyncResult) As QueryResult(Of NullableFKParent)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetPOCONoValidations' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetPOCONoValidations", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetPOCONoValidationsResponse")>  _
            Function BeginGetPOCONoValidations(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetPOCONoValidations'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetPOCONoValidations'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetPOCONoValidations' operation.</returns>
            Function EndGetPOCONoValidations(ByVal result As IAsyncResult) As QueryResult(Of POCONoValidation)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetRoundtripOriginal_ClassAttribute_TestEntities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetRoundtripOriginal_ClassAttribute_Tes"& _ 
                "tEntities", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetRoundtripOriginal_ClassAttribute_Tes"& _ 
                "tEntitiesResponse")>  _
            Function BeginGetRoundtripOriginal_ClassAttribute_TestEntities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetRoundtripOriginal_ClassAttribute_TestEntities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetRoundtripOriginal_ClassAttribute_TestEntities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetRoundtripOriginal_ClassAttribute_TestEntities' operation.</returns>
            Function EndGetRoundtripOriginal_ClassAttribute_TestEntities(ByVal result As IAsyncResult) As QueryResult(Of RoundtripOriginal_TestEntity2)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetRoundtripOriginal_TestEntities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetRoundtripOriginal_TestEntities", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetRoundtripOriginal_TestEntitiesRespon"& _ 
                "se")>  _
            Function BeginGetRoundtripOriginal_TestEntities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetRoundtripOriginal_TestEntities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetRoundtripOriginal_TestEntities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetRoundtripOriginal_TestEntities' operation.</returns>
            Function EndGetRoundtripOriginal_TestEntities(ByVal result As IAsyncResult) As QueryResult(Of RoundtripOriginal_TestEntity)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetRoundtripQueryEntities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetRoundtripQueryEntities", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetRoundtripQueryEntitiesResponse")>  _
            Function BeginGetRoundtripQueryEntities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetRoundtripQueryEntities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetRoundtripQueryEntities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetRoundtripQueryEntities' operation.</returns>
            Function EndGetRoundtripQueryEntities(ByVal result As IAsyncResult) As QueryResult(Of RoundtripQueryEntity)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetTestCyclesRoot' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetTestCyclesRoot", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetTestCyclesRootResponse")>  _
            Function BeginGetTestCyclesRoot(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetTestCyclesRoot'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetTestCyclesRoot'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetTestCyclesRoot' operation.</returns>
            Function EndGetTestCyclesRoot(ByVal result As IAsyncResult) As QueryResult(Of TestCycles)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetTestCyclesTier1' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetTestCyclesTier1", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetTestCyclesTier1Response")>  _
            Function BeginGetTestCyclesTier1(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetTestCyclesTier1'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetTestCyclesTier1'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetTestCyclesTier1' operation.</returns>
            Function EndGetTestCyclesTier1(ByVal result As IAsyncResult) As QueryResult(Of TestCycles)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetTestEntityForInvokeOperations' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetTestEntityForInvokeOperations", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetTestEntityForInvokeOperationsRespons"& _ 
                "e")>  _
            Function BeginGetTestEntityForInvokeOperations(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetTestEntityForInvokeOperations'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetTestEntityForInvokeOperations'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetTestEntityForInvokeOperations' operation.</returns>
            Function EndGetTestEntityForInvokeOperations(ByVal result As IAsyncResult) As QueryResult(Of TestEntityForInvokeOperations)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetTimestampEntityAs' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetTimestampEntityAs", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetTimestampEntityAsResponse")>  _
            Function BeginGetTimestampEntityAs(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetTimestampEntityAs'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetTimestampEntityAs'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetTimestampEntityAs' operation.</returns>
            Function EndGetTimestampEntityAs(ByVal result As IAsyncResult) As QueryResult(Of TimestampEntityA)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetTimestampEntityBs' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetTimestampEntityBs", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetTimestampEntityBsResponse")>  _
            Function BeginGetTimestampEntityBs(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetTimestampEntityBs'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetTimestampEntityBs'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetTimestampEntityBs' operation.</returns>
            Function EndGetTimestampEntityBs(ByVal result As IAsyncResult) As QueryResult(Of TimestampEntityB)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetXElemEntities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/GetXElemEntities", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/GetXElemEntitiesResponse")>  _
            Function BeginGetXElemEntities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetXElemEntities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetXElemEntities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetXElemEntities' operation.</returns>
            Function EndGetXElemEntities(ByVal result As IAsyncResult) As QueryResult(Of EntityWithXElement)
            
            ''' <summary>
            ''' Asynchronously invokes the 'IncrementBid1ForA' operation.
            ''' </summary>
            ''' <param name="a">The value for the 'a' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/IncrementBid1ForA", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/IncrementBid1ForAResponse")>  _
            Function BeginIncrementBid1ForA(ByVal a As A, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginIncrementBid1ForA'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginIncrementBid1ForA'.</param>
            ''' <returns>The 'Int32' returned from the 'IncrementBid1ForA' operation.</returns>
            Function EndIncrementBid1ForA(ByVal result As IAsyncResult) As Integer
            
            ''' <summary>
            ''' Asynchronously invokes the 'IncrementBid1ForABy' operation.
            ''' </summary>
            ''' <param name="a">The value for the 'a' parameter of this action.</param>
            ''' <param name="delta">The value for the 'delta' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/IncrementBid1ForABy", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/IncrementBid1ForAByResponse")>  _
            Function BeginIncrementBid1ForABy(ByVal a As A, ByVal delta As Integer, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginIncrementBid1ForABy'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginIncrementBid1ForABy'.</param>
            ''' <returns>The 'Int32' returned from the 'IncrementBid1ForABy' operation.</returns>
            Function EndIncrementBid1ForABy(ByVal result As IAsyncResult) As Integer
            
            ''' <summary>
            ''' Asynchronously invokes the 'InvokeOperationWithParamValidation' operation.
            ''' </summary>
            ''' <param name="a">The value for the 'a' parameter of this action.</param>
            ''' <param name="b">The value for the 'b' parameter of this action.</param>
            ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/InvokeOperationWithParamValidation", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/InvokeOperationWithParamValidationRespo"& _ 
                "nse")>  _
            Function BeginInvokeOperationWithParamValidation(ByVal a As Integer, ByVal b As String, ByVal entity As CityWithCacheData, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginInvokeOperationWithParamValidation'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginInvokeOperationWithParamValidation'.</param>
            ''' <returns>The 'Boolean' returned from the 'InvokeOperationWithParamValidation' operation.</returns>
            Function EndInvokeOperationWithParamValidation(ByVal result As IAsyncResult) As Boolean
            
            ''' <summary>
            ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParam' operation.
            ''' </summary>
            ''' <param name="list">The value for the 'list' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/InvokeOpWithIEnumerableParam", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/InvokeOpWithIEnumerableParamResponse")>  _
            Function BeginInvokeOpWithIEnumerableParam(ByVal list As IEnumerable(Of TestEntityForInvokeOperations), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginInvokeOpWithIEnumerableParam'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginInvokeOpWithIEnumerableParam'.</param>
            ''' <returns>The 'IEnumerable`1' returned from the 'InvokeOpWithIEnumerableParam' operation.</returns>
            Function EndInvokeOpWithIEnumerableParam(ByVal result As IAsyncResult) As IEnumerable(Of TestEntityForInvokeOperations)
            
            ''' <summary>
            ''' Asynchronously invokes the 'InvokeOpWithIEnumerableParamAndNoSideEffects' operation.
            ''' </summary>
            ''' <param name="list">The value for the 'list' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/InvokeOpWithIEnumerableParamAndNoSideEf"& _ 
                "fects", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/InvokeOpWithIEnumerableParamAndNoSideEf"& _ 
                "fectsResponse")>  _
            Function BeginInvokeOpWithIEnumerableParamAndNoSideEffects(ByVal list As IEnumerable(Of TestEntityForInvokeOperations), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginInvokeOpWithIEnumerableParamAndNoSideEffects'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginInvokeOpWithIEnumerableParamAndNoSideEffects'.</param>
            ''' <returns>The 'IEnumerable`1' returned from the 'InvokeOpWithIEnumerableParamAndNoSideEffects' operation.</returns>
            Function EndInvokeOpWithIEnumerableParamAndNoSideEffects(ByVal result As IAsyncResult) As IEnumerable(Of TestEntityForInvokeOperations)
            
            ''' <summary>
            ''' Asynchronously invokes the 'MethodRequiresAuthentication' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/MethodRequiresAuthentication", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/MethodRequiresAuthenticationResponse")>  _
            Function BeginMethodRequiresAuthentication(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginMethodRequiresAuthentication'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginMethodRequiresAuthentication'.</param>
            Sub EndMethodRequiresAuthentication(ByVal result As IAsyncResult)
            
            ''' <summary>
            ''' Asynchronously invokes the 'QueryWithParamValidation' operation.
            ''' </summary>
            ''' <param name="a">The value for the 'a' parameter of this action.</param>
            ''' <param name="b">The value for the 'b' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/QueryWithParamValidation", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/QueryWithParamValidationResponse")>  _
            Function BeginQueryWithParamValidation(ByVal a As Integer, ByVal b As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginQueryWithParamValidation'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginQueryWithParamValidation'.</param>
            ''' <returns>The 'QueryResult' returned from the 'QueryWithParamValidation' operation.</returns>
            Function EndQueryWithParamValidation(ByVal result As IAsyncResult) As QueryResult(Of A)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnHttpMethodWithoutSideEffects_Online' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnHttpMethodWithoutSideEffects_Onli"& _ 
                "ne", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnHttpMethodWithoutSideEffects_Onli"& _ 
                "neResponse")>  _
            Function BeginReturnHttpMethodWithoutSideEffects_Online(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnHttpMethodWithoutSideEffects_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnHttpMethodWithoutSideEffects_Online'.</param>
            ''' <returns>The 'String' returned from the 'ReturnHttpMethodWithoutSideEffects_Online' operation.</returns>
            Function EndReturnHttpMethodWithoutSideEffects_Online(ByVal result As IAsyncResult) As String
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnHttpMethodWithSideEffects_Online' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnHttpMethodWithSideEffects_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnHttpMethodWithSideEffects_OnlineR"& _ 
                "esponse")>  _
            Function BeginReturnHttpMethodWithSideEffects_Online(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnHttpMethodWithSideEffects_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnHttpMethodWithSideEffects_Online'.</param>
            ''' <returns>The 'String' returned from the 'ReturnHttpMethodWithSideEffects_Online' operation.</returns>
            Function EndReturnHttpMethodWithSideEffects_Online(ByVal result As IAsyncResult) As String
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsBinary_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsBinary_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsBinary_OnlineResponse")>  _
            Function BeginReturnsBinary_Online(ByVal value() As Byte, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsBinary_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsBinary_Online'.</param>
            ''' <returns>The 'Byte[]' returned from the 'ReturnsBinary_Online' operation.</returns>
            Function EndReturnsBinary_Online(ByVal result As IAsyncResult) As Byte()
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsBoolean_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsBoolean_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsBoolean_OnlineResponse")>  _
            Function BeginReturnsBoolean_Online(ByVal value As Boolean, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsBoolean_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsBoolean_Online'.</param>
            ''' <returns>The 'Boolean' returned from the 'ReturnsBoolean_Online' operation.</returns>
            Function EndReturnsBoolean_Online(ByVal result As IAsyncResult) As Boolean
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsByte_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsByte_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsByte_OnlineResponse")>  _
            Function BeginReturnsByte_Online(ByVal value As Byte, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsByte_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsByte_Online'.</param>
            ''' <returns>The 'Byte' returned from the 'ReturnsByte_Online' operation.</returns>
            Function EndReturnsByte_Online(ByVal result As IAsyncResult) As Byte
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsByteArray_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsByteArray_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsByteArray_OnlineResponse")>  _
            Function BeginReturnsByteArray_Online(ByVal value() As Byte, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsByteArray_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsByteArray_Online'.</param>
            ''' <returns>The 'Byte[]' returned from the 'ReturnsByteArray_Online' operation.</returns>
            Function EndReturnsByteArray_Online(ByVal result As IAsyncResult) As Byte()
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsChar_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsChar_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsChar_OnlineResponse")>  _
            Function BeginReturnsChar_Online(ByVal value As Char, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsChar_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsChar_Online'.</param>
            ''' <returns>The 'Char' returned from the 'ReturnsChar_Online' operation.</returns>
            Function EndReturnsChar_Online(ByVal result As IAsyncResult) As Char
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsDateTime_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTime_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTime_OnlineResponse")>  _
            Function BeginReturnsDateTime_Online(ByVal value As DateTime, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsDateTime_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsDateTime_Online'.</param>
            ''' <returns>The 'DateTime' returned from the 'ReturnsDateTime_Online' operation.</returns>
            Function EndReturnsDateTime_Online(ByVal result As IAsyncResult) As DateTime
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsDateTimeOffset_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTimeOffset_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTimeOffset_OnlineResponse")>  _
            Function BeginReturnsDateTimeOffset_Online(ByVal value As DateTimeOffset, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsDateTimeOffset_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsDateTimeOffset_Online'.</param>
            ''' <returns>The 'DateTimeOffset' returned from the 'ReturnsDateTimeOffset_Online' operation.</returns>
            Function EndReturnsDateTimeOffset_Online(ByVal result As IAsyncResult) As DateTimeOffset
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsDateTimeOffsets_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTimeOffsets_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTimeOffsets_OnlineResponse")>  _
            Function BeginReturnsDateTimeOffsets_Online(ByVal value() As DateTimeOffset, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsDateTimeOffsets_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsDateTimeOffsets_Online'.</param>
            ''' <returns>The 'DateTimeOffset[]' returned from the 'ReturnsDateTimeOffsets_Online' operation.</returns>
            Function EndReturnsDateTimeOffsets_Online(ByVal result As IAsyncResult) As DateTimeOffset()
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsDateTimes_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTimes_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsDateTimes_OnlineResponse")>  _
            Function BeginReturnsDateTimes_Online(ByVal value() As DateTime, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsDateTimes_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsDateTimes_Online'.</param>
            ''' <returns>The 'DateTime[]' returned from the 'ReturnsDateTimes_Online' operation.</returns>
            Function EndReturnsDateTimes_Online(ByVal result As IAsyncResult) As DateTime()
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsDecimal_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsDecimal_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsDecimal_OnlineResponse")>  _
            Function BeginReturnsDecimal_Online(ByVal value As Decimal, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsDecimal_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsDecimal_Online'.</param>
            ''' <returns>The 'Decimal' returned from the 'ReturnsDecimal_Online' operation.</returns>
            Function EndReturnsDecimal_Online(ByVal result As IAsyncResult) As Decimal
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsDictionary' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsDictionary", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsDictionaryResponse")>  _
            Function BeginReturnsDictionary(ByVal value As Dictionary(Of String, Integer), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsDictionary'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsDictionary'.</param>
            ''' <returns>The 'Dictionary`2' returned from the 'ReturnsDictionary' operation.</returns>
            Function EndReturnsDictionary(ByVal result As IAsyncResult) As Dictionary(Of String, Integer)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsDouble_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsDouble_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsDouble_OnlineResponse")>  _
            Function BeginReturnsDouble_Online(ByVal value As Double, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsDouble_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsDouble_Online'.</param>
            ''' <returns>The 'Double' returned from the 'ReturnsDouble_Online' operation.</returns>
            Function EndReturnsDouble_Online(ByVal result As IAsyncResult) As Double
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsEntity_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="id">The value for the 'id' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsEntity_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsEntity_OnlineResponse")>  _
            Function BeginReturnsEntity_Online(ByVal value As MixedType, ByVal id As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsEntity_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsEntity_Online'.</param>
            ''' <returns>The 'MixedType' returned from the 'ReturnsEntity_Online' operation.</returns>
            Function EndReturnsEntity_Online(ByVal result As IAsyncResult) As MixedType
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsEntityCollection_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsEntityCollection_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsEntityCollection_OnlineResponse")>  _
            Function BeginReturnsEntityCollection_Online(ByVal value As Integer, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsEntityCollection_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsEntityCollection_Online'.</param>
            ''' <returns>The 'IEnumerable`1' returned from the 'ReturnsEntityCollection_Online' operation.</returns>
            Function EndReturnsEntityCollection_Online(ByVal result As IAsyncResult) As IEnumerable(Of MixedType)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsEnum_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsEnum_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsEnum_OnlineResponse")>  _
            Function BeginReturnsEnum_Online(ByVal value As TestEnum, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsEnum_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsEnum_Online'.</param>
            ''' <returns>The 'TestEnum' returned from the 'ReturnsEnum_Online' operation.</returns>
            Function EndReturnsEnum_Online(ByVal result As IAsyncResult) As TestEnum
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsGuid_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsGuid_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsGuid_OnlineResponse")>  _
            Function BeginReturnsGuid_Online(ByVal value As Guid, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsGuid_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsGuid_Online'.</param>
            ''' <returns>The 'Guid' returned from the 'ReturnsGuid_Online' operation.</returns>
            Function EndReturnsGuid_Online(ByVal result As IAsyncResult) As Guid
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsInt16_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsInt16_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsInt16_OnlineResponse")>  _
            Function BeginReturnsInt16_Online(ByVal value As Short, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsInt16_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsInt16_Online'.</param>
            ''' <returns>The 'Int16' returned from the 'ReturnsInt16_Online' operation.</returns>
            Function EndReturnsInt16_Online(ByVal result As IAsyncResult) As Short
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsInt32_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsInt32_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsInt32_OnlineResponse")>  _
            Function BeginReturnsInt32_Online(ByVal value As Integer, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsInt32_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsInt32_Online'.</param>
            ''' <returns>The 'Int32' returned from the 'ReturnsInt32_Online' operation.</returns>
            Function EndReturnsInt32_Online(ByVal result As IAsyncResult) As Integer
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsInt64_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsInt64_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsInt64_OnlineResponse")>  _
            Function BeginReturnsInt64_Online(ByVal value As Long, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsInt64_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsInt64_Online'.</param>
            ''' <returns>The 'Int64' returned from the 'ReturnsInt64_Online' operation.</returns>
            Function EndReturnsInt64_Online(ByVal result As IAsyncResult) As Long
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableBoolean_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableBoolean_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableBoolean_OnlineResponse")>  _
            Function BeginReturnsNullableBoolean_Online(ByVal value As Nullable(Of Boolean), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableBoolean_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableBoolean_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableBoolean_Online' operation.</returns>
            Function EndReturnsNullableBoolean_Online(ByVal result As IAsyncResult) As Nullable(Of Boolean)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableByte_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableByte_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableByte_OnlineResponse")>  _
            Function BeginReturnsNullableByte_Online(ByVal value As Nullable(Of Byte), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableByte_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableByte_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableByte_Online' operation.</returns>
            Function EndReturnsNullableByte_Online(ByVal result As IAsyncResult) As Nullable(Of Byte)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableChar_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableChar_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableChar_OnlineResponse")>  _
            Function BeginReturnsNullableChar_Online(ByVal value As Nullable(Of Char), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableChar_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableChar_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableChar_Online' operation.</returns>
            Function EndReturnsNullableChar_Online(ByVal result As IAsyncResult) As Nullable(Of Char)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableDateTime_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDateTime_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDateTime_OnlineResponse")>  _
            Function BeginReturnsNullableDateTime_Online(ByVal value As Nullable(Of DateTime), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableDateTime_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableDateTime_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableDateTime_Online' operation.</returns>
            Function EndReturnsNullableDateTime_Online(ByVal result As IAsyncResult) As Nullable(Of DateTime)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableDateTimeOffset_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDateTimeOffset_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDateTimeOffset_OnlineRes"& _ 
                "ponse")>  _
            Function BeginReturnsNullableDateTimeOffset_Online(ByVal value As Nullable(Of DateTimeOffset), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableDateTimeOffset_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableDateTimeOffset_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableDateTimeOffset_Online' operation.</returns>
            Function EndReturnsNullableDateTimeOffset_Online(ByVal result As IAsyncResult) As Nullable(Of DateTimeOffset)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableDecimal_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDecimal_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDecimal_OnlineResponse")>  _
            Function BeginReturnsNullableDecimal_Online(ByVal value As Nullable(Of Decimal), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableDecimal_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableDecimal_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableDecimal_Online' operation.</returns>
            Function EndReturnsNullableDecimal_Online(ByVal result As IAsyncResult) As Nullable(Of Decimal)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableDouble_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDouble_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableDouble_OnlineResponse")>  _
            Function BeginReturnsNullableDouble_Online(ByVal value As Nullable(Of Double), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableDouble_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableDouble_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableDouble_Online' operation.</returns>
            Function EndReturnsNullableDouble_Online(ByVal result As IAsyncResult) As Nullable(Of Double)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableEnum_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableEnum_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableEnum_OnlineResponse")>  _
            Function BeginReturnsNullableEnum_Online(ByVal value As Nullable(Of TestEnum), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableEnum_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableEnum_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableEnum_Online' operation.</returns>
            Function EndReturnsNullableEnum_Online(ByVal result As IAsyncResult) As Nullable(Of TestEnum)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableGuid_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableGuid_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableGuid_OnlineResponse")>  _
            Function BeginReturnsNullableGuid_Online(ByVal value As Nullable(Of Guid), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableGuid_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableGuid_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableGuid_Online' operation.</returns>
            Function EndReturnsNullableGuid_Online(ByVal result As IAsyncResult) As Nullable(Of Guid)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableInt16_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableInt16_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableInt16_OnlineResponse")>  _
            Function BeginReturnsNullableInt16_Online(ByVal value As Nullable(Of Short), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableInt16_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableInt16_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableInt16_Online' operation.</returns>
            Function EndReturnsNullableInt16_Online(ByVal result As IAsyncResult) As Nullable(Of Short)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableInt32_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableInt32_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableInt32_OnlineResponse")>  _
            Function BeginReturnsNullableInt32_Online(ByVal value As Nullable(Of Integer), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableInt32_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableInt32_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableInt32_Online' operation.</returns>
            Function EndReturnsNullableInt32_Online(ByVal result As IAsyncResult) As Nullable(Of Integer)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableInt64_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableInt64_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableInt64_OnlineResponse")>  _
            Function BeginReturnsNullableInt64_Online(ByVal value As Nullable(Of Long), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableInt64_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableInt64_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableInt64_Online' operation.</returns>
            Function EndReturnsNullableInt64_Online(ByVal result As IAsyncResult) As Nullable(Of Long)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableSByte_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableSByte_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableSByte_OnlineResponse")>  _
            Function BeginReturnsNullableSByte_Online(ByVal value As Nullable(Of SByte), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableSByte_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableSByte_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableSByte_Online' operation.</returns>
            Function EndReturnsNullableSByte_Online(ByVal result As IAsyncResult) As Nullable(Of SByte)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableSingle_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableSingle_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableSingle_OnlineResponse")>  _
            Function BeginReturnsNullableSingle_Online(ByVal value As Nullable(Of Single), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableSingle_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableSingle_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableSingle_Online' operation.</returns>
            Function EndReturnsNullableSingle_Online(ByVal result As IAsyncResult) As Nullable(Of Single)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableTimeSpan_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableTimeSpan_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableTimeSpan_OnlineResponse")>  _
            Function BeginReturnsNullableTimeSpan_Online(ByVal value As Nullable(Of TimeSpan), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableTimeSpan_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableTimeSpan_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableTimeSpan_Online' operation.</returns>
            Function EndReturnsNullableTimeSpan_Online(ByVal result As IAsyncResult) As Nullable(Of TimeSpan)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableUInt16_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableUInt16_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableUInt16_OnlineResponse")>  _
            Function BeginReturnsNullableUInt16_Online(ByVal value As Nullable(Of UShort), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableUInt16_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableUInt16_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableUInt16_Online' operation.</returns>
            Function EndReturnsNullableUInt16_Online(ByVal result As IAsyncResult) As Nullable(Of UShort)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableUInt32_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableUInt32_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableUInt32_OnlineResponse")>  _
            Function BeginReturnsNullableUInt32_Online(ByVal value As Nullable(Of UInteger), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableUInt32_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableUInt32_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableUInt32_Online' operation.</returns>
            Function EndReturnsNullableUInt32_Online(ByVal result As IAsyncResult) As Nullable(Of UInteger)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsNullableUInt64_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableUInt64_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsNullableUInt64_OnlineResponse")>  _
            Function BeginReturnsNullableUInt64_Online(ByVal value As Nullable(Of ULong), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsNullableUInt64_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsNullableUInt64_Online'.</param>
            ''' <returns>The 'Nullable`1' returned from the 'ReturnsNullableUInt64_Online' operation.</returns>
            Function EndReturnsNullableUInt64_Online(ByVal result As IAsyncResult) As Nullable(Of ULong)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsSByte_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsSByte_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsSByte_OnlineResponse")>  _
            Function BeginReturnsSByte_Online(ByVal value As SByte, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsSByte_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsSByte_Online'.</param>
            ''' <returns>The 'SByte' returned from the 'ReturnsSByte_Online' operation.</returns>
            Function EndReturnsSByte_Online(ByVal result As IAsyncResult) As SByte
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsSingle_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsSingle_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsSingle_OnlineResponse")>  _
            Function BeginReturnsSingle_Online(ByVal value As Single, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsSingle_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsSingle_Online'.</param>
            ''' <returns>The 'Single' returned from the 'ReturnsSingle_Online' operation.</returns>
            Function EndReturnsSingle_Online(ByVal result As IAsyncResult) As Single
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsString_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsString_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsString_OnlineResponse")>  _
            Function BeginReturnsString_Online(ByVal value As String, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsString_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsString_Online'.</param>
            ''' <returns>The 'String' returned from the 'ReturnsString_Online' operation.</returns>
            Function EndReturnsString_Online(ByVal result As IAsyncResult) As String
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsStrings_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsStrings_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsStrings_OnlineResponse")>  _
            Function BeginReturnsStrings_Online(ByVal value As IEnumerable(Of String), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsStrings_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsStrings_Online'.</param>
            ''' <returns>The 'IEnumerable`1' returned from the 'ReturnsStrings_Online' operation.</returns>
            Function EndReturnsStrings_Online(ByVal result As IAsyncResult) As IEnumerable(Of String)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsTimeSpan_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsTimeSpan_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsTimeSpan_OnlineResponse")>  _
            Function BeginReturnsTimeSpan_Online(ByVal value As TimeSpan, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsTimeSpan_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsTimeSpan_Online'.</param>
            ''' <returns>The 'TimeSpan' returned from the 'ReturnsTimeSpan_Online' operation.</returns>
            Function EndReturnsTimeSpan_Online(ByVal result As IAsyncResult) As TimeSpan
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsTimeSpans_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsTimeSpans_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsTimeSpans_OnlineResponse")>  _
            Function BeginReturnsTimeSpans_Online(ByVal value As IEnumerable(Of TimeSpan), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsTimeSpans_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsTimeSpans_Online'.</param>
            ''' <returns>The 'IEnumerable`1' returned from the 'ReturnsTimeSpans_Online' operation.</returns>
            Function EndReturnsTimeSpans_Online(ByVal result As IAsyncResult) As IEnumerable(Of TimeSpan)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsUInt16_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsUInt16_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsUInt16_OnlineResponse")>  _
            Function BeginReturnsUInt16_Online(ByVal value As UShort, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsUInt16_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsUInt16_Online'.</param>
            ''' <returns>The 'UInt16' returned from the 'ReturnsUInt16_Online' operation.</returns>
            Function EndReturnsUInt16_Online(ByVal result As IAsyncResult) As UShort
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsUInt32_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsUInt32_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsUInt32_OnlineResponse")>  _
            Function BeginReturnsUInt32_Online(ByVal value As UInteger, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsUInt32_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsUInt32_Online'.</param>
            ''' <returns>The 'UInt32' returned from the 'ReturnsUInt32_Online' operation.</returns>
            Function EndReturnsUInt32_Online(ByVal result As IAsyncResult) As UInteger
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsUInt64_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsUInt64_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsUInt64_OnlineResponse")>  _
            Function BeginReturnsUInt64_Online(ByVal value As ULong, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsUInt64_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsUInt64_Online'.</param>
            ''' <returns>The 'UInt64' returned from the 'ReturnsUInt64_Online' operation.</returns>
            Function EndReturnsUInt64_Online(ByVal result As IAsyncResult) As ULong
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsUri_Online' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsUri_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsUri_OnlineResponse")>  _
            Function BeginReturnsUri_Online(ByVal value As Uri, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsUri_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsUri_Online'.</param>
            ''' <returns>The 'Uri' returned from the 'ReturnsUri_Online' operation.</returns>
            Function EndReturnsUri_Online(ByVal result As IAsyncResult) As Uri
            
            ''' <summary>
            ''' Asynchronously invokes the 'ReturnsXElement' operation.
            ''' </summary>
            ''' <param name="value">The value for the 'value' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ReturnsXElement", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ReturnsXElementResponse")>  _
            Function BeginReturnsXElement(ByVal value As XElement, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginReturnsXElement'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginReturnsXElement'.</param>
            ''' <returns>The 'XElement' returned from the 'ReturnsXElement' operation.</returns>
            Function EndReturnsXElement(ByVal result As IAsyncResult) As XElement
            
            ''' <summary>
            ''' Asynchronously invokes the 'RoundtripDouble' operation.
            ''' </summary>
            ''' <param name="d">The value for the 'd' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/RoundtripDouble", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/RoundtripDoubleResponse")>  _
            Function BeginRoundtripDouble(ByVal d As Double, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginRoundtripDouble'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginRoundtripDouble'.</param>
            ''' <returns>The 'Double' returned from the 'RoundtripDouble' operation.</returns>
            Function EndRoundtripDouble(ByVal result As IAsyncResult) As Double
            
            ''' <summary>
            ''' Asynchronously invokes the 'TestNullable_Online' operation.
            ''' </summary>
            ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
            ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
            ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
            ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
            ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
            ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
            ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
            ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
            ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
            ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
            ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
            ''' <param name="d">The value for the 'd' parameter of this action.</param>
            ''' <param name="s">The value for the 's' parameter of this action.</param>
            ''' <param name="dec">The value for the 'dec' parameter of this action.</param>
            ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
            ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
            ''' <param name="g">The value for the 'g' parameter of this action.</param>
            ''' <param name="en">The value for the 'en' parameter of this action.</param>
            ''' <param name="nullableTimeSpans">The value for the 'nullableTimeSpans' parameter of this action.</param>
            ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/TestNullable_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/TestNullable_OnlineResponse")>  _
            Function BeginTestNullable_Online( _
                        ByVal entity As MixedType,  _
                        ByVal b1 As Nullable(Of Boolean),  _
                        ByVal b2 As Nullable(Of Byte),  _
                        ByVal sb As Nullable(Of SByte),  _
                        ByVal int16 As Nullable(Of Short),  _
                        ByVal uint16 As Nullable(Of UShort),  _
                        ByVal int32 As Nullable(Of Integer),  _
                        ByVal uint32 As Nullable(Of UInteger),  _
                        ByVal int64 As Nullable(Of Long),  _
                        ByVal uint64 As Nullable(Of ULong),  _
                        ByVal ch As Nullable(Of Char),  _
                        ByVal d As Nullable(Of Double),  _
                        ByVal s As Nullable(Of Single),  _
                        ByVal dec As Nullable(Of Decimal),  _
                        ByVal dt As Nullable(Of DateTime),  _
                        ByVal ts As Nullable(Of TimeSpan),  _
                        ByVal g As Nullable(Of Guid),  _
                        ByVal en As Nullable(Of TestEnum),  _
                        ByVal nullableTimeSpans As IEnumerable(Of Nullable(Of TimeSpan)),  _
                        ByVal dto As Nullable(Of DateTimeOffset),  _
                        ByVal callback As AsyncCallback,  _
                        ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginTestNullable_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginTestNullable_Online'.</param>
            ''' <returns>The 'Boolean' returned from the 'TestNullable_Online' operation.</returns>
            Function EndTestNullable_Online(ByVal result As IAsyncResult) As Boolean
            
            ''' <summary>
            ''' Asynchronously invokes the 'TestPredefined_Online' operation.
            ''' </summary>
            ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
            ''' <param name="s">The value for the 's' parameter of this action.</param>
            ''' <param name="d">The value for the 'd' parameter of this action.</param>
            ''' <param name="dt">The value for the 'dt' parameter of this action.</param>
            ''' <param name="ts">The value for the 'ts' parameter of this action.</param>
            ''' <param name="strings">The value for the 'strings' parameter of this action.</param>
            ''' <param name="uri">The value for the 'uri' parameter of this action.</param>
            ''' <param name="g">The value for the 'g' parameter of this action.</param>
            ''' <param name="b">The value for the 'b' parameter of this action.</param>
            ''' <param name="x">The value for the 'x' parameter of this action.</param>
            ''' <param name="bArray">The value for the 'bArray' parameter of this action.</param>
            ''' <param name="en">The value for the 'en' parameter of this action.</param>
            ''' <param name="guids">The value for the 'guids' parameter of this action.</param>
            ''' <param name="ulongs">The value for the 'ulongs' parameter of this action.</param>
            ''' <param name="dto">The value for the 'dto' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/TestPredefined_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/TestPredefined_OnlineResponse")>  _
            Function BeginTestPredefined_Online( _
                        ByVal entity As MixedType,  _
                        ByVal s As String,  _
                        ByVal d As Decimal,  _
                        ByVal dt As DateTime,  _
                        ByVal ts As TimeSpan,  _
                        ByVal strings As IEnumerable(Of String),  _
                        ByVal uri As Uri,  _
                        ByVal g As Guid,  _
                        ByVal b() As Byte,  _
                        ByVal x As XElement,  _
                        ByVal bArray() As Byte,  _
                        ByVal en As TestEnum,  _
                        ByVal guids() As Guid,  _
                        ByVal ulongs() As ULong,  _
                        ByVal dto As DateTimeOffset,  _
                        ByVal callback As AsyncCallback,  _
                        ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginTestPredefined_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginTestPredefined_Online'.</param>
            ''' <returns>The 'Boolean' returned from the 'TestPredefined_Online' operation.</returns>
            Function EndTestPredefined_Online(ByVal result As IAsyncResult) As Boolean
            
            ''' <summary>
            ''' Asynchronously invokes the 'TestPrimitive_Online' operation.
            ''' </summary>
            ''' <param name="entity">The value for the 'entity' parameter of this action.</param>
            ''' <param name="b1">The value for the 'b1' parameter of this action.</param>
            ''' <param name="b2">The value for the 'b2' parameter of this action.</param>
            ''' <param name="sb">The value for the 'sb' parameter of this action.</param>
            ''' <param name="int16">The value for the 'int16' parameter of this action.</param>
            ''' <param name="uint16">The value for the 'uint16' parameter of this action.</param>
            ''' <param name="int32">The value for the 'int32' parameter of this action.</param>
            ''' <param name="uint32">The value for the 'uint32' parameter of this action.</param>
            ''' <param name="int64">The value for the 'int64' parameter of this action.</param>
            ''' <param name="uint64">The value for the 'uint64' parameter of this action.</param>
            ''' <param name="ch">The value for the 'ch' parameter of this action.</param>
            ''' <param name="d">The value for the 'd' parameter of this action.</param>
            ''' <param name="s">The value for the 's' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/TestPrimitive_Online", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/TestPrimitive_OnlineResponse")>  _
            Function BeginTestPrimitive_Online(ByVal entity As MixedType, ByVal b1 As Boolean, ByVal b2 As Byte, ByVal sb As SByte, ByVal int16 As Short, ByVal uint16 As UShort, ByVal int32 As Integer, ByVal uint32 As UInteger, ByVal int64 As Long, ByVal uint64 As ULong, ByVal ch As Char, ByVal d As Double, ByVal s As Single, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginTestPrimitive_Online'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginTestPrimitive_Online'.</param>
            ''' <returns>The 'Boolean' returned from the 'TestPrimitive_Online' operation.</returns>
            Function EndTestPrimitive_Online(ByVal result As IAsyncResult) As Boolean
            
            ''' <summary>
            ''' Asynchronously invokes the 'ThrowOnlineException' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ThrowOnlineException", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ThrowOnlineExceptionResponse")>  _
            Function BeginThrowOnlineException(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginThrowOnlineException'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginThrowOnlineException'.</param>
            Sub EndThrowOnlineException(ByVal result As IAsyncResult)
            
            ''' <summary>
            ''' Asynchronously invokes the 'ThrowValidationException' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/ThrowValidationException", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/ThrowValidationExceptionResponse")>  _
            Function BeginThrowValidationException(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginThrowValidationException'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginThrowValidationException'.</param>
            Sub EndThrowValidationException(ByVal result As IAsyncResult)
            
            ''' <summary>
            ''' Asynchronously invokes the 'VariousParameterTypes' operation.
            ''' </summary>
            ''' <param name="str">The value for the 'str' parameter of this action.</param>
            ''' <param name="integer">The value for the 'integer' parameter of this action.</param>
            ''' <param name="boolean">The value for the 'boolean' parameter of this action.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/VariousParameterTypes", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/VariousParameterTypesResponse")>  _
            Function BeginVariousParameterTypes(ByVal str As String, ByVal [integer] As Integer, ByVal [boolean] As Boolean, ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginVariousParameterTypes'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginVariousParameterTypes'.</param>
            ''' <returns>The 'Int32' returned from the 'VariousParameterTypes' operation.</returns>
            Function EndVariousParameterTypes(ByVal result As IAsyncResult) As Integer
            
            ''' <summary>
            ''' Asynchronously invokes the 'VoidMethod' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(true),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/VoidMethod", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/VoidMethodResponse")>  _
            Function BeginVoidMethod(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginVoidMethod'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginVoidMethod'.</param>
            Sub EndVoidMethod(ByVal result As IAsyncResult)
            
            ''' <summary>
            ''' Asynchronously invokes the 'SubmitChanges' operation.
            ''' </summary>
            ''' <param name="changeSet">The change-set to submit.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/TestProvider_Scenarios/SubmitChanges", ReplyAction:="http://tempuri.org/TestProvider_Scenarios/SubmitChangesResponse")>  _
            Function BeginSubmitChanges(ByVal changeSet As IEnumerable(Of ChangeSetEntry), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            ''' <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            Function EndSubmitChanges(ByVal result As IAsyncResult) As IEnumerable(Of ChangeSetEntry)
        End Interface
        
        Friend NotInheritable Class TestProvider_ScenariosEntityContainer
            Inherits EntityContainer
            
            Public Sub New()
                MyBase.New
                Me.CreateEntitySet(Of A)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of B)(EntitySetOperations.None)
                Me.CreateEntitySet(Of C)(EntitySetOperations.Add)
                Me.CreateEntitySet(Of Cart)(EntitySetOperations.Add)
                Me.CreateEntitySet(Of CartItem)(EntitySetOperations.Add)
                Me.CreateEntitySet(Of CityWithCacheData)(EntitySetOperations.None)
                Me.CreateEntitySet(Of D)(EntitySetOperations.Add)
                Me.CreateEntitySet(Of Entity_TestEditableAttribute)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of EntityWithDataContract)(EntitySetOperations.None)
                Me.CreateEntitySet(Of EntityWithDataContract2)(EntitySetOperations.None)
                Me.CreateEntitySet(Of EntityWithDefaultDefaultValue)(EntitySetOperations.None)
                Me.CreateEntitySet(Of EntityWithXElement)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of MixedType)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of MultipartKeyTestEntity1)(EntitySetOperations.None)
                Me.CreateEntitySet(Of MultipartKeyTestEntity2)(EntitySetOperations.None)
                Me.CreateEntitySet(Of MultipartKeyTestEntity3)(EntitySetOperations.None)
                Me.CreateEntitySet(Of NullableFKChild)(EntitySetOperations.None)
                Me.CreateEntitySet(Of NullableFKParent)(EntitySetOperations.None)
                Me.CreateEntitySet(Of POCONoValidation)(EntitySetOperations.All)
                Me.CreateEntitySet(Of RoundtripOriginal_TestEntity)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of RoundtripOriginal_TestEntity2)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of RoundtripQueryEntity)(EntitySetOperations.None)
                Me.CreateEntitySet(Of EntityWithSpecialTypeName)(EntitySetOperations.None)
                Me.CreateEntitySet(Of TestCycles)(EntitySetOperations.None)
                Me.CreateEntitySet(Of TestEntityForInvokeOperations)(EntitySetOperations.None)
                Me.CreateEntitySet(Of TestSideEffects)(EntitySetOperations.None)
                Me.CreateEntitySet(Of TimestampEntityA)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of TimestampEntityB)(EntitySetOperations.Edit)
            End Sub
        End Class
    End Class
    
    ''' <summary>
    ''' The 'TestSideEffects' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class TestSideEffects
        Inherits Entity
        
        Private _name As String
        
        Private _url As Uri
        
        Private _verb As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnNameChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnNameChanged()
        End Sub
        Private Partial Sub OnURLChanging(ByVal value As Uri)
        End Sub
        Private Partial Sub OnURLChanged()
        End Sub
        Private Partial Sub OnVerbChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnVerbChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TestSideEffects"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Name' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Name() As String
            Get
                Return Me._name
            End Get
            Set
                If (String.Equals(Me._name, value) = false) Then
                    Me.OnNameChanging(value)
                    Me.ValidateProperty("Name", value)
                    Me._name = value
                    Me.RaisePropertyChanged("Name")
                    Me.OnNameChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'URL' value.
        ''' </summary>
        <DataMember()>  _
        Public Property URL() As Uri
            Get
                Return Me._url
            End Get
            Set
                If (Object.Equals(Me._url, value) = false) Then
                    Me.OnURLChanging(value)
                    Me.RaiseDataMemberChanging("URL")
                    Me.ValidateProperty("URL", value)
                    Me._url = value
                    Me.RaiseDataMemberChanged("URL")
                    Me.OnURLChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Verb' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Verb() As String
            Get
                Return Me._verb
            End Get
            Set
                If (String.Equals(Me._verb, value) = false) Then
                    Me.OnVerbChanging(value)
                    Me.RaiseDataMemberChanging("Verb")
                    Me.ValidateProperty("Verb", value)
                    Me._verb = value
                    Me.RaiseDataMemberChanged("Verb")
                    Me.OnVerbChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._name
        End Function
    End Class
    
    ''' <summary>
    ''' The 'TimestampEntityA' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class TimestampEntityA
        Inherits Entity
        
        Private _id As Integer
        
        Private _valueA As String
        
        Private _valueB As String
        
        Private _version() As Byte
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnValueAChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValueAChanged()
        End Sub
        Private Partial Sub OnValueBChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValueBChanged()
        End Sub
        Private Partial Sub OnVersionChanging(ByVal value() As Byte)
        End Sub
        Private Partial Sub OnVersionChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TimestampEntityA"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValueA' value.
        ''' </summary>
        <DataMember()>  _
        Public Property ValueA() As String
            Get
                Return Me._valueA
            End Get
            Set
                If (String.Equals(Me._valueA, value) = false) Then
                    Me.OnValueAChanging(value)
                    Me.RaiseDataMemberChanging("ValueA")
                    Me.ValidateProperty("ValueA", value)
                    Me._valueA = value
                    Me.RaiseDataMemberChanged("ValueA")
                    Me.OnValueAChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValueB' value.
        ''' </summary>
        <DataMember()>  _
        Public Property ValueB() As String
            Get
                Return Me._valueB
            End Get
            Set
                If (String.Equals(Me._valueB, value) = false) Then
                    Me.OnValueBChanging(value)
                    Me.RaiseDataMemberChanging("ValueB")
                    Me.ValidateProperty("ValueB", value)
                    Me._valueB = value
                    Me.RaiseDataMemberChanged("ValueB")
                    Me.OnValueBChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Version' value.
        ''' </summary>
        <ConcurrencyCheck(),  _
         DataMember(),  _
         Editable(false),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Version() As Byte()
            Get
                Return Me._version
            End Get
            Set
                If (Object.Equals(Me._version, value) = false) Then
                    Me.OnVersionChanging(value)
                    Me.ValidateProperty("Version", value)
                    Me._version = value
                    Me.RaisePropertyChanged("Version")
                    Me.OnVersionChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
    
    ''' <summary>
    ''' The 'TimestampEntityB' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class TimestampEntityB
        Inherits Entity
        
        Private _id As Integer
        
        Private _valueA As String
        
        Private _valueB As String
        
        Private _version() As Byte
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnIDChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIDChanged()
        End Sub
        Private Partial Sub OnValueAChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValueAChanged()
        End Sub
        Private Partial Sub OnValueBChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValueBChanged()
        End Sub
        Private Partial Sub OnVersionChanging(ByVal value() As Byte)
        End Sub
        Private Partial Sub OnVersionChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="TimestampEntityB"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'ID' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property ID() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIDChanging(value)
                    Me.ValidateProperty("ID", value)
                    Me._id = value
                    Me.RaisePropertyChanged("ID")
                    Me.OnIDChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValueA' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property ValueA() As String
            Get
                Return Me._valueA
            End Get
            Set
                If (String.Equals(Me._valueA, value) = false) Then
                    Me.OnValueAChanging(value)
                    Me.RaiseDataMemberChanging("ValueA")
                    Me.ValidateProperty("ValueA", value)
                    Me._valueA = value
                    Me.RaiseDataMemberChanged("ValueA")
                    Me.OnValueAChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValueB' value.
        ''' </summary>
        <DataMember()>  _
        Public Property ValueB() As String
            Get
                Return Me._valueB
            End Get
            Set
                If (String.Equals(Me._valueB, value) = false) Then
                    Me.OnValueBChanging(value)
                    Me.RaiseDataMemberChanging("ValueB")
                    Me.ValidateProperty("ValueB", value)
                    Me._valueB = value
                    Me.RaiseDataMemberChanged("ValueB")
                    Me.OnValueBChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Version' value.
        ''' </summary>
        <ConcurrencyCheck(),  _
         DataMember(),  _
         Editable(false),  _
         RoundtripOriginal(),  _
         Timestamp()>  _
        Public Property Version() As Byte()
            Get
                Return Me._version
            End Get
            Set
                If (Object.Equals(Me._version, value) = false) Then
                    Me.OnVersionChanging(value)
                    Me.ValidateProperty("Version", value)
                    Me._version = value
                    Me.RaisePropertyChanged("Version")
                    Me.OnVersionChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
End Namespace

Namespace TestDomainServices.NamedUpdates
    
    ''' <summary>
    ''' The DomainContext corresponding to the 'CalculatorDomainService' DomainService.
    ''' </summary>
    Partial Public NotInheritable Class CalculatorDomainContext
        Inherits DomainContext
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="CalculatorDomainContext"/> class.
        ''' </summary>
        Public Sub New()
            Me.New(New Uri("TestDomainServices-NamedUpdates-CalculatorDomainService.svc", UriKind.Relative))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="CalculatorDomainContext"/> class with the specified service URI.
        ''' </summary>
        ''' <param name="serviceUri">The CalculatorDomainService service URI.</param>
        Public Sub New(ByVal serviceUri As Uri)
            Me.New(DomainContext.CreateDomainClient(GetType(ICalculatorDomainServiceContract), serviceUri, false))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="CalculatorDomainContext"/> class with the specified <paramref name="domainClient"/>.
        ''' </summary>
        ''' <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        Public Sub New(ByVal domainClient As DomainClient)
            MyBase.New(domainClient)
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets the set of <see cref="CalculatorValue"/> entity instances that have been loaded into this <see cref="CalculatorDomainContext"/> instance.
        ''' </summary>
        Public ReadOnly Property CalculatorValues() As EntitySet(Of CalculatorValue)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of CalculatorValue)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="CalculatorValueOldCodeGen"/> entity instances that have been loaded into this <see cref="CalculatorDomainContext"/> instance.
        ''' </summary>
        Public ReadOnly Property CalculatorValueOldCodeGens() As EntitySet(Of CalculatorValueOldCodeGen)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of CalculatorValueOldCodeGen)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CalculatorValue"/> entity instances using the 'GetEntities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CalculatorValue"/> entity instances.</returns>
        Public Function GetEntitiesQuery() As EntityQuery(Of CalculatorValue)
            Me.ValidateMethod("GetEntitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of CalculatorValue)("GetEntities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="CalculatorValueOldCodeGen"/> entity instances using the 'GetEntitiesOldCodeGen' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="CalculatorValueOldCodeGen"/> entity instances.</returns>
        Public Function GetEntitiesOldCodeGenQuery() As EntityQuery(Of CalculatorValueOldCodeGen)
            Me.ValidateMethod("GetEntitiesOldCodeGenQuery", Nothing)
            Return MyBase.CreateQuery(Of CalculatorValueOldCodeGen)("GetEntitiesOldCodeGen", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Invokes the 'Add' method of the specified <see cref="CalculatorValue"/> entity.
        ''' </summary>
        ''' <param name="value">The <see cref="CalculatorValue"/> entity instance.</param>
        ''' <param name="rhs">The value for the 'rhs' parameter for this action.</param>
        Public Sub Add(ByVal value As CalculatorValue, ByVal rhs As Decimal)
            value.Add(rhs)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'Multiply' method of the specified <see cref="CalculatorValue"/> entity.
        ''' </summary>
        ''' <param name="value">The <see cref="CalculatorValue"/> entity instance.</param>
        ''' <param name="rhs">The value for the 'rhs' parameter for this action.</param>
        Public Sub Multiply(ByVal value As CalculatorValue, ByVal rhs As Decimal)
            value.Multiply(rhs)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'AddTwice' method of the specified <see cref="CalculatorValueOldCodeGen"/> entity.
        ''' </summary>
        ''' <param name="value">The <see cref="CalculatorValueOldCodeGen"/> entity instance.</param>
        ''' <param name="rhs">The value for the 'rhs' parameter for this action.</param>
        Public Sub AddTwice(ByVal value As CalculatorValueOldCodeGen, ByVal rhs As Decimal)
            value.AddTwice(rhs)
        End Sub
        
        ''' <summary>
        ''' Creates a new EntityContainer for this DomainContext's EntitySets.
        ''' </summary>
        ''' <returns>A new container instance.</returns>
        Protected Overrides Function CreateEntityContainer() As EntityContainer
            Return New CalculatorDomainContextEntityContainer()
        End Function
        
        ''' <summary>
        ''' Service contract for the 'CalculatorDomainService' DomainService.
        ''' </summary>
        <ServiceContract(),  _
         ServiceKnownType(GetType(Decimal))>  _
        Public Interface ICalculatorDomainServiceContract
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/CalculatorDomainService/GetEntities", ReplyAction:="http://tempuri.org/CalculatorDomainService/GetEntitiesResponse")>  _
            Function BeginGetEntities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntities' operation.</returns>
            Function EndGetEntities(ByVal result As IAsyncResult) As QueryResult(Of CalculatorValue)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntitiesOldCodeGen' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/CalculatorDomainService/GetEntitiesOldCodeGen", ReplyAction:="http://tempuri.org/CalculatorDomainService/GetEntitiesOldCodeGenResponse")>  _
            Function BeginGetEntitiesOldCodeGen(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntitiesOldCodeGen'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntitiesOldCodeGen'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntitiesOldCodeGen' operation.</returns>
            Function EndGetEntitiesOldCodeGen(ByVal result As IAsyncResult) As QueryResult(Of CalculatorValueOldCodeGen)
            
            ''' <summary>
            ''' Asynchronously invokes the 'SubmitChanges' operation.
            ''' </summary>
            ''' <param name="changeSet">The change-set to submit.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/CalculatorDomainService/SubmitChanges", ReplyAction:="http://tempuri.org/CalculatorDomainService/SubmitChangesResponse")>  _
            Function BeginSubmitChanges(ByVal changeSet As IEnumerable(Of ChangeSetEntry), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            ''' <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            Function EndSubmitChanges(ByVal result As IAsyncResult) As IEnumerable(Of ChangeSetEntry)
        End Interface
        
        Friend NotInheritable Class CalculatorDomainContextEntityContainer
            Inherits EntityContainer
            
            Public Sub New()
                MyBase.New
                Me.CreateEntitySet(Of CalculatorValue)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of CalculatorValueOldCodeGen)(EntitySetOperations.Edit)
            End Sub
        End Class
    End Class
    
    ''' <summary>
    ''' The 'CalculatorValue' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class CalculatorValue
        Inherits Entity
        
        Private _key As Integer
        
        Private _value As Decimal
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnValueChanging(ByVal value As Decimal)
        End Sub
        Private Partial Sub OnValueChanged()
        End Sub
        Private Partial Sub OnAddInvoking(ByVal rhs As Decimal)
        End Sub
        Private Partial Sub OnAddInvoked()
        End Sub
        Private Partial Sub OnMultiplyInvoking(ByVal rhs As Decimal)
        End Sub
        Private Partial Sub OnMultiplyInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="CalculatorValue"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Value' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property Value() As Decimal
            Get
                Return Me._value
            End Get
            Set
                If ((Me._value = value)  _
                            = false) Then
                    Me.OnValueChanging(value)
                    Me.RaiseDataMemberChanging("Value")
                    Me.ValidateProperty("Value", value)
                    Me._value = value
                    Me.RaiseDataMemberChanged("Value")
                    Me.OnValueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'Add' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsAddInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("Add")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'Add' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanAdd() As Boolean
            Get
                Return MyBase.CanInvokeAction("Add")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'Multiply' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsMultiplyInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("Multiply")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'Multiply' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanMultiply() As Boolean
            Get
                Return MyBase.CanInvokeAction("Multiply")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'Add' action on this entity.
        ''' </summary>
        ''' <param name="rhs">The value to pass to the server method's 'rhs' parameter.</param>
        <EntityAction("Add", AllowMultipleInvocations:=true)>  _
        Public Sub Add(ByVal rhs As Decimal)
            Me.OnAddInvoking(rhs)
            MyBase.InvokeAction("Add", rhs)
            Me.OnAddInvoked
        End Sub
        
        ''' <summary>
        ''' Invokes the 'Multiply' action on this entity.
        ''' </summary>
        ''' <param name="rhs">The value to pass to the server method's 'rhs' parameter.</param>
        <EntityAction("Multiply", AllowMultipleInvocations:=true)>  _
        Public Sub Multiply(ByVal rhs As Decimal)
            Me.OnMultiplyInvoking(rhs)
            MyBase.InvokeAction("Multiply", rhs)
            Me.OnMultiplyInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'CalculatorValueOldCodeGen' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class CalculatorValueOldCodeGen
        Inherits Entity
        
        Private _key As Integer
        
        Private _value As Decimal
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnValueChanging(ByVal value As Decimal)
        End Sub
        Private Partial Sub OnValueChanged()
        End Sub
        Private Partial Sub OnAddTwiceInvoking(ByVal rhs As Decimal)
        End Sub
        Private Partial Sub OnAddTwiceInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="CalculatorValueOldCodeGen"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Value' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property Value() As Decimal
            Get
                Return Me._value
            End Get
            Set
                If ((Me._value = value)  _
                            = false) Then
                    Me.OnValueChanging(value)
                    Me.RaiseDataMemberChanging("Value")
                    Me.ValidateProperty("Value", value)
                    Me._value = value
                    Me.RaiseDataMemberChanged("Value")
                    Me.OnValueChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'AddTwice' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsAddTwiceInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("AddTwice")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'AddTwice' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanAddTwice() As Boolean
            Get
                Return MyBase.CanInvokeAction("AddTwice")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'AddTwice' action on this entity.
        ''' </summary>
        ''' <param name="rhs">The value to pass to the server method's 'rhs' parameter.</param>
        <EntityAction("AddTwice", AllowMultipleInvocations:=false)>  _
        Public Sub AddTwice(ByVal rhs As Decimal)
            Me.OnAddTwiceInvoking(rhs)
            MyBase.InvokeAction("AddTwice", rhs)
            Me.OnAddTwiceInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MockComplexObject1' class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockComplexObject1
        Inherits ComplexObject
        
        Private _property1 As MockComplexObject1
        
        Private _validatedProperty As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As MockComplexObject1)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnValidatedPropertyChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValidatedPropertyChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockComplexObject1"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property Property1() As MockComplexObject1
            Get
                Return Me._property1
            End Get
            Set
                If (Object.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValidatedProperty' value.
        ''' </summary>
        <CustomValidation(GetType(DynamicTestValidator), "Validate"),  _
         DataMember()>  _
        Public Property ValidatedProperty() As String
            Get
                Return Me._validatedProperty
            End Get
            Set
                If (String.Equals(Me._validatedProperty, value) = false) Then
                    Me.OnValidatedPropertyChanging(value)
                    Me.RaiseDataMemberChanging("ValidatedProperty")
                    Me.ValidateProperty("ValidatedProperty", value)
                    Me._validatedProperty = value
                    Me.RaiseDataMemberChanged("ValidatedProperty")
                    Me.OnValidatedPropertyChanged
                End If
            End Set
        End Property
    End Class
    
    ''' <summary>
    ''' The 'MockComplexObject2' class.
    ''' </summary>
    <CustomValidation(GetType(DynamicTestValidator), "Validate"),  _
     DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockComplexObject2
        Inherits ComplexObject
        
        Private _property1 As MockComplexObject2
        
        Private _validatedProperty As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As MockComplexObject2)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnValidatedPropertyChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValidatedPropertyChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockComplexObject2"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property Property1() As MockComplexObject2
            Get
                Return Me._property1
            End Get
            Set
                If (Object.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValidatedProperty' value.
        ''' </summary>
        <CustomValidation(GetType(DynamicTestValidator), "Validate"),  _
         DataMember()>  _
        Public Property ValidatedProperty() As String
            Get
                Return Me._validatedProperty
            End Get
            Set
                If (String.Equals(Me._validatedProperty, value) = false) Then
                    Me.OnValidatedPropertyChanging(value)
                    Me.RaiseDataMemberChanging("ValidatedProperty")
                    Me.ValidateProperty("ValidatedProperty", value)
                    Me._validatedProperty = value
                    Me.RaiseDataMemberChanged("ValidatedProperty")
                    Me.OnValidatedPropertyChanged
                End If
            End Set
        End Property
    End Class
    
    ''' <summary>
    ''' The 'MockComplexObject3' class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockComplexObject3
        Inherits ComplexObject
        
        Private _commonArray() As MockComplexObject4
        
        Private _commonProperty As MockComplexObject4
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCommonArrayChanging(ByVal value() As MockComplexObject4)
        End Sub
        Private Partial Sub OnCommonArrayChanged()
        End Sub
        Private Partial Sub OnCommonPropertyChanging(ByVal value As MockComplexObject4)
        End Sub
        Private Partial Sub OnCommonPropertyChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockComplexObject3"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'CommonArray' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property CommonArray() As MockComplexObject4()
            Get
                Return Me._commonArray
            End Get
            Set
                If (Object.Equals(Me._commonArray, value) = false) Then
                    Me.OnCommonArrayChanging(value)
                    Me.RaiseDataMemberChanging("CommonArray")
                    Me.ValidateProperty("CommonArray", value)
                    Me._commonArray = value
                    Me.RaiseDataMemberChanged("CommonArray")
                    Me.OnCommonArrayChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CommonProperty' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property CommonProperty() As MockComplexObject4
            Get
                Return Me._commonProperty
            End Get
            Set
                If (Object.Equals(Me._commonProperty, value) = false) Then
                    Me.OnCommonPropertyChanging(value)
                    Me.RaiseDataMemberChanging("CommonProperty")
                    Me.ValidateProperty("CommonProperty", value)
                    Me._commonProperty = value
                    Me.RaiseDataMemberChanged("CommonProperty")
                    Me.OnCommonPropertyChanged
                End If
            End Set
        End Property
    End Class
    
    ''' <summary>
    ''' The 'MockComplexObject4' class.
    ''' </summary>
    <CustomValidation(GetType(DynamicTestValidator), "Validate"),  _
     DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockComplexObject4
        Inherits ComplexObject
        
        Private _property1 As MockComplexObject4
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As MockComplexObject4)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockComplexObject4"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property Property1() As MockComplexObject4
            Get
                Return Me._property1
            End Get
            Set
                If (Object.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
    End Class
    
    ''' <summary>
    ''' The 'MockEntity1' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockEntity1
        Inherits Entity
        
        Private _key As Integer
        
        Private _property1 As String
        
        Private _property2 As String
        
        Private _property3 As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnProperty2Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty2Changed()
        End Sub
        Private Partial Sub OnProperty3Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty3Changed()
        End Sub
        Private Partial Sub OnNamedUpdateMethodInvoking(ByVal newProperty1 As String)
        End Sub
        Private Partial Sub OnNamedUpdateMethodInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockEntity1"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property1() As String
            Get
                Return Me._property1
            End Get
            Set
                If (String.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property2() As String
            Get
                Return Me._property2
            End Get
            Set
                If (String.Equals(Me._property2, value) = false) Then
                    Me.OnProperty2Changing(value)
                    Me.RaiseDataMemberChanging("Property2")
                    Me.ValidateProperty("Property2", value)
                    Me._property2 = value
                    Me.RaiseDataMemberChanged("Property2")
                    Me.OnProperty2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property3' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property3() As String
            Get
                Return Me._property3
            End Get
            Set
                If (String.Equals(Me._property3, value) = false) Then
                    Me.OnProperty3Changing(value)
                    Me.RaiseDataMemberChanging("Property3")
                    Me.ValidateProperty("Property3", value)
                    Me._property3 = value
                    Me.RaiseDataMemberChanged("Property3")
                    Me.OnProperty3Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateMethod' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsNamedUpdateMethodInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("NamedUpdateMethod")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateMethod' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanNamedUpdateMethod() As Boolean
            Get
                Return MyBase.CanInvokeAction("NamedUpdateMethod")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateMethod' action on this entity.
        ''' </summary>
        ''' <param name="newProperty1">The value to pass to the server method's 'newProperty1' parameter.</param>
        <EntityAction("NamedUpdateMethod", AllowMultipleInvocations:=false)>  _
        Public Sub NamedUpdateMethod(ByVal newProperty1 As String)
            Me.OnNamedUpdateMethodInvoking(newProperty1)
            MyBase.InvokeAction("NamedUpdateMethod", newProperty1)
            Me.OnNamedUpdateMethodInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MockEntity2' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockEntity2
        Inherits Entity
        
        Private _key As Integer
        
        Private _property1 As String
        
        Private _property2 As String
        
        Private _property3 As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnProperty2Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty2Changed()
        End Sub
        Private Partial Sub OnProperty3Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty3Changed()
        End Sub
        Private Partial Sub OnNamedUpdateMethodInvoking(ByVal newProperty1 As String)
        End Sub
        Private Partial Sub OnNamedUpdateMethodInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockEntity2"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property1() As String
            Get
                Return Me._property1
            End Get
            Set
                If (String.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property2() As String
            Get
                Return Me._property2
            End Get
            Set
                If (String.Equals(Me._property2, value) = false) Then
                    Me.OnProperty2Changing(value)
                    Me.RaiseDataMemberChanging("Property2")
                    Me.ValidateProperty("Property2", value)
                    Me._property2 = value
                    Me.RaiseDataMemberChanged("Property2")
                    Me.OnProperty2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property3' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property3() As String
            Get
                Return Me._property3
            End Get
            Set
                If (String.Equals(Me._property3, value) = false) Then
                    Me.OnProperty3Changing(value)
                    Me.RaiseDataMemberChanging("Property3")
                    Me.ValidateProperty("Property3", value)
                    Me._property3 = value
                    Me.RaiseDataMemberChanged("Property3")
                    Me.OnProperty3Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateMethod' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsNamedUpdateMethodInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("NamedUpdateMethod")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateMethod' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanNamedUpdateMethod() As Boolean
            Get
                Return MyBase.CanInvokeAction("NamedUpdateMethod")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateMethod' action on this entity.
        ''' </summary>
        ''' <param name="newProperty1">The value to pass to the server method's 'newProperty1' parameter.</param>
        <EntityAction("NamedUpdateMethod", AllowMultipleInvocations:=false)>  _
        Public Sub NamedUpdateMethod(ByVal newProperty1 As String)
            Me.OnNamedUpdateMethodInvoking(newProperty1)
            MyBase.InvokeAction("NamedUpdateMethod", newProperty1)
            Me.OnNamedUpdateMethodInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MockEntity3' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockEntity3
        Inherits Entity
        
        Private _key As Integer
        
        Private _property1 As String
        
        Private _property2 As String
        
        Private _property3 As String
        
        Private _validatedProperty As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnProperty2Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty2Changed()
        End Sub
        Private Partial Sub OnProperty3Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty3Changed()
        End Sub
        Private Partial Sub OnValidatedPropertyChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValidatedPropertyChanged()
        End Sub
        Private Partial Sub OnNamedUpdateWithParamValidationInvoking(<CustomValidation(GetType(DynamicTestValidator), "Validate")> ByVal array() As MockComplexObject1, <CustomValidation(GetType(DynamicTestValidator), "Validate")> ByVal complexObject As MockComplexObject1)
        End Sub
        Private Partial Sub OnNamedUpdateWithParamValidationInvoked()
        End Sub
        Private Partial Sub OnNamedUpdateWithPropValidationInvoking(ByVal array() As MockComplexObject1, ByVal complexObject As MockComplexObject1)
        End Sub
        Private Partial Sub OnNamedUpdateWithPropValidationInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockEntity3"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property1() As String
            Get
                Return Me._property1
            End Get
            Set
                If (String.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property2() As String
            Get
                Return Me._property2
            End Get
            Set
                If (String.Equals(Me._property2, value) = false) Then
                    Me.OnProperty2Changing(value)
                    Me.RaiseDataMemberChanging("Property2")
                    Me.ValidateProperty("Property2", value)
                    Me._property2 = value
                    Me.RaiseDataMemberChanged("Property2")
                    Me.OnProperty2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property3' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property3() As String
            Get
                Return Me._property3
            End Get
            Set
                If (String.Equals(Me._property3, value) = false) Then
                    Me.OnProperty3Changing(value)
                    Me.RaiseDataMemberChanging("Property3")
                    Me.ValidateProperty("Property3", value)
                    Me._property3 = value
                    Me.RaiseDataMemberChanged("Property3")
                    Me.OnProperty3Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValidatedProperty' value.
        ''' </summary>
        <CustomValidation(GetType(DynamicTestValidator), "Validate"),  _
         DataMember()>  _
        Public Property ValidatedProperty() As String
            Get
                Return Me._validatedProperty
            End Get
            Set
                If (String.Equals(Me._validatedProperty, value) = false) Then
                    Me.OnValidatedPropertyChanging(value)
                    Me.RaiseDataMemberChanging("ValidatedProperty")
                    Me.ValidateProperty("ValidatedProperty", value)
                    Me._validatedProperty = value
                    Me.RaiseDataMemberChanged("ValidatedProperty")
                    Me.OnValidatedPropertyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithParamValidation' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsNamedUpdateWithParamValidationInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("NamedUpdateWithParamValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithParamValidation' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanNamedUpdateWithParamValidation() As Boolean
            Get
                Return MyBase.CanInvokeAction("NamedUpdateWithParamValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithPropValidation' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsNamedUpdateWithPropValidationInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("NamedUpdateWithPropValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithPropValidation' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanNamedUpdateWithPropValidation() As Boolean
            Get
                Return MyBase.CanInvokeAction("NamedUpdateWithPropValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithParamValidation' action on this entity.
        ''' </summary>
        ''' <param name="array">The value to pass to the server method's 'array' parameter.</param>
        ''' <param name="complexObject">The value to pass to the server method's 'complexObject' parameter.</param>
        <EntityAction("NamedUpdateWithParamValidation", AllowMultipleInvocations:=false)>  _
        Public Sub NamedUpdateWithParamValidation(<CustomValidation(GetType(DynamicTestValidator), "Validate")> ByVal array() As MockComplexObject1, <CustomValidation(GetType(DynamicTestValidator), "Validate")> ByVal complexObject As MockComplexObject1)
            Me.OnNamedUpdateWithParamValidationInvoking(array, complexObject)
            MyBase.InvokeAction("NamedUpdateWithParamValidation", array, complexObject)
            Me.OnNamedUpdateWithParamValidationInvoked
        End Sub
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithPropValidation' action on this entity.
        ''' </summary>
        ''' <param name="array">The value to pass to the server method's 'array' parameter.</param>
        ''' <param name="complexObject">The value to pass to the server method's 'complexObject' parameter.</param>
        <EntityAction("NamedUpdateWithPropValidation", AllowMultipleInvocations:=false)>  _
        Public Sub NamedUpdateWithPropValidation(ByVal array() As MockComplexObject1, ByVal complexObject As MockComplexObject1)
            Me.OnNamedUpdateWithPropValidationInvoking(array, complexObject)
            MyBase.InvokeAction("NamedUpdateWithPropValidation", array, complexObject)
            Me.OnNamedUpdateWithPropValidationInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MockEntity4' entity class.
    ''' </summary>
    <CustomValidation(GetType(DynamicTestValidator), "Validate"),  _
     DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockEntity4
        Inherits Entity
        
        Private _key As Integer
        
        Private _property1 As String
        
        Private _property2 As String
        
        Private _property3 As String
        
        Private _validatedProperty As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnProperty2Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty2Changed()
        End Sub
        Private Partial Sub OnProperty3Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty3Changed()
        End Sub
        Private Partial Sub OnValidatedPropertyChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnValidatedPropertyChanged()
        End Sub
        Private Partial Sub OnNamedUpdateWithTypeValidationInvoking(ByVal array() As MockComplexObject2, ByVal complexObject As MockComplexObject2)
        End Sub
        Private Partial Sub OnNamedUpdateWithTypeValidationInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockEntity4"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property1() As String
            Get
                Return Me._property1
            End Get
            Set
                If (String.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property2() As String
            Get
                Return Me._property2
            End Get
            Set
                If (String.Equals(Me._property2, value) = false) Then
                    Me.OnProperty2Changing(value)
                    Me.RaiseDataMemberChanging("Property2")
                    Me.ValidateProperty("Property2", value)
                    Me._property2 = value
                    Me.RaiseDataMemberChanged("Property2")
                    Me.OnProperty2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property3' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property3() As String
            Get
                Return Me._property3
            End Get
            Set
                If (String.Equals(Me._property3, value) = false) Then
                    Me.OnProperty3Changing(value)
                    Me.RaiseDataMemberChanging("Property3")
                    Me.ValidateProperty("Property3", value)
                    Me._property3 = value
                    Me.RaiseDataMemberChanged("Property3")
                    Me.OnProperty3Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ValidatedProperty' value.
        ''' </summary>
        <CustomValidation(GetType(DynamicTestValidator), "Validate"),  _
         DataMember()>  _
        Public Property ValidatedProperty() As String
            Get
                Return Me._validatedProperty
            End Get
            Set
                If (String.Equals(Me._validatedProperty, value) = false) Then
                    Me.OnValidatedPropertyChanging(value)
                    Me.RaiseDataMemberChanging("ValidatedProperty")
                    Me.ValidateProperty("ValidatedProperty", value)
                    Me._validatedProperty = value
                    Me.RaiseDataMemberChanged("ValidatedProperty")
                    Me.OnValidatedPropertyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithTypeValidation' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsNamedUpdateWithTypeValidationInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("NamedUpdateWithTypeValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithTypeValidation' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanNamedUpdateWithTypeValidation() As Boolean
            Get
                Return MyBase.CanInvokeAction("NamedUpdateWithTypeValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithTypeValidation' action on this entity.
        ''' </summary>
        ''' <param name="array">The value to pass to the server method's 'array' parameter.</param>
        ''' <param name="complexObject">The value to pass to the server method's 'complexObject' parameter.</param>
        <EntityAction("NamedUpdateWithTypeValidation", AllowMultipleInvocations:=false)>  _
        Public Sub NamedUpdateWithTypeValidation(ByVal array() As MockComplexObject2, ByVal complexObject As MockComplexObject2)
            Me.OnNamedUpdateWithTypeValidationInvoking(array, complexObject)
            MyBase.InvokeAction("NamedUpdateWithTypeValidation", array, complexObject)
            Me.OnNamedUpdateWithTypeValidationInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MockEntity5' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockEntity5
        Inherits Entity
        
        Private _commonArray() As MockComplexObject4
        
        Private _commonProperty As MockComplexObject4
        
        Private _key As Integer
        
        Private _property1 As String
        
        Private _property2 As String
        
        Private _property3 As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCommonArrayChanging(ByVal value() As MockComplexObject4)
        End Sub
        Private Partial Sub OnCommonArrayChanged()
        End Sub
        Private Partial Sub OnCommonPropertyChanging(ByVal value As MockComplexObject4)
        End Sub
        Private Partial Sub OnCommonPropertyChanged()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnProperty2Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty2Changed()
        End Sub
        Private Partial Sub OnProperty3Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty3Changed()
        End Sub
        Private Partial Sub OnNamedUpdateWithCommonPropertiesInvoking(ByVal complexObject As MockComplexObject3)
        End Sub
        Private Partial Sub OnNamedUpdateWithCommonPropertiesInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockEntity5"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'CommonArray' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property CommonArray() As MockComplexObject4()
            Get
                Return Me._commonArray
            End Get
            Set
                If (Object.Equals(Me._commonArray, value) = false) Then
                    Me.OnCommonArrayChanging(value)
                    Me.RaiseDataMemberChanging("CommonArray")
                    Me.ValidateProperty("CommonArray", value)
                    Me._commonArray = value
                    Me.RaiseDataMemberChanged("CommonArray")
                    Me.OnCommonArrayChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CommonProperty' value.
        ''' </summary>
        <DataMember(),  _
         Display(AutoGenerateField:=false)>  _
        Public Property CommonProperty() As MockComplexObject4
            Get
                Return Me._commonProperty
            End Get
            Set
                If (Object.Equals(Me._commonProperty, value) = false) Then
                    Me.OnCommonPropertyChanging(value)
                    Me.RaiseDataMemberChanging("CommonProperty")
                    Me.ValidateProperty("CommonProperty", value)
                    Me._commonProperty = value
                    Me.RaiseDataMemberChanged("CommonProperty")
                    Me.OnCommonPropertyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property1() As String
            Get
                Return Me._property1
            End Get
            Set
                If (String.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property2() As String
            Get
                Return Me._property2
            End Get
            Set
                If (String.Equals(Me._property2, value) = false) Then
                    Me.OnProperty2Changing(value)
                    Me.RaiseDataMemberChanging("Property2")
                    Me.ValidateProperty("Property2", value)
                    Me._property2 = value
                    Me.RaiseDataMemberChanged("Property2")
                    Me.OnProperty2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property3' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property3() As String
            Get
                Return Me._property3
            End Get
            Set
                If (String.Equals(Me._property3, value) = false) Then
                    Me.OnProperty3Changing(value)
                    Me.RaiseDataMemberChanging("Property3")
                    Me.ValidateProperty("Property3", value)
                    Me._property3 = value
                    Me.RaiseDataMemberChanged("Property3")
                    Me.OnProperty3Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithCommonProperties' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsNamedUpdateWithCommonPropertiesInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("NamedUpdateWithCommonProperties")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithCommonProperties' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanNamedUpdateWithCommonProperties() As Boolean
            Get
                Return MyBase.CanInvokeAction("NamedUpdateWithCommonProperties")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithCommonProperties' action on this entity.
        ''' </summary>
        ''' <param name="complexObject">The value to pass to the server method's 'complexObject' parameter.</param>
        <EntityAction("NamedUpdateWithCommonProperties", AllowMultipleInvocations:=false)>  _
        Public Sub NamedUpdateWithCommonProperties(ByVal complexObject As MockComplexObject3)
            Me.OnNamedUpdateWithCommonPropertiesInvoking(complexObject)
            MyBase.InvokeAction("NamedUpdateWithCommonProperties", complexObject)
            Me.OnNamedUpdateWithCommonPropertiesInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MockEntity6' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.NamedUpdates")>  _
    Partial Public NotInheritable Class MockEntity6
        Inherits Entity
        
        Private _key As Integer
        
        Private _property1 As String
        
        Private _property2 As String
        
        Private _property3 As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnKeyChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnKeyChanged()
        End Sub
        Private Partial Sub OnProperty1Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty1Changed()
        End Sub
        Private Partial Sub OnProperty2Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty2Changed()
        End Sub
        Private Partial Sub OnProperty3Changing(ByVal value As String)
        End Sub
        Private Partial Sub OnProperty3Changed()
        End Sub
        Private Partial Sub OnNamedUpdateWithNoEntityValidationInvoking(ByVal complexObject As MockComplexObject2)
        End Sub
        Private Partial Sub OnNamedUpdateWithNoEntityValidationInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockEntity6"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Key' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Key() As Integer
            Get
                Return Me._key
            End Get
            Set
                If ((Me._key = value)  _
                            = false) Then
                    Me.OnKeyChanging(value)
                    Me.ValidateProperty("Key", value)
                    Me._key = value
                    Me.RaisePropertyChanged("Key")
                    Me.OnKeyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property1' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property1() As String
            Get
                Return Me._property1
            End Get
            Set
                If (String.Equals(Me._property1, value) = false) Then
                    Me.OnProperty1Changing(value)
                    Me.RaiseDataMemberChanging("Property1")
                    Me.ValidateProperty("Property1", value)
                    Me._property1 = value
                    Me.RaiseDataMemberChanged("Property1")
                    Me.OnProperty1Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property2' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property2() As String
            Get
                Return Me._property2
            End Get
            Set
                If (String.Equals(Me._property2, value) = false) Then
                    Me.OnProperty2Changing(value)
                    Me.RaiseDataMemberChanging("Property2")
                    Me.ValidateProperty("Property2", value)
                    Me._property2 = value
                    Me.RaiseDataMemberChanged("Property2")
                    Me.OnProperty2Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Property3' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Property3() As String
            Get
                Return Me._property3
            End Get
            Set
                If (String.Equals(Me._property3, value) = false) Then
                    Me.OnProperty3Changing(value)
                    Me.RaiseDataMemberChanging("Property3")
                    Me.ValidateProperty("Property3", value)
                    Me._property3 = value
                    Me.RaiseDataMemberChanged("Property3")
                    Me.OnProperty3Changed
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithNoEntityValidation' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsNamedUpdateWithNoEntityValidationInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("NamedUpdateWithNoEntityValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'NamedUpdateWithNoEntityValidation' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanNamedUpdateWithNoEntityValidation() As Boolean
            Get
                Return MyBase.CanInvokeAction("NamedUpdateWithNoEntityValidation")
            End Get
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._key
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithNoEntityValidation' action on this entity.
        ''' </summary>
        ''' <param name="complexObject">The value to pass to the server method's 'complexObject' parameter.</param>
        <EntityAction("NamedUpdateWithNoEntityValidation", AllowMultipleInvocations:=false)>  _
        Public Sub NamedUpdateWithNoEntityValidation(ByVal complexObject As MockComplexObject2)
            Me.OnNamedUpdateWithNoEntityValidationInvoking(complexObject)
            MyBase.InvokeAction("NamedUpdateWithNoEntityValidation", complexObject)
            Me.OnNamedUpdateWithNoEntityValidationInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The DomainContext corresponding to the 'NamedUpdate_CustomAndUpdate' DomainService.
    ''' </summary>
    Partial Public NotInheritable Class NamedUpdate_CustomAndUpdate
        Inherits DomainContext
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomAndUpdate"/> class.
        ''' </summary>
        Public Sub New()
            Me.New(New Uri("TestDomainServices-NamedUpdates-NamedUpdate_CustomAndUpdate.svc", UriKind.Relative))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomAndUpdate"/> class with the specified service URI.
        ''' </summary>
        ''' <param name="serviceUri">The NamedUpdate_CustomAndUpdate service URI.</param>
        Public Sub New(ByVal serviceUri As Uri)
            Me.New(DomainContext.CreateDomainClient(GetType(INamedUpdate_CustomAndUpdateContract), serviceUri, false))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomAndUpdate"/> class with the specified <paramref name="domainClient"/>.
        ''' </summary>
        ''' <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        Public Sub New(ByVal domainClient As DomainClient)
            MyBase.New(domainClient)
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets the set of <see cref="MockEntity2"/> entity instances that have been loaded into this <see cref="NamedUpdate_CustomAndUpdate"/> instance.
        ''' </summary>
        Public ReadOnly Property MockEntity2s() As EntitySet(Of MockEntity2)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockEntity2)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockEntity2"/> entity instances using the 'GetEntities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockEntity2"/> entity instances.</returns>
        Public Function GetEntitiesQuery() As EntityQuery(Of MockEntity2)
            Me.ValidateMethod("GetEntitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of MockEntity2)("GetEntities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateMethod' method of the specified <see cref="MockEntity2"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MockEntity2"/> entity instance.</param>
        ''' <param name="newProperty1">The value for the 'newProperty1' parameter for this action.</param>
        Public Sub NamedUpdateMethod(ByVal entity As MockEntity2, ByVal newProperty1 As String)
            entity.NamedUpdateMethod(newProperty1)
        End Sub
        
        ''' <summary>
        ''' Creates a new EntityContainer for this DomainContext's EntitySets.
        ''' </summary>
        ''' <returns>A new container instance.</returns>
        Protected Overrides Function CreateEntityContainer() As EntityContainer
            Return New NamedUpdate_CustomAndUpdateEntityContainer()
        End Function
        
        ''' <summary>
        ''' Service contract for the 'NamedUpdate_CustomAndUpdate' DomainService.
        ''' </summary>
        <ServiceContract()>  _
        Public Interface INamedUpdate_CustomAndUpdateContract
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomAndUpdate/GetEntities", ReplyAction:="http://tempuri.org/NamedUpdate_CustomAndUpdate/GetEntitiesResponse")>  _
            Function BeginGetEntities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntities' operation.</returns>
            Function EndGetEntities(ByVal result As IAsyncResult) As QueryResult(Of MockEntity2)
            
            ''' <summary>
            ''' Asynchronously invokes the 'SubmitChanges' operation.
            ''' </summary>
            ''' <param name="changeSet">The change-set to submit.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomAndUpdate/SubmitChanges", ReplyAction:="http://tempuri.org/NamedUpdate_CustomAndUpdate/SubmitChangesResponse")>  _
            Function BeginSubmitChanges(ByVal changeSet As IEnumerable(Of ChangeSetEntry), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            ''' <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            Function EndSubmitChanges(ByVal result As IAsyncResult) As IEnumerable(Of ChangeSetEntry)
        End Interface
        
        Friend NotInheritable Class NamedUpdate_CustomAndUpdateEntityContainer
            Inherits EntityContainer
            
            Public Sub New()
                MyBase.New
                Me.CreateEntitySet(Of MockEntity2)(EntitySetOperations.Edit)
            End Sub
        End Class
    End Class
    
    ''' <summary>
    ''' The DomainContext corresponding to the 'NamedUpdate_CustomOnly' DomainService.
    ''' </summary>
    Partial Public NotInheritable Class NamedUpdate_CustomOnly
        Inherits DomainContext
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomOnly"/> class.
        ''' </summary>
        Public Sub New()
            Me.New(New Uri("TestDomainServices-NamedUpdates-NamedUpdate_CustomOnly.svc", UriKind.Relative))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomOnly"/> class with the specified service URI.
        ''' </summary>
        ''' <param name="serviceUri">The NamedUpdate_CustomOnly service URI.</param>
        Public Sub New(ByVal serviceUri As Uri)
            Me.New(DomainContext.CreateDomainClient(GetType(INamedUpdate_CustomOnlyContract), serviceUri, false))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomOnly"/> class with the specified <paramref name="domainClient"/>.
        ''' </summary>
        ''' <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        Public Sub New(ByVal domainClient As DomainClient)
            MyBase.New(domainClient)
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets the set of <see cref="MockEntity1"/> entity instances that have been loaded into this <see cref="NamedUpdate_CustomOnly"/> instance.
        ''' </summary>
        Public ReadOnly Property MockEntity1s() As EntitySet(Of MockEntity1)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockEntity1)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockEntity1"/> entity instances using the 'GetEntities' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockEntity1"/> entity instances.</returns>
        Public Function GetEntitiesQuery() As EntityQuery(Of MockEntity1)
            Me.ValidateMethod("GetEntitiesQuery", Nothing)
            Return MyBase.CreateQuery(Of MockEntity1)("GetEntities", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateMethod' method of the specified <see cref="MockEntity1"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MockEntity1"/> entity instance.</param>
        ''' <param name="newProperty1">The value for the 'newProperty1' parameter for this action.</param>
        Public Sub NamedUpdateMethod(ByVal entity As MockEntity1, ByVal newProperty1 As String)
            entity.NamedUpdateMethod(newProperty1)
        End Sub
        
        ''' <summary>
        ''' Creates a new EntityContainer for this DomainContext's EntitySets.
        ''' </summary>
        ''' <returns>A new container instance.</returns>
        Protected Overrides Function CreateEntityContainer() As EntityContainer
            Return New NamedUpdate_CustomOnlyEntityContainer()
        End Function
        
        ''' <summary>
        ''' Service contract for the 'NamedUpdate_CustomOnly' DomainService.
        ''' </summary>
        <ServiceContract()>  _
        Public Interface INamedUpdate_CustomOnlyContract
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntities' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomOnly/GetEntities", ReplyAction:="http://tempuri.org/NamedUpdate_CustomOnly/GetEntitiesResponse")>  _
            Function BeginGetEntities(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntities'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntities'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntities' operation.</returns>
            Function EndGetEntities(ByVal result As IAsyncResult) As QueryResult(Of MockEntity1)
            
            ''' <summary>
            ''' Asynchronously invokes the 'SubmitChanges' operation.
            ''' </summary>
            ''' <param name="changeSet">The change-set to submit.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomOnly/SubmitChanges", ReplyAction:="http://tempuri.org/NamedUpdate_CustomOnly/SubmitChangesResponse")>  _
            Function BeginSubmitChanges(ByVal changeSet As IEnumerable(Of ChangeSetEntry), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            ''' <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            Function EndSubmitChanges(ByVal result As IAsyncResult) As IEnumerable(Of ChangeSetEntry)
        End Interface
        
        Friend NotInheritable Class NamedUpdate_CustomOnlyEntityContainer
            Inherits EntityContainer
            
            Public Sub New()
                MyBase.New
                Me.CreateEntitySet(Of MockEntity1)(EntitySetOperations.Edit)
            End Sub
        End Class
    End Class
    
    ''' <summary>
    ''' The DomainContext corresponding to the 'NamedUpdate_CustomValidation' DomainService.
    ''' </summary>
    Partial Public NotInheritable Class NamedUpdate_CustomValidation
        Inherits DomainContext
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomValidation"/> class.
        ''' </summary>
        Public Sub New()
            Me.New(New Uri("TestDomainServices-NamedUpdates-NamedUpdate_CustomValidation.svc", UriKind.Relative))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomValidation"/> class with the specified service URI.
        ''' </summary>
        ''' <param name="serviceUri">The NamedUpdate_CustomValidation service URI.</param>
        Public Sub New(ByVal serviceUri As Uri)
            Me.New(DomainContext.CreateDomainClient(GetType(INamedUpdate_CustomValidationContract), serviceUri, false))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="NamedUpdate_CustomValidation"/> class with the specified <paramref name="domainClient"/>.
        ''' </summary>
        ''' <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        Public Sub New(ByVal domainClient As DomainClient)
            MyBase.New(domainClient)
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets the set of <see cref="MockEntity3"/> entity instances that have been loaded into this <see cref="NamedUpdate_CustomValidation"/> instance.
        ''' </summary>
        Public ReadOnly Property MockEntity3s() As EntitySet(Of MockEntity3)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockEntity3)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MockEntity4"/> entity instances that have been loaded into this <see cref="NamedUpdate_CustomValidation"/> instance.
        ''' </summary>
        Public ReadOnly Property MockEntity4s() As EntitySet(Of MockEntity4)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockEntity4)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MockEntity5"/> entity instances that have been loaded into this <see cref="NamedUpdate_CustomValidation"/> instance.
        ''' </summary>
        Public ReadOnly Property MockEntity5s() As EntitySet(Of MockEntity5)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockEntity5)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MockEntity6"/> entity instances that have been loaded into this <see cref="NamedUpdate_CustomValidation"/> instance.
        ''' </summary>
        Public ReadOnly Property MockEntity6s() As EntitySet(Of MockEntity6)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockEntity6)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockEntity3"/> entity instances using the 'GetEntities3' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockEntity3"/> entity instances.</returns>
        Public Function GetEntities3Query() As EntityQuery(Of MockEntity3)
            Me.ValidateMethod("GetEntities3Query", Nothing)
            Return MyBase.CreateQuery(Of MockEntity3)("GetEntities3", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockEntity4"/> entity instances using the 'GetEntities4' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockEntity4"/> entity instances.</returns>
        Public Function GetEntities4Query() As EntityQuery(Of MockEntity4)
            Me.ValidateMethod("GetEntities4Query", Nothing)
            Return MyBase.CreateQuery(Of MockEntity4)("GetEntities4", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockEntity5"/> entity instances using the 'GetEntities5' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockEntity5"/> entity instances.</returns>
        Public Function GetEntities5Query() As EntityQuery(Of MockEntity5)
            Me.ValidateMethod("GetEntities5Query", Nothing)
            Return MyBase.CreateQuery(Of MockEntity5)("GetEntities5", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockEntity6"/> entity instances using the 'GetEntities6' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockEntity6"/> entity instances.</returns>
        Public Function GetEntities6Query() As EntityQuery(Of MockEntity6)
            Me.ValidateMethod("GetEntities6Query", Nothing)
            Return MyBase.CreateQuery(Of MockEntity6)("GetEntities6", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithParamValidation' method of the specified <see cref="MockEntity3"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MockEntity3"/> entity instance.</param>
        ''' <param name="array">The value for the 'array' parameter for this action.</param>
        ''' <param name="complexObject">The value for the 'complexObject' parameter for this action.</param>
        Public Sub NamedUpdateWithParamValidation(ByVal entity As MockEntity3, ByVal array() As MockComplexObject1, ByVal complexObject As MockComplexObject1)
            entity.NamedUpdateWithParamValidation(array, complexObject)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithPropValidation' method of the specified <see cref="MockEntity3"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MockEntity3"/> entity instance.</param>
        ''' <param name="array">The value for the 'array' parameter for this action.</param>
        ''' <param name="complexObject">The value for the 'complexObject' parameter for this action.</param>
        Public Sub NamedUpdateWithPropValidation(ByVal entity As MockEntity3, ByVal array() As MockComplexObject1, ByVal complexObject As MockComplexObject1)
            entity.NamedUpdateWithPropValidation(array, complexObject)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithTypeValidation' method of the specified <see cref="MockEntity4"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MockEntity4"/> entity instance.</param>
        ''' <param name="array">The value for the 'array' parameter for this action.</param>
        ''' <param name="complexObject">The value for the 'complexObject' parameter for this action.</param>
        Public Sub NamedUpdateWithTypeValidation(ByVal entity As MockEntity4, ByVal array() As MockComplexObject2, ByVal complexObject As MockComplexObject2)
            entity.NamedUpdateWithTypeValidation(array, complexObject)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithCommonProperties' method of the specified <see cref="MockEntity5"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MockEntity5"/> entity instance.</param>
        ''' <param name="complexObject">The value for the 'complexObject' parameter for this action.</param>
        Public Sub NamedUpdateWithCommonProperties(ByVal entity As MockEntity5, ByVal complexObject As MockComplexObject3)
            entity.NamedUpdateWithCommonProperties(complexObject)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'NamedUpdateWithNoEntityValidation' method of the specified <see cref="MockEntity6"/> entity.
        ''' </summary>
        ''' <param name="entity">The <see cref="MockEntity6"/> entity instance.</param>
        ''' <param name="complexObject">The value for the 'complexObject' parameter for this action.</param>
        Public Sub NamedUpdateWithNoEntityValidation(ByVal entity As MockEntity6, ByVal complexObject As MockComplexObject2)
            entity.NamedUpdateWithNoEntityValidation(complexObject)
        End Sub
        
        ''' <summary>
        ''' Creates a new EntityContainer for this DomainContext's EntitySets.
        ''' </summary>
        ''' <returns>A new container instance.</returns>
        Protected Overrides Function CreateEntityContainer() As EntityContainer
            Return New NamedUpdate_CustomValidationEntityContainer()
        End Function
        
        ''' <summary>
        ''' Service contract for the 'NamedUpdate_CustomValidation' DomainService.
        ''' </summary>
        <ServiceContract(),  _
         ServiceKnownType(GetType(Global.TestDomainServices.NamedUpdates.MockComplexObject3)),  _
         ServiceKnownType(GetType(Global.TestDomainServices.NamedUpdates.MockComplexObject2)),  _
         ServiceKnownType(GetType(TestDomainServices.NamedUpdates.MockComplexObject1())),  _
         ServiceKnownType(GetType(Global.TestDomainServices.NamedUpdates.MockComplexObject1)),  _
         ServiceKnownType(GetType(TestDomainServices.NamedUpdates.MockComplexObject2()))>  _
        Public Interface INamedUpdate_CustomValidationContract
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntities3' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities3", ReplyAction:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities3Response")>  _
            Function BeginGetEntities3(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntities3'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntities3'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntities3' operation.</returns>
            Function EndGetEntities3(ByVal result As IAsyncResult) As QueryResult(Of MockEntity3)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntities4' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities4", ReplyAction:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities4Response")>  _
            Function BeginGetEntities4(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntities4'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntities4'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntities4' operation.</returns>
            Function EndGetEntities4(ByVal result As IAsyncResult) As QueryResult(Of MockEntity4)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntities5' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities5", ReplyAction:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities5Response")>  _
            Function BeginGetEntities5(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntities5'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntities5'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntities5' operation.</returns>
            Function EndGetEntities5(ByVal result As IAsyncResult) As QueryResult(Of MockEntity5)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetEntities6' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities6", ReplyAction:="http://tempuri.org/NamedUpdate_CustomValidation/GetEntities6Response")>  _
            Function BeginGetEntities6(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetEntities6'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetEntities6'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetEntities6' operation.</returns>
            Function EndGetEntities6(ByVal result As IAsyncResult) As QueryResult(Of MockEntity6)
            
            ''' <summary>
            ''' Asynchronously invokes the 'SubmitChanges' operation.
            ''' </summary>
            ''' <param name="changeSet">The change-set to submit.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/NamedUpdate_CustomValidation/SubmitChanges", ReplyAction:="http://tempuri.org/NamedUpdate_CustomValidation/SubmitChangesResponse")>  _
            Function BeginSubmitChanges(ByVal changeSet As IEnumerable(Of ChangeSetEntry), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            ''' <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            Function EndSubmitChanges(ByVal result As IAsyncResult) As IEnumerable(Of ChangeSetEntry)
        End Interface
        
        Friend NotInheritable Class NamedUpdate_CustomValidationEntityContainer
            Inherits EntityContainer
            
            Public Sub New()
                MyBase.New
                Me.CreateEntitySet(Of MockEntity3)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of MockEntity4)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of MockEntity5)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of MockEntity6)(EntitySetOperations.Edit)
            End Sub
        End Class
    End Class
End Namespace

Namespace TestDomainServices.Saleãƒ†
    
    ''' <summary>
    ''' The 'EntityWithSpecialTypeName' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices.Sale%E3%83%86")>  _
    Partial Public NotInheritable Class EntityWithSpecialTypeName
        Inherits Entity
        
        Private _data As String
        
        Private _id As Integer
        
        Private _ignoredData As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnDataChanged()
        End Sub
        Private Partial Sub OnIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnIdChanged()
        End Sub
        Private Partial Sub OnIgnoredDataChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnIgnoredDataChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="EntityWithSpecialTypeName"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Data' value.
        ''' </summary>
        <DataMember()>  _
        Public Property Data() As String
            Get
                Return Me._data
            End Get
            Set
                If (String.Equals(Me._data, value) = false) Then
                    Me.OnDataChanging(value)
                    Me.RaiseDataMemberChanging("Data")
                    Me.ValidateProperty("Data", value)
                    Me._data = value
                    Me.RaiseDataMemberChanged("Data")
                    Me.OnDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Id' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property Id() As Integer
            Get
                Return Me._id
            End Get
            Set
                If ((Me._id = value)  _
                            = false) Then
                    Me.OnIdChanging(value)
                    Me.ValidateProperty("Id", value)
                    Me._id = value
                    Me.RaisePropertyChanged("Id")
                    Me.OnIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'IgnoredData' value.
        ''' </summary>
        <DataMember()>  _
        Public Property IgnoredData() As String
            Get
                Return Me._ignoredData
            End Get
            Set
                If (String.Equals(Me._ignoredData, value) = false) Then
                    Me.OnIgnoredDataChanging(value)
                    Me.RaiseDataMemberChanging("IgnoredData")
                    Me.ValidateProperty("IgnoredData", value)
                    Me._ignoredData = value
                    Me.RaiseDataMemberChanged("IgnoredData")
                    Me.OnIgnoredDataChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._id
        End Function
    End Class
End Namespace
