//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestDomainServices
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.Threading.Tasks;
    using OpenRiaServices;
    using OpenRiaServices.Client;
    using OpenRiaServices.Client.Authentication;
    
    
    /// <summary>
    /// The 'AI_Detail' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    [KnownType(typeof(AI_DetailDerived1))]
    [KnownType(typeof(AI_DetailDerived2))]
    [KnownType(typeof(AI_DetailDerived3))]
    [KnownType(typeof(AI_DetailDerived4))]
    public abstract partial class AI_Detail : Entity
    {
        
        private int _id;
        
        private int _masterID;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnMasterIDChanging(int value);
        partial void OnMasterIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AI_Detail"/> class.
        /// </summary>
        protected AI_Detail()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'MasterID' value.
        /// </summary>
        [DataMember()]
        public int MasterID
        {
            get
            {
                return this._masterID;
            }
            set
            {
                if ((this._masterID != value))
                {
                    this.OnMasterIDChanging(value);
                    this.RaiseDataMemberChanging("MasterID");
                    this.ValidateProperty("MasterID", value);
                    this._masterID = value;
                    this.RaiseDataMemberChanged("MasterID");
                    this.OnMasterIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'AI_DetailDerived1' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    public sealed partial class AI_DetailDerived1 : AI_Detail
    {
        
        private EntityRef<AI_MasterDerived> _master;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AI_DetailDerived1"/> class.
        /// </summary>
        public AI_DetailDerived1()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="AI_MasterDerived"/> entity.
        /// </summary>
        [Association("Master_to_Derived1_Many", "MasterID", "ID", IsForeignKey=true)]
        public AI_MasterDerived Master
        {
            get
            {
                if ((this._master == null))
                {
                    this._master = new EntityRef<AI_MasterDerived>(this, "Master", this.FilterMaster);
                }
                return this._master.Entity;
            }
            set
            {
                AI_MasterDerived previous = this.Master;
                if ((previous != value))
                {
                    this.ValidateProperty("Master", value);
                    if ((previous != null))
                    {
                        this._master.Entity = null;
                        previous.DetailDerived1s.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.MasterID = value.ID;
                    }
                    else
                    {
                        this.MasterID = default(int);
                    }
                    this._master.Entity = value;
                    if ((value != null))
                    {
                        value.DetailDerived1s.Add(this);
                    }
                    this.RaisePropertyChanged("Master");
                }
            }
        }
        
        private bool FilterMaster(AI_MasterDerived entity)
        {
            return (entity.ID == this.MasterID);
        }
    }
    
    /// <summary>
    /// The 'AI_DetailDerived2' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    public sealed partial class AI_DetailDerived2 : AI_Detail
    {
        
        private EntityRef<AI_MasterDerived> _master;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AI_DetailDerived2"/> class.
        /// </summary>
        public AI_DetailDerived2()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="AI_MasterDerived"/> entity.
        /// </summary>
        [Association("Master_to_Derived2_Many", "MasterID", "ID", IsForeignKey=true)]
        public AI_MasterDerived Master
        {
            get
            {
                if ((this._master == null))
                {
                    this._master = new EntityRef<AI_MasterDerived>(this, "Master", this.FilterMaster);
                }
                return this._master.Entity;
            }
            set
            {
                AI_MasterDerived previous = this.Master;
                if ((previous != value))
                {
                    this.ValidateProperty("Master", value);
                    if ((previous != null))
                    {
                        this._master.Entity = null;
                        previous.DetailDerived2s.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.MasterID = value.ID;
                    }
                    else
                    {
                        this.MasterID = default(int);
                    }
                    this._master.Entity = value;
                    if ((value != null))
                    {
                        value.DetailDerived2s.Add(this);
                    }
                    this.RaisePropertyChanged("Master");
                }
            }
        }
        
        private bool FilterMaster(AI_MasterDerived entity)
        {
            return (entity.ID == this.MasterID);
        }
    }
    
    /// <summary>
    /// The 'AI_DetailDerived3' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    public sealed partial class AI_DetailDerived3 : AI_Detail
    {
        
        private EntityRef<AI_MasterDerived> _master;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AI_DetailDerived3"/> class.
        /// </summary>
        public AI_DetailDerived3()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="AI_MasterDerived"/> entity.
        /// </summary>
        [Association("Master_to_Derived3_One", "MasterID", "ID", IsForeignKey=true)]
        public AI_MasterDerived Master
        {
            get
            {
                if ((this._master == null))
                {
                    this._master = new EntityRef<AI_MasterDerived>(this, "Master", this.FilterMaster);
                }
                return this._master.Entity;
            }
            set
            {
                AI_MasterDerived previous = this.Master;
                if ((previous != value))
                {
                    this.ValidateProperty("Master", value);
                    if ((previous != null))
                    {
                        this._master.Entity = null;
                        previous.DetailDerived3 = null;
                    }
                    if ((value != null))
                    {
                        this.MasterID = value.ID;
                    }
                    else
                    {
                        this.MasterID = default(int);
                    }
                    this._master.Entity = value;
                    if ((value != null))
                    {
                        value.DetailDerived3 = this;
                    }
                    this.RaisePropertyChanged("Master");
                }
            }
        }
        
        private bool FilterMaster(AI_MasterDerived entity)
        {
            return (entity.ID == this.MasterID);
        }
    }
    
    /// <summary>
    /// The 'AI_DetailDerived4' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    public sealed partial class AI_DetailDerived4 : AI_Detail
    {
        
        private EntityRef<AI_MasterDerived> _master;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AI_DetailDerived4"/> class.
        /// </summary>
        public AI_DetailDerived4()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="AI_MasterDerived"/> entity.
        /// </summary>
        [Association("Master_to_Derived4_One", "MasterID", "ID", IsForeignKey=true)]
        public AI_MasterDerived Master
        {
            get
            {
                if ((this._master == null))
                {
                    this._master = new EntityRef<AI_MasterDerived>(this, "Master", this.FilterMaster);
                }
                return this._master.Entity;
            }
            set
            {
                AI_MasterDerived previous = this.Master;
                if ((previous != value))
                {
                    this.ValidateProperty("Master", value);
                    if ((previous != null))
                    {
                        this._master.Entity = null;
                        previous.DetailDerived4 = null;
                    }
                    if ((value != null))
                    {
                        this.MasterID = value.ID;
                    }
                    else
                    {
                        this.MasterID = default(int);
                    }
                    this._master.Entity = value;
                    if ((value != null))
                    {
                        value.DetailDerived4 = this;
                    }
                    this.RaisePropertyChanged("Master");
                }
            }
        }
        
        private bool FilterMaster(AI_MasterDerived entity)
        {
            return (entity.ID == this.MasterID);
        }
    }
    
    /// <summary>
    /// The 'AI_Master' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    [KnownType(typeof(AI_MasterDerived))]
    public abstract partial class AI_Master : Entity
    {
        
        private int _id;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AI_Master"/> class.
        /// </summary>
        protected AI_Master()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
    }
    
    /// <summary>
    /// The 'AI_MasterDerived' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    public sealed partial class AI_MasterDerived : AI_Master
    {
        
        private EntityCollection<AI_DetailDerived1> _detailDerived1s;
        
        private EntityCollection<AI_DetailDerived2> _detailDerived2s;
        
        private EntityRef<AI_DetailDerived3> _detailDerived3;
        
        private EntityRef<AI_DetailDerived4> _detailDerived4;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AI_MasterDerived"/> class.
        /// </summary>
        public AI_MasterDerived()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="AI_DetailDerived1"/> entity instances.
        /// </summary>
        [Association("Master_to_Derived1_Many", "ID", "MasterID")]
        public EntityCollection<AI_DetailDerived1> DetailDerived1s
        {
            get
            {
                if ((this._detailDerived1s == null))
                {
                    this._detailDerived1s = new EntityCollection<AI_DetailDerived1>(this, "DetailDerived1s", this.FilterDetailDerived1s, this.AttachDetailDerived1s, this.DetachDetailDerived1s);
                }
                return this._detailDerived1s;
            }
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="AI_DetailDerived2"/> entity instances.
        /// </summary>
        [Association("Master_to_Derived2_Many", "ID", "MasterID")]
        public EntityCollection<AI_DetailDerived2> DetailDerived2s
        {
            get
            {
                if ((this._detailDerived2s == null))
                {
                    this._detailDerived2s = new EntityCollection<AI_DetailDerived2>(this, "DetailDerived2s", this.FilterDetailDerived2s, this.AttachDetailDerived2s, this.DetachDetailDerived2s);
                }
                return this._detailDerived2s;
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="AI_DetailDerived3"/> entity.
        /// </summary>
        [Association("Master_to_Derived3_One", "ID", "MasterID")]
        public AI_DetailDerived3 DetailDerived3
        {
            get
            {
                if ((this._detailDerived3 == null))
                {
                    this._detailDerived3 = new EntityRef<AI_DetailDerived3>(this, "DetailDerived3", this.FilterDetailDerived3);
                }
                return this._detailDerived3.Entity;
            }
            set
            {
                AI_DetailDerived3 previous = this.DetailDerived3;
                if ((previous != value))
                {
                    this.ValidateProperty("DetailDerived3", value);
                    if ((previous != null))
                    {
                        this._detailDerived3.Entity = null;
                        previous.Master = null;
                    }
                    this._detailDerived3.Entity = value;
                    if ((value != null))
                    {
                        value.Master = this;
                    }
                    this.RaisePropertyChanged("DetailDerived3");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="AI_DetailDerived4"/> entity.
        /// </summary>
        [Association("Master_to_Derived4_One", "ID", "MasterID")]
        public AI_DetailDerived4 DetailDerived4
        {
            get
            {
                if ((this._detailDerived4 == null))
                {
                    this._detailDerived4 = new EntityRef<AI_DetailDerived4>(this, "DetailDerived4", this.FilterDetailDerived4);
                }
                return this._detailDerived4.Entity;
            }
            set
            {
                AI_DetailDerived4 previous = this.DetailDerived4;
                if ((previous != value))
                {
                    this.ValidateProperty("DetailDerived4", value);
                    if ((previous != null))
                    {
                        this._detailDerived4.Entity = null;
                        previous.Master = null;
                    }
                    this._detailDerived4.Entity = value;
                    if ((value != null))
                    {
                        value.Master = this;
                    }
                    this.RaisePropertyChanged("DetailDerived4");
                }
            }
        }
        
        private void AttachDetailDerived1s(AI_DetailDerived1 entity)
        {
            entity.Master = this;
        }
        
        private void DetachDetailDerived1s(AI_DetailDerived1 entity)
        {
            entity.Master = null;
        }
        
        private bool FilterDetailDerived1s(AI_DetailDerived1 entity)
        {
            return (entity.MasterID == this.ID);
        }
        
        private void AttachDetailDerived2s(AI_DetailDerived2 entity)
        {
            entity.Master = this;
        }
        
        private void DetachDetailDerived2s(AI_DetailDerived2 entity)
        {
            entity.Master = null;
        }
        
        private bool FilterDetailDerived2s(AI_DetailDerived2 entity)
        {
            return (entity.MasterID == this.ID);
        }
        
        private bool FilterDetailDerived3(AI_DetailDerived3 entity)
        {
            return (entity.MasterID == this.ID);
        }
        
        private bool FilterDetailDerived4(AI_DetailDerived4 entity)
        {
            return (entity.MasterID == this.ID);
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'AssociationInheritanceScenarios' DomainService.
    /// </summary>
    public sealed partial class AssociationInheritanceScenarios : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AssociationInheritanceScenarios"/> class.
        /// </summary>
        public AssociationInheritanceScenarios() : 
                this(new Uri("TestDomainServices-AssociationInheritanceScenarios.svc", UriKind.Relative))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AssociationInheritanceScenarios"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The AssociationInheritanceScenarios service URI.</param>
        public AssociationInheritanceScenarios(Uri serviceUri) : 
                this(DomainContext.CreateDomainClient(typeof(IAssociationInheritanceScenariosContract), serviceUri, false))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="AssociationInheritanceScenarios"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public AssociationInheritanceScenarios(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="AI_Detail"/> entity instances that have been loaded into this <see cref="AssociationInheritanceScenarios"/> instance.
        /// </summary>
        public EntitySet<AI_Detail> AI_Details
        {
            get
            {
                return base.EntityContainer.GetEntitySet<AI_Detail>();
            }
        }
        
        /// <summary>
        /// Gets the set of <see cref="AI_Master"/> entity instances that have been loaded into this <see cref="AssociationInheritanceScenarios"/> instance.
        /// </summary>
        public EntitySet<AI_Master> AI_Masters
        {
            get
            {
                return base.EntityContainer.GetEntitySet<AI_Master>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="AI_Detail"/> entity instances using the 'GetDetails' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="AI_Detail"/> entity instances.</returns>
        public EntityQuery<AI_Detail> GetDetailsQuery()
        {
            this.ValidateMethod("GetDetailsQuery", null);
            return base.CreateQuery<AI_Detail>("GetDetails", null, false, true);
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="AI_Master"/> entity instances using the 'GetMasters' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="AI_Master"/> entity instances.</returns>
        public EntityQuery<AI_Master> GetMastersQuery()
        {
            this.ValidateMethod("GetMastersQuery", null);
            return base.CreateQuery<AI_Master>("GetMasters", null, false, true);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new AssociationInheritanceScenariosEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'AssociationInheritanceScenarios' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface IAssociationInheritanceScenariosContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetDetails' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [HasSideEffects(false)]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AssociationInheritanceScenarios/GetDetails", ReplyAction="http://tempuri.org/AssociationInheritanceScenarios/GetDetailsResponse")]
            IAsyncResult BeginGetDetails(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetDetails'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetDetails'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetDetails' operation.</returns>
            QueryResult<AI_Detail> EndGetDetails(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'GetMasters' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [HasSideEffects(false)]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AssociationInheritanceScenarios/GetMasters", ReplyAction="http://tempuri.org/AssociationInheritanceScenarios/GetMastersResponse")]
            IAsyncResult BeginGetMasters(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetMasters'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetMasters'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetMasters' operation.</returns>
            QueryResult<AI_Master> EndGetMasters(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/AssociationInheritanceScenarios/SubmitChanges", ReplyAction="http://tempuri.org/AssociationInheritanceScenarios/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class AssociationInheritanceScenariosEntityContainer : EntityContainer
        {
            
            public AssociationInheritanceScenariosEntityContainer()
            {
                this.CreateEntitySet<AI_Detail>(EntitySetOperations.All);
                this.CreateEntitySet<AI_Master>(EntitySetOperations.All);
            }
        }
    }
    
    /// <summary>
    /// The 'CI_AdoptedChild' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    public sealed partial class CI_AdoptedChild : CI_Child
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnCustomOp_AdoptedChildInvoking();
        partial void OnCustomOp_AdoptedChildInvoked();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CI_AdoptedChild"/> class.
        /// </summary>
        public CI_AdoptedChild()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets a value indicating whether the 'CustomOp_AdoptedChild' action has been invoked on this entity.
        /// </summary>
        [Display(AutoGenerateField=false)]
        public bool IsCustomOp_AdoptedChildInvoked
        {
            get
            {
                return base.IsActionInvoked("CustomOp_AdoptedChild");
            }
        }
        
        /// <summary>
        /// Gets a value indicating whether the 'CustomOp_AdoptedChild' method can be invoked on this entity.
        /// </summary>
        [Display(AutoGenerateField=false)]
        public bool CanCustomOp_AdoptedChild
        {
            get
            {
                return base.CanInvokeAction("CustomOp_AdoptedChild");
            }
        }
        
        /// <summary>
        /// Invokes the 'CustomOp_AdoptedChild' action on this entity.
        /// </summary>
        [EntityAction("CustomOp_AdoptedChild", AllowMultipleInvocations=false)]
        public void CustomOp_AdoptedChild()
        {
            this.OnCustomOp_AdoptedChildInvoking();
            base.InvokeAction("CustomOp_AdoptedChild");
            this.OnCustomOp_AdoptedChildInvoked();
        }
    }
    
    /// <summary>
    /// The 'CI_Child' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    [KnownType(typeof(CI_AdoptedChild))]
    public partial class CI_Child : Entity
    {
        
        private int _age;
        
        private int _id;
        
        private string _operationResult;
        
        private EntityRef<CI_Parent> _parent;
        
        private int _parentID;
        
        private string _property;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnAgeChanging(int value);
        partial void OnAgeChanged();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnOperationResultChanging(string value);
        partial void OnOperationResultChanged();
        partial void OnParentIDChanging(int value);
        partial void OnParentIDChanged();
        partial void OnPropertyChanging(string value);
        partial void OnPropertyChanged();
        partial void OnCustomOp_ChildInvoking();
        partial void OnCustomOp_ChildInvoked();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CI_Child"/> class.
        /// </summary>
        public CI_Child()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Age' value.
        /// </summary>
        [DataMember()]
        public int Age
        {
            get
            {
                return this._age;
            }
            set
            {
                if ((this._age != value))
                {
                    this.OnAgeChanging(value);
                    this.RaiseDataMemberChanging("Age");
                    this.ValidateProperty("Age", value);
                    this._age = value;
                    this.RaiseDataMemberChanged("Age");
                    this.OnAgeChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OperationResult' value.
        /// </summary>
        [DataMember()]
        public string OperationResult
        {
            get
            {
                return this._operationResult;
            }
            set
            {
                if ((this._operationResult != value))
                {
                    this.OnOperationResultChanging(value);
                    this.RaiseDataMemberChanging("OperationResult");
                    this.ValidateProperty("OperationResult", value);
                    this._operationResult = value;
                    this.RaiseDataMemberChanged("OperationResult");
                    this.OnOperationResultChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the associated <see cref="CI_Parent"/> entity.
        /// </summary>
        [Association("Child_Parent", "ParentID", "ID", IsForeignKey=true)]
        public CI_Parent Parent
        {
            get
            {
                if ((this._parent == null))
                {
                    this._parent = new EntityRef<CI_Parent>(this, "Parent", this.FilterParent);
                }
                return this._parent.Entity;
            }
            set
            {
                CI_Parent previous = this.Parent;
                if ((previous != value))
                {
                    this.ValidateProperty("Parent", value);
                    if ((previous != null))
                    {
                        this._parent.Entity = null;
                        previous.Children.Remove(this);
                    }
                    if ((value != null))
                    {
                        this.ParentID = value.ID;
                    }
                    else
                    {
                        this.ParentID = default(int);
                    }
                    this._parent.Entity = value;
                    if ((value != null))
                    {
                        value.Children.Add(this);
                    }
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ParentID' value.
        /// </summary>
        [DataMember()]
        [RoundtripOriginal()]
        public int ParentID
        {
            get
            {
                return this._parentID;
            }
            set
            {
                if ((this._parentID != value))
                {
                    this.OnParentIDChanging(value);
                    this.RaiseDataMemberChanging("ParentID");
                    this.ValidateProperty("ParentID", value);
                    this._parentID = value;
                    this.RaiseDataMemberChanged("ParentID");
                    this.OnParentIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Property' value.
        /// </summary>
        [DataMember()]
        public string Property
        {
            get
            {
                return this._property;
            }
            set
            {
                if ((this._property != value))
                {
                    this.OnPropertyChanging(value);
                    this.RaiseDataMemberChanging("Property");
                    this.ValidateProperty("Property", value);
                    this._property = value;
                    this.RaiseDataMemberChanged("Property");
                    this.OnPropertyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets a value indicating whether the 'CustomOp_Child' action has been invoked on this entity.
        /// </summary>
        [Display(AutoGenerateField=false)]
        public bool IsCustomOp_ChildInvoked
        {
            get
            {
                return base.IsActionInvoked("CustomOp_Child");
            }
        }
        
        /// <summary>
        /// Gets a value indicating whether the 'CustomOp_Child' method can be invoked on this entity.
        /// </summary>
        [Display(AutoGenerateField=false)]
        public bool CanCustomOp_Child
        {
            get
            {
                return base.CanInvokeAction("CustomOp_Child");
            }
        }
        
        private bool FilterParent(CI_Parent entity)
        {
            return (entity.ID == this.ParentID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
        
        /// <summary>
        /// Invokes the 'CustomOp_Child' action on this entity.
        /// </summary>
        [EntityAction("CustomOp_Child", AllowMultipleInvocations=false)]
        public void CustomOp_Child()
        {
            this.OnCustomOp_ChildInvoking();
            base.InvokeAction("CustomOp_Child");
            this.OnCustomOp_ChildInvoked();
        }
    }
    
    /// <summary>
    /// The 'CI_Parent' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    [KnownType(typeof(CI_SpecialParent))]
    public partial class CI_Parent : Entity
    {
        
        private EntityCollection<CI_Child> _children;
        
        private int _id;
        
        private string _operationResult;
        
        private string _property;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnIDChanging(int value);
        partial void OnIDChanged();
        partial void OnOperationResultChanging(string value);
        partial void OnOperationResultChanged();
        partial void OnPropertyChanging(string value);
        partial void OnPropertyChanged();
        partial void OnCustomOp_ParentInvoking();
        partial void OnCustomOp_ParentInvoked();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CI_Parent"/> class.
        /// </summary>
        public CI_Parent()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the collection of associated <see cref="CI_Child"/> entity instances.
        /// </summary>
        [Association("Child_Parent", "ID", "ParentID")]
        [Composition()]
        public EntityCollection<CI_Child> Children
        {
            get
            {
                if ((this._children == null))
                {
                    this._children = new EntityCollection<CI_Child>(this, "Children", this.FilterChildren, this.AttachChildren, this.DetachChildren);
                }
                return this._children;
            }
        }
        
        /// <summary>
        /// Gets or sets the 'ID' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int ID
        {
            get
            {
                return this._id;
            }
            set
            {
                if ((this._id != value))
                {
                    this.OnIDChanging(value);
                    this.ValidateProperty("ID", value);
                    this._id = value;
                    this.RaisePropertyChanged("ID");
                    this.OnIDChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'OperationResult' value.
        /// </summary>
        [DataMember()]
        public string OperationResult
        {
            get
            {
                return this._operationResult;
            }
            set
            {
                if ((this._operationResult != value))
                {
                    this.OnOperationResultChanging(value);
                    this.RaiseDataMemberChanging("OperationResult");
                    this.ValidateProperty("OperationResult", value);
                    this._operationResult = value;
                    this.RaiseDataMemberChanged("OperationResult");
                    this.OnOperationResultChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'Property' value.
        /// </summary>
        [DataMember()]
        public string Property
        {
            get
            {
                return this._property;
            }
            set
            {
                if ((this._property != value))
                {
                    this.OnPropertyChanging(value);
                    this.RaiseDataMemberChanging("Property");
                    this.ValidateProperty("Property", value);
                    this._property = value;
                    this.RaiseDataMemberChanged("Property");
                    this.OnPropertyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets a value indicating whether the 'CustomOp_Parent' action has been invoked on this entity.
        /// </summary>
        [Display(AutoGenerateField=false)]
        public bool IsCustomOp_ParentInvoked
        {
            get
            {
                return base.IsActionInvoked("CustomOp_Parent");
            }
        }
        
        /// <summary>
        /// Gets a value indicating whether the 'CustomOp_Parent' method can be invoked on this entity.
        /// </summary>
        [Display(AutoGenerateField=false)]
        public bool CanCustomOp_Parent
        {
            get
            {
                return base.CanInvokeAction("CustomOp_Parent");
            }
        }
        
        private void AttachChildren(CI_Child entity)
        {
            entity.Parent = this;
        }
        
        private void DetachChildren(CI_Child entity)
        {
            entity.Parent = null;
        }
        
        private bool FilterChildren(CI_Child entity)
        {
            return (entity.ParentID == this.ID);
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._id;
        }
        
        /// <summary>
        /// Invokes the 'CustomOp_Parent' action on this entity.
        /// </summary>
        [EntityAction("CustomOp_Parent", AllowMultipleInvocations=false)]
        public void CustomOp_Parent()
        {
            this.OnCustomOp_ParentInvoking();
            base.InvokeAction("CustomOp_Parent");
            this.OnCustomOp_ParentInvoked();
        }
    }
    
    /// <summary>
    /// The 'CI_SpecialParent' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/TestDomainServices")]
    public sealed partial class CI_SpecialParent : CI_Parent
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CI_SpecialParent"/> class.
        /// </summary>
        public CI_SpecialParent()
        {
            this.OnCreated();
        }
    }
    
    /// <summary>
    /// The DomainContext corresponding to the 'CompositionInheritanceScenarios' DomainService.
    /// </summary>
    public sealed partial class CompositionInheritanceScenarios : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CompositionInheritanceScenarios"/> class.
        /// </summary>
        public CompositionInheritanceScenarios() : 
                this(new Uri("TestDomainServices-CompositionInheritanceScenarios.svc", UriKind.Relative))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CompositionInheritanceScenarios"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The CompositionInheritanceScenarios service URI.</param>
        public CompositionInheritanceScenarios(Uri serviceUri) : 
                this(DomainContext.CreateDomainClient(typeof(ICompositionInheritanceScenariosContract), serviceUri, false))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="CompositionInheritanceScenarios"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public CompositionInheritanceScenarios(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="CI_Parent"/> entity instances that have been loaded into this <see cref="CompositionInheritanceScenarios"/> instance.
        /// </summary>
        public EntitySet<CI_Parent> CI_Parents
        {
            get
            {
                return base.EntityContainer.GetEntitySet<CI_Parent>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="CI_Parent"/> entity instances using the 'GetParents' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="CI_Parent"/> entity instances.</returns>
        public EntityQuery<CI_Parent> GetParentsQuery()
        {
            this.ValidateMethod("GetParentsQuery", null);
            return base.CreateQuery<CI_Parent>("GetParents", null, false, true);
        }
        
        /// <summary>
        /// Invokes the 'CustomOp_AdoptedChild' method of the specified <see cref="CI_AdoptedChild"/> entity.
        /// </summary>
        /// <param name="child">The <see cref="CI_AdoptedChild"/> entity instance.</param>
        public void CustomOp_AdoptedChild(CI_AdoptedChild child)
        {
            child.CustomOp_AdoptedChild();
        }
        
        /// <summary>
        /// Invokes the 'CustomOp_Child' method of the specified <see cref="CI_Child"/> entity.
        /// </summary>
        /// <param name="child">The <see cref="CI_Child"/> entity instance.</param>
        public void CustomOp_Child(CI_Child child)
        {
            child.CustomOp_Child();
        }
        
        /// <summary>
        /// Invokes the 'CustomOp_Parent' method of the specified <see cref="CI_Parent"/> entity.
        /// </summary>
        /// <param name="parent">The <see cref="CI_Parent"/> entity instance.</param>
        public void CustomOp_Parent(CI_Parent parent)
        {
            parent.CustomOp_Parent();
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new CompositionInheritanceScenariosEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'CompositionInheritanceScenarios' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface ICompositionInheritanceScenariosContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetParents' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [HasSideEffects(false)]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/CompositionInheritanceScenarios/GetParents", ReplyAction="http://tempuri.org/CompositionInheritanceScenarios/GetParentsResponse")]
            IAsyncResult BeginGetParents(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetParents'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetParents'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetParents' operation.</returns>
            QueryResult<CI_Parent> EndGetParents(IAsyncResult result);
            
            /// <summary>
            /// Asynchronously invokes the 'SubmitChanges' operation.
            /// </summary>
            /// <param name="changeSet">The change-set to submit.</param>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/CompositionInheritanceScenarios/SubmitChanges", ReplyAction="http://tempuri.org/CompositionInheritanceScenarios/SubmitChangesResponse")]
            IAsyncResult BeginSubmitChanges(IEnumerable<ChangeSetEntry> changeSet, AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            /// <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            IEnumerable<ChangeSetEntry> EndSubmitChanges(IAsyncResult result);
        }
        
        internal sealed class CompositionInheritanceScenariosEntityContainer : EntityContainer
        {
            
            public CompositionInheritanceScenariosEntityContainer()
            {
                this.CreateEntitySet<CI_Child>(EntitySetOperations.All);
                this.CreateEntitySet<CI_Parent>(EntitySetOperations.All);
            }
        }
    }
}
