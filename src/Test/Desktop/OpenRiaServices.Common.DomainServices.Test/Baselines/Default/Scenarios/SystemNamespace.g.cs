//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace System
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.Subsystem;
    using System.Threading.Tasks;
    using OpenRiaServices;
    using OpenRiaServices.Client;
    using OpenRiaServices.Client.Authentication;
    
    
    /// <summary>
    /// The DomainContext corresponding to the 'SystemDomainService' DomainService.
    /// </summary>
    public sealed partial class SystemDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemDomainContext"/> class.
        /// </summary>
        public SystemDomainContext() : 
                this(new Uri("System-SystemDomainService.svc", UriKind.Relative))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemDomainContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The SystemDomainService service URI.</param>
        public SystemDomainContext(Uri serviceUri) : 
                this(DomainContext.CreateDomainClient(typeof(ISystemDomainServiceContract), serviceUri, false))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemDomainContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public SystemDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="SystemEntity"/> entity instances that have been loaded into this <see cref="SystemDomainContext"/> instance.
        /// </summary>
        public EntitySet<SystemEntity> SystemEntities
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SystemEntity>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SystemEntity"/> entity instances using the 'GetSystemEntities' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SystemEntity"/> entity instances.</returns>
        public EntityQuery<SystemEntity> GetSystemEntitiesQuery()
        {
            this.ValidateMethod("GetSystemEntitiesQuery", null);
            return base.CreateQuery<SystemEntity>("GetSystemEntities", null, false, true);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new SystemDomainContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'SystemDomainService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface ISystemDomainServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetSystemEntities' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [HasSideEffects(false)]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/SystemDomainService/GetSystemEntities", ReplyAction="http://tempuri.org/SystemDomainService/GetSystemEntitiesResponse")]
            IAsyncResult BeginGetSystemEntities(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSystemEntities'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSystemEntities'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSystemEntities' operation.</returns>
            QueryResult<SystemEntity> EndGetSystemEntities(IAsyncResult result);
        }
        
        internal sealed class SystemDomainContextEntityContainer : EntityContainer
        {
            
            public SystemDomainContextEntityContainer()
            {
                this.CreateEntitySet<SystemEntity>(EntitySetOperations.None);
            }
        }
    }
    
    /// <summary>
    /// The 'SystemEntity' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/System")]
    [SystemNamespace()]
    public sealed partial class SystemEntity : Entity
    {
        
        private int _key;
        
        private SubsystemEnum _subsystemEnum;
        
        private SystemEnum _systemEnum;
        
        private SystemGeneratedEnum _systemGeneratedEnum;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnKeyChanging(int value);
        partial void OnKeyChanged();
        partial void OnSubsystemEnumChanging(SubsystemEnum value);
        partial void OnSubsystemEnumChanged();
        partial void OnSystemEnumChanging(SystemEnum value);
        partial void OnSystemEnumChanged();
        partial void OnSystemGeneratedEnumChanging(SystemGeneratedEnum value);
        partial void OnSystemGeneratedEnumChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemEntity"/> class.
        /// </summary>
        public SystemEntity()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Key' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Key
        {
            get
            {
                return this._key;
            }
            set
            {
                if ((this._key != value))
                {
                    this.OnKeyChanging(value);
                    this.ValidateProperty("Key", value);
                    this._key = value;
                    this.RaisePropertyChanged("Key");
                    this.OnKeyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubsystemEnum' value.
        /// </summary>
        [DataMember()]
        [SubsystemNamespace()]
        public SubsystemEnum SubsystemEnum
        {
            get
            {
                return this._subsystemEnum;
            }
            set
            {
                if ((this._subsystemEnum != value))
                {
                    this.OnSubsystemEnumChanging(value);
                    this.RaiseDataMemberChanging("SubsystemEnum");
                    this.ValidateProperty("SubsystemEnum", value);
                    this._subsystemEnum = value;
                    this.RaiseDataMemberChanged("SubsystemEnum");
                    this.OnSubsystemEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SystemEnum' value.
        /// </summary>
        [DataMember()]
        [SystemNamespace()]
        public SystemEnum SystemEnum
        {
            get
            {
                return this._systemEnum;
            }
            set
            {
                if ((this._systemEnum != value))
                {
                    this.OnSystemEnumChanging(value);
                    this.RaiseDataMemberChanging("SystemEnum");
                    this.ValidateProperty("SystemEnum", value);
                    this._systemEnum = value;
                    this.RaiseDataMemberChanged("SystemEnum");
                    this.OnSystemEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SystemGeneratedEnum' value.
        /// </summary>
        [DataMember()]
        public SystemGeneratedEnum SystemGeneratedEnum
        {
            get
            {
                return this._systemGeneratedEnum;
            }
            set
            {
                if ((this._systemGeneratedEnum != value))
                {
                    this.OnSystemGeneratedEnumChanging(value);
                    this.RaiseDataMemberChanging("SystemGeneratedEnum");
                    this.ValidateProperty("SystemGeneratedEnum", value);
                    this._systemGeneratedEnum = value;
                    this.RaiseDataMemberChanged("SystemGeneratedEnum");
                    this.OnSystemGeneratedEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._key;
        }
    }
    
    /// <summary>
    /// Enum SystemGeneratedEnum
    /// </summary>
    public enum SystemGeneratedEnum
    {
        
        /// <summary>
        /// SystemGeneratedEnumValue
        /// </summary>
        SystemGeneratedEnumValue = 0,
    }
}
namespace System.Subsystem
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.Threading.Tasks;
    using OpenRiaServices;
    using OpenRiaServices.Client;
    using OpenRiaServices.Client.Authentication;
    
    
    /// <summary>
    /// The DomainContext corresponding to the 'SubsystemDomainService' DomainService.
    /// </summary>
    public sealed partial class SubsystemDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SubsystemDomainContext"/> class.
        /// </summary>
        public SubsystemDomainContext() : 
                this(new Uri("System-Subsystem-SubsystemDomainService.svc", UriKind.Relative))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SubsystemDomainContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The SubsystemDomainService service URI.</param>
        public SubsystemDomainContext(Uri serviceUri) : 
                this(DomainContext.CreateDomainClient(typeof(ISubsystemDomainServiceContract), serviceUri, false))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SubsystemDomainContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public SubsystemDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="SubsystemEntity"/> entity instances that have been loaded into this <see cref="SubsystemDomainContext"/> instance.
        /// </summary>
        public EntitySet<SubsystemEntity> SubsystemEntities
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SubsystemEntity>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SubsystemEntity"/> entity instances using the 'GetSubsystemEntities' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SubsystemEntity"/> entity instances.</returns>
        public EntityQuery<SubsystemEntity> GetSubsystemEntitiesQuery()
        {
            this.ValidateMethod("GetSubsystemEntitiesQuery", null);
            return base.CreateQuery<SubsystemEntity>("GetSubsystemEntities", null, false, true);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new SubsystemDomainContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'SubsystemDomainService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface ISubsystemDomainServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetSubsystemEntities' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [HasSideEffects(false)]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/SubsystemDomainService/GetSubsystemEntities", ReplyAction="http://tempuri.org/SubsystemDomainService/GetSubsystemEntitiesResponse")]
            IAsyncResult BeginGetSubsystemEntities(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSubsystemEntities'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSubsystemEntities'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSubsystemEntities' operation.</returns>
            QueryResult<SubsystemEntity> EndGetSubsystemEntities(IAsyncResult result);
        }
        
        internal sealed class SubsystemDomainContextEntityContainer : EntityContainer
        {
            
            public SubsystemDomainContextEntityContainer()
            {
                this.CreateEntitySet<SubsystemEntity>(EntitySetOperations.None);
            }
        }
    }
    
    /// <summary>
    /// The 'SubsystemEntity' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/System.Subsystem")]
    public sealed partial class SubsystemEntity : Entity
    {
        
        private int _key;
        
        private SubsystemEnum _subsystemEnum;
        
        private SubsystemGeneratedEnum _subsystemGeneratedEnum;
        
        private SystemEnum _systemEnum;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnKeyChanging(int value);
        partial void OnKeyChanged();
        partial void OnSubsystemEnumChanging(SubsystemEnum value);
        partial void OnSubsystemEnumChanged();
        partial void OnSubsystemGeneratedEnumChanging(SubsystemGeneratedEnum value);
        partial void OnSubsystemGeneratedEnumChanged();
        partial void OnSystemEnumChanging(SystemEnum value);
        partial void OnSystemEnumChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SubsystemEntity"/> class.
        /// </summary>
        public SubsystemEntity()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Key' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Key
        {
            get
            {
                return this._key;
            }
            set
            {
                if ((this._key != value))
                {
                    this.OnKeyChanging(value);
                    this.ValidateProperty("Key", value);
                    this._key = value;
                    this.RaisePropertyChanged("Key");
                    this.OnKeyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubsystemEnum' value.
        /// </summary>
        [DataMember()]
        [SubsystemNamespace()]
        public SubsystemEnum SubsystemEnum
        {
            get
            {
                return this._subsystemEnum;
            }
            set
            {
                if ((this._subsystemEnum != value))
                {
                    this.OnSubsystemEnumChanging(value);
                    this.RaiseDataMemberChanging("SubsystemEnum");
                    this.ValidateProperty("SubsystemEnum", value);
                    this._subsystemEnum = value;
                    this.RaiseDataMemberChanged("SubsystemEnum");
                    this.OnSubsystemEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SubsystemGeneratedEnum' value.
        /// </summary>
        [DataMember()]
        public SubsystemGeneratedEnum SubsystemGeneratedEnum
        {
            get
            {
                return this._subsystemGeneratedEnum;
            }
            set
            {
                if ((this._subsystemGeneratedEnum != value))
                {
                    this.OnSubsystemGeneratedEnumChanging(value);
                    this.RaiseDataMemberChanging("SubsystemGeneratedEnum");
                    this.ValidateProperty("SubsystemGeneratedEnum", value);
                    this._subsystemGeneratedEnum = value;
                    this.RaiseDataMemberChanged("SubsystemGeneratedEnum");
                    this.OnSubsystemGeneratedEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SystemEnum' value.
        /// </summary>
        [DataMember()]
        [SystemNamespace()]
        public SystemEnum SystemEnum
        {
            get
            {
                return this._systemEnum;
            }
            set
            {
                if ((this._systemEnum != value))
                {
                    this.OnSystemEnumChanging(value);
                    this.RaiseDataMemberChanging("SystemEnum");
                    this.ValidateProperty("SystemEnum", value);
                    this._systemEnum = value;
                    this.RaiseDataMemberChanged("SystemEnum");
                    this.OnSystemEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._key;
        }
    }
    
    /// <summary>
    /// Enum SubsystemGeneratedEnum
    /// </summary>
    public enum SubsystemGeneratedEnum
    {
        
        /// <summary>
        /// SubsystemGeneratedEnumValue
        /// </summary>
        SubsystemGeneratedEnumValue = 0,
    }
}
namespace SystemExtensions
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.DataAnnotations;
    using System.Linq;
    using System.Runtime.Serialization;
    using System.ServiceModel;
    using System.Threading.Tasks;
    using OpenRiaServices;
    using OpenRiaServices.Client;
    using OpenRiaServices.Client.Authentication;
    
    
    /// <summary>
    /// The DomainContext corresponding to the 'SystemExtensionsDomainService' DomainService.
    /// </summary>
    public sealed partial class SystemExtensionsDomainContext : DomainContext
    {
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemExtensionsDomainContext"/> class.
        /// </summary>
        public SystemExtensionsDomainContext() : 
                this(new Uri("SystemExtensions-SystemExtensionsDomainService.svc", UriKind.Relative))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemExtensionsDomainContext"/> class with the specified service URI.
        /// </summary>
        /// <param name="serviceUri">The SystemExtensionsDomainService service URI.</param>
        public SystemExtensionsDomainContext(Uri serviceUri) : 
                this(DomainContext.CreateDomainClient(typeof(ISystemExtensionsDomainServiceContract), serviceUri, false))
        {
        }
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemExtensionsDomainContext"/> class with the specified <paramref name="domainClient"/>.
        /// </summary>
        /// <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        public SystemExtensionsDomainContext(DomainClient domainClient) : 
                base(domainClient)
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets the set of <see cref="SystemExtensionsEntity"/> entity instances that have been loaded into this <see cref="SystemExtensionsDomainContext"/> instance.
        /// </summary>
        public EntitySet<SystemExtensionsEntity> SystemExtensionsEntities
        {
            get
            {
                return base.EntityContainer.GetEntitySet<SystemExtensionsEntity>();
            }
        }
        
        /// <summary>
        /// Gets an EntityQuery instance that can be used to load <see cref="SystemExtensionsEntity"/> entity instances using the 'GetSystemExtensionsEntities' query.
        /// </summary>
        /// <returns>An EntityQuery that can be loaded to retrieve <see cref="SystemExtensionsEntity"/> entity instances.</returns>
        public EntityQuery<SystemExtensionsEntity> GetSystemExtensionsEntitiesQuery()
        {
            this.ValidateMethod("GetSystemExtensionsEntitiesQuery", null);
            return base.CreateQuery<SystemExtensionsEntity>("GetSystemExtensionsEntities", null, false, true);
        }
        
        /// <summary>
        /// Creates a new EntityContainer for this DomainContext's EntitySets.
        /// </summary>
        /// <returns>A new container instance.</returns>
        protected override EntityContainer CreateEntityContainer()
        {
            return new SystemExtensionsDomainContextEntityContainer();
        }
        
        /// <summary>
        /// Service contract for the 'SystemExtensionsDomainService' DomainService.
        /// </summary>
        [ServiceContract()]
        public interface ISystemExtensionsDomainServiceContract
        {
            
            /// <summary>
            /// Asynchronously invokes the 'GetSystemExtensionsEntities' operation.
            /// </summary>
            /// <param name="callback">Callback to invoke on completion.</param>
            /// <param name="asyncState">Optional state object.</param>
            /// <returns>An IAsyncResult that can be used to monitor the request.</returns>
            [HasSideEffects(false)]
            [OperationContract(AsyncPattern=true, Action="http://tempuri.org/SystemExtensionsDomainService/GetSystemExtensionsEntities", ReplyAction="http://tempuri.org/SystemExtensionsDomainService/GetSystemExtensionsEntitiesRespo" +
                "nse")]
            IAsyncResult BeginGetSystemExtensionsEntities(AsyncCallback callback, object asyncState);
            
            /// <summary>
            /// Completes the asynchronous operation begun by 'BeginGetSystemExtensionsEntities'.
            /// </summary>
            /// <param name="result">The IAsyncResult returned from 'BeginGetSystemExtensionsEntities'.</param>
            /// <returns>The 'QueryResult' returned from the 'GetSystemExtensionsEntities' operation.</returns>
            QueryResult<SystemExtensionsEntity> EndGetSystemExtensionsEntities(IAsyncResult result);
        }
        
        internal sealed class SystemExtensionsDomainContextEntityContainer : EntityContainer
        {
            
            public SystemExtensionsDomainContextEntityContainer()
            {
                this.CreateEntitySet<SystemExtensionsEntity>(EntitySetOperations.None);
            }
        }
    }
    
    /// <summary>
    /// The 'SystemExtensionsEntity' entity class.
    /// </summary>
    [DataContract(Namespace="http://schemas.datacontract.org/2004/07/SystemExtensions")]
    public sealed partial class SystemExtensionsEntity : Entity
    {
        
        private int _key;
        
        private SystemExtensionsEnum _systemExtensionsEnum;
        
        private SystemExtensionsGeneratedEnum _systemExtensionsGeneratedEnum;
        
        #region Extensibility Method Definitions

        /// <summary>
        /// This method is invoked from the constructor once initialization is complete and
        /// can be used for further object setup.
        /// </summary>
        partial void OnCreated();
        partial void OnKeyChanging(int value);
        partial void OnKeyChanged();
        partial void OnSystemExtensionsEnumChanging(SystemExtensionsEnum value);
        partial void OnSystemExtensionsEnumChanged();
        partial void OnSystemExtensionsGeneratedEnumChanging(SystemExtensionsGeneratedEnum value);
        partial void OnSystemExtensionsGeneratedEnumChanged();

        #endregion
        
        
        /// <summary>
        /// Initializes a new instance of the <see cref="SystemExtensionsEntity"/> class.
        /// </summary>
        public SystemExtensionsEntity()
        {
            this.OnCreated();
        }
        
        /// <summary>
        /// Gets or sets the 'Key' value.
        /// </summary>
        [DataMember()]
        [Editable(false, AllowInitialValue=true)]
        [Key()]
        [RoundtripOriginal()]
        public int Key
        {
            get
            {
                return this._key;
            }
            set
            {
                if ((this._key != value))
                {
                    this.OnKeyChanging(value);
                    this.ValidateProperty("Key", value);
                    this._key = value;
                    this.RaisePropertyChanged("Key");
                    this.OnKeyChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SystemExtensionsEnum' value.
        /// </summary>
        [DataMember()]
        [SystemExtensionsNamespace()]
        public SystemExtensionsEnum SystemExtensionsEnum
        {
            get
            {
                return this._systemExtensionsEnum;
            }
            set
            {
                if ((this._systemExtensionsEnum != value))
                {
                    this.OnSystemExtensionsEnumChanging(value);
                    this.RaiseDataMemberChanging("SystemExtensionsEnum");
                    this.ValidateProperty("SystemExtensionsEnum", value);
                    this._systemExtensionsEnum = value;
                    this.RaiseDataMemberChanged("SystemExtensionsEnum");
                    this.OnSystemExtensionsEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Gets or sets the 'SystemExtensionsGeneratedEnum' value.
        /// </summary>
        [DataMember()]
        public SystemExtensionsGeneratedEnum SystemExtensionsGeneratedEnum
        {
            get
            {
                return this._systemExtensionsGeneratedEnum;
            }
            set
            {
                if ((this._systemExtensionsGeneratedEnum != value))
                {
                    this.OnSystemExtensionsGeneratedEnumChanging(value);
                    this.RaiseDataMemberChanging("SystemExtensionsGeneratedEnum");
                    this.ValidateProperty("SystemExtensionsGeneratedEnum", value);
                    this._systemExtensionsGeneratedEnum = value;
                    this.RaiseDataMemberChanged("SystemExtensionsGeneratedEnum");
                    this.OnSystemExtensionsGeneratedEnumChanged();
                }
            }
        }
        
        /// <summary>
        /// Computes a value from the key fields that uniquely identifies this entity instance.
        /// </summary>
        /// <returns>An object instance that uniquely identifies this entity instance.</returns>
        public override object GetIdentity()
        {
            return this._key;
        }
    }
    
    /// <summary>
    /// Enum SystemExtensionsGeneratedEnum
    /// </summary>
    public enum SystemExtensionsGeneratedEnum
    {
        
        /// <summary>
        /// SystemExtensionsGeneratedEnumValue
        /// </summary>
        SystemExtensionsGeneratedEnumValue = 0,
    }
}
