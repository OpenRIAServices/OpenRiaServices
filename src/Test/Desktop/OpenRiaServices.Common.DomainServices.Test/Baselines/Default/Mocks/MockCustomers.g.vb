'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34209
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Compare Binary
Option Infer On
Option Strict On
Option Explicit On

Imports OpenRiaServices
Imports OpenRiaServices.Client
Imports OpenRiaServices.Client.Authentication
Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.ComponentModel.DataAnnotations
Imports System.Linq
Imports System.Runtime.Serialization
Imports System.ServiceModel
Imports System.Threading.Tasks

Namespace TestDomainServices
    
    ''' <summary>
    ''' The 'MockCustomer' entity class.
    ''' </summary>
    <DataContract([Namespace]:="http://schemas.datacontract.org/2004/07/TestDomainServices")>  _
    Partial Public NotInheritable Class MockCustomer
        Inherits Entity
        
        Private _city As EntityRef(Of Global.Cities.City)
        
        Private _cityName As String
        
        Private _customerId As Integer
        
        Private _previousResidences As EntityCollection(Of Global.Cities.City)
        
        Private _stateName As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCityNameChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnCityNameChanged()
        End Sub
        Private Partial Sub OnCustomerIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnCustomerIdChanged()
        End Sub
        Private Partial Sub OnStateNameChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnStateNameChanged()
        End Sub
        Private Partial Sub OnMockCustomerCustomMethodInvoking(ByVal expectedStateName As String, ByVal expectedOriginalStateName As String)
        End Sub
        Private Partial Sub OnMockCustomerCustomMethodInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockCustomer"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="City"/> entity.
        ''' </summary>
        <Association("Customer_City", "CityName,StateName", "Name,StateName", IsForeignKey:=true),  _
         ExternalReference()>  _
        Public Property City() As Global.Cities.City
            Get
                If (Me._city Is Nothing) Then
                    Me._city = New EntityRef(Of Global.Cities.City)(Me, "City", AddressOf Me.FilterCity)
                End If
                Return Me._city.Entity
            End Get
            Set
                Dim previous As Global.Cities.City = Me.City
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("City", value)
                    If (Not (value) Is Nothing) Then
                        Me.CityName = value.Name
                        Me.StateName = value.StateName
                    Else
                        Me.CityName = CType(Nothing, String)
                        Me.StateName = CType(Nothing, String)
                    End If
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CityName' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property CityName() As String
            Get
                Return Me._cityName
            End Get
            Set
                If (String.Equals(Me._cityName, value) = false) Then
                    Me.OnCityNameChanging(value)
                    Me.RaiseDataMemberChanging("CityName")
                    Me.ValidateProperty("CityName", value)
                    Me._cityName = value
                    Me.RaiseDataMemberChanged("CityName")
                    Me.OnCityNameChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CustomerId' value.
        ''' </summary>
        <DataMember(),  _
         Editable(false, AllowInitialValue:=true),  _
         Key(),  _
         RoundtripOriginal()>  _
        Public Property CustomerId() As Integer
            Get
                Return Me._customerId
            End Get
            Set
                If ((Me._customerId = value)  _
                            = false) Then
                    Me.OnCustomerIdChanging(value)
                    Me.ValidateProperty("CustomerId", value)
                    Me._customerId = value
                    Me.RaisePropertyChanged("CustomerId")
                    Me.OnCustomerIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets the collection of associated <see cref="City"/> entity instances.
        ''' </summary>
        <Association("Customer_PreviousResidences", "StateName", "StateName"),  _
         ExternalReference()>  _
        Public ReadOnly Property PreviousResidences() As EntityCollection(Of Global.Cities.City)
            Get
                If (Me._previousResidences Is Nothing) Then
                    Me._previousResidences = New EntityCollection(Of Global.Cities.City)(Me, "PreviousResidences", AddressOf Me.FilterPreviousResidences)
                End If
                Return Me._previousResidences
            End Get
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'StateName' value.
        ''' </summary>
        <DataMember(),  _
         RoundtripOriginal()>  _
        Public Property StateName() As String
            Get
                Return Me._stateName
            End Get
            Set
                If (String.Equals(Me._stateName, value) = false) Then
                    Me.OnStateNameChanging(value)
                    Me.RaiseDataMemberChanging("StateName")
                    Me.ValidateProperty("StateName", value)
                    Me._stateName = value
                    Me.RaiseDataMemberChanged("StateName")
                    Me.OnStateNameChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'MockCustomerCustomMethod' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsMockCustomerCustomMethodInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("MockCustomerCustomMethod")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'MockCustomerCustomMethod' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanMockCustomerCustomMethod() As Boolean
            Get
                Return MyBase.CanInvokeAction("MockCustomerCustomMethod")
            End Get
        End Property
        
        Private Function FilterCity(ByVal entity As Global.Cities.City) As Boolean
            Return (Object.Equals(entity.Name, Me.CityName) AndAlso Object.Equals(entity.StateName, Me.StateName))
        End Function
        
        Private Function FilterPreviousResidences(ByVal entity As Global.Cities.City) As Boolean
            Return Object.Equals(entity.StateName, Me.StateName)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._customerId
        End Function
        
        ''' <summary>
        ''' Invokes the 'MockCustomerCustomMethod' action on this entity.
        ''' </summary>
        ''' <param name="expectedStateName">The value to pass to the server method's 'expectedStateName' parameter.</param>
        ''' <param name="expectedOriginalStateName">The value to pass to the server method's 'expectedOriginalStateName' parameter.</param>
        <EntityAction("MockCustomerCustomMethod", AllowMultipleInvocations:=false)>  _
        Public Sub MockCustomerCustomMethod(ByVal expectedStateName As String, ByVal expectedOriginalStateName As String)
            Me.OnMockCustomerCustomMethodInvoking(expectedStateName, expectedOriginalStateName)
            MyBase.InvokeAction("MockCustomerCustomMethod", expectedStateName, expectedOriginalStateName)
            Me.OnMockCustomerCustomMethodInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The DomainContext corresponding to the 'MockCustomerDomainService' DomainService.
    ''' </summary>
    Partial Public NotInheritable Class MockCustomerDomainContext
        Inherits DomainContext
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockCustomerDomainContext"/> class.
        ''' </summary>
        Public Sub New()
            Me.New(New Uri("TestDomainServices-MockCustomerDomainService.svc", UriKind.Relative))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockCustomerDomainContext"/> class with the specified service URI.
        ''' </summary>
        ''' <param name="serviceUri">The MockCustomerDomainService service URI.</param>
        Public Sub New(ByVal serviceUri As Uri)
            Me.New(DomainContext.CreateDomainClient(GetType(IMockCustomerDomainServiceContract), serviceUri, false))
        End Sub
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockCustomerDomainContext"/> class with the specified <paramref name="domainClient"/>.
        ''' </summary>
        ''' <param name="domainClient">The DomainClient instance to use for this DomainContext.</param>
        Public Sub New(ByVal domainClient As DomainClient)
            MyBase.New(domainClient)
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets the set of <see cref="MockCustomer"/> entity instances that have been loaded into this <see cref="MockCustomerDomainContext"/> instance.
        ''' </summary>
        Public ReadOnly Property MockCustomers() As EntitySet(Of MockCustomer)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockCustomer)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets the set of <see cref="MockReport"/> entity instances that have been loaded into this <see cref="MockCustomerDomainContext"/> instance.
        ''' </summary>
        Public ReadOnly Property MockReports() As EntitySet(Of MockReport)
            Get
                Return MyBase.EntityContainer.GetEntitySet(Of MockReport)
            End Get
        End Property
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockCustomer"/> entity instances using the 'GetCustomers' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockCustomer"/> entity instances.</returns>
        Public Function GetCustomersQuery() As EntityQuery(Of MockCustomer)
            Me.ValidateMethod("GetCustomersQuery", Nothing)
            Return MyBase.CreateQuery(Of MockCustomer)("GetCustomers", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Gets an EntityQuery instance that can be used to load <see cref="MockReport"/> entity instances using the 'GetReports' query.
        ''' </summary>
        ''' <returns>An EntityQuery that can be loaded to retrieve <see cref="MockReport"/> entity instances.</returns>
        Public Function GetReportsQuery() As EntityQuery(Of MockReport)
            Me.ValidateMethod("GetReportsQuery", Nothing)
            Return MyBase.CreateQuery(Of MockReport)("GetReports", Nothing, false, true)
        End Function
        
        ''' <summary>
        ''' Invokes the 'MockCustomerCustomMethod' method of the specified <see cref="MockCustomer"/> entity.
        ''' </summary>
        ''' <param name="current">The <see cref="MockCustomer"/> entity instance.</param>
        ''' <param name="expectedStateName">The value for the 'expectedStateName' parameter for this action.</param>
        ''' <param name="expectedOriginalStateName">The value for the 'expectedOriginalStateName' parameter for this action.</param>
        Public Sub MockCustomerCustomMethod(ByVal current As MockCustomer, ByVal expectedStateName As String, ByVal expectedOriginalStateName As String)
            current.MockCustomerCustomMethod(expectedStateName, expectedOriginalStateName)
        End Sub
        
        ''' <summary>
        ''' Invokes the 'MockReportCustomMethod' method of the specified <see cref="MockReport"/> entity.
        ''' </summary>
        ''' <param name="current">The <see cref="MockReport"/> entity instance.</param>
        Public Sub MockReportCustomMethod(ByVal current As MockReport)
            current.MockReportCustomMethod
        End Sub
        
        ''' <summary>
        ''' Creates a new EntityContainer for this DomainContext's EntitySets.
        ''' </summary>
        ''' <returns>A new container instance.</returns>
        Protected Overrides Function CreateEntityContainer() As EntityContainer
            Return New MockCustomerDomainContextEntityContainer()
        End Function
        
        ''' <summary>
        ''' Service contract for the 'MockCustomerDomainService' DomainService.
        ''' </summary>
        <ServiceContract()>  _
        Public Interface IMockCustomerDomainServiceContract
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetCustomers' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/MockCustomerDomainService/GetCustomers", ReplyAction:="http://tempuri.org/MockCustomerDomainService/GetCustomersResponse")>  _
            Function BeginGetCustomers(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetCustomers'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetCustomers'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetCustomers' operation.</returns>
            Function EndGetCustomers(ByVal result As IAsyncResult) As QueryResult(Of MockCustomer)
            
            ''' <summary>
            ''' Asynchronously invokes the 'GetReports' operation.
            ''' </summary>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <HasSideEffects(false),  _
             OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/MockCustomerDomainService/GetReports", ReplyAction:="http://tempuri.org/MockCustomerDomainService/GetReportsResponse")>  _
            Function BeginGetReports(ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginGetReports'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginGetReports'.</param>
            ''' <returns>The 'QueryResult' returned from the 'GetReports' operation.</returns>
            Function EndGetReports(ByVal result As IAsyncResult) As QueryResult(Of MockReport)
            
            ''' <summary>
            ''' Asynchronously invokes the 'SubmitChanges' operation.
            ''' </summary>
            ''' <param name="changeSet">The change-set to submit.</param>
            ''' <param name="callback">Callback to invoke on completion.</param>
            ''' <param name="asyncState">Optional state object.</param>
            ''' <returns>An IAsyncResult that can be used to monitor the request.</returns>
            <OperationContract(AsyncPattern:=true, Action:="http://tempuri.org/MockCustomerDomainService/SubmitChanges", ReplyAction:="http://tempuri.org/MockCustomerDomainService/SubmitChangesResponse")>  _
            Function BeginSubmitChanges(ByVal changeSet As IEnumerable(Of ChangeSetEntry), ByVal callback As AsyncCallback, ByVal asyncState As Object) As IAsyncResult
            
            ''' <summary>
            ''' Completes the asynchronous operation begun by 'BeginSubmitChanges'.
            ''' </summary>
            ''' <param name="result">The IAsyncResult returned from 'BeginSubmitChanges'.</param>
            ''' <returns>The collection of change-set entry elements returned from 'SubmitChanges'.</returns>
            Function EndSubmitChanges(ByVal result As IAsyncResult) As IEnumerable(Of ChangeSetEntry)
        End Interface
        
        Friend NotInheritable Class MockCustomerDomainContextEntityContainer
            Inherits EntityContainer
            
            Public Sub New()
                MyBase.New
                Me.CreateEntitySet(Of MockCustomer)(EntitySetOperations.Edit)
                Me.CreateEntitySet(Of MockReport)(EntitySetOperations.Edit)
            End Sub
        End Class
    End Class
    
    ''' <summary>
    ''' The 'MockReport' entity class.
    ''' </summary>
    <DataContract([Namespace]:="Mock.Models", Name:="MR"),  _
     RoundtripOriginal()>  _
    Partial Public NotInheritable Class MockReport
        Inherits Entity
        
        Private _customer As EntityRef(Of MockCustomer)
        
        Private _customerId As Integer
        
        Private _reportBody As MockReportBody
        
        Private _reportElementFieldId As Integer
        
        Private _reportTitle As String
        
        Private _start As DateTime
        
        Private _state As String
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnCustomerIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnCustomerIdChanged()
        End Sub
        Private Partial Sub OnReportBodyChanging(ByVal value As MockReportBody)
        End Sub
        Private Partial Sub OnReportBodyChanged()
        End Sub
        Private Partial Sub OnReportElementFieldIdChanging(ByVal value As Integer)
        End Sub
        Private Partial Sub OnReportElementFieldIdChanged()
        End Sub
        Private Partial Sub OnReportTitleChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnReportTitleChanged()
        End Sub
        Private Partial Sub OnStartChanging(ByVal value As DateTime)
        End Sub
        Private Partial Sub OnStartChanged()
        End Sub
        Private Partial Sub OnStateChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnStateChanged()
        End Sub
        Private Partial Sub OnMockReportCustomMethodInvoking()
        End Sub
        Private Partial Sub OnMockReportCustomMethodInvoked()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockReport"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the associated <see cref="MockCustomer"/> entity.
        ''' </summary>
        <Association("R_C", "CustomerId", "CustomerId")>  _
        Public Property Customer() As MockCustomer
            Get
                If (Me._customer Is Nothing) Then
                    Me._customer = New EntityRef(Of MockCustomer)(Me, "Customer", AddressOf Me.FilterCustomer)
                End If
                Return Me._customer.Entity
            End Get
            Set
                Dim previous As MockCustomer = Me.Customer
                If (Object.Equals(previous, value) = false) Then
                    Me.ValidateProperty("Customer", value)
                    Me._customer.Entity = value
                    Me.RaisePropertyChanged("Customer")
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'CustomerId' value.
        ''' </summary>
        <DataMember(Name:="CId")>  _
        Public Property CustomerId() As Integer
            Get
                Return Me._customerId
            End Get
            Set
                If ((Me._customerId = value)  _
                            = false) Then
                    Me.OnCustomerIdChanging(value)
                    Me.RaiseDataMemberChanging("CustomerId")
                    Me.ValidateProperty("CustomerId", value)
                    Me._customerId = value
                    Me.RaiseDataMemberChanged("CustomerId")
                    Me.OnCustomerIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReportBody' value.
        ''' </summary>
        <DataMember(Name:="Data"),  _
         Display(AutoGenerateField:=false)>  _
        Public Property ReportBody() As MockReportBody
            Get
                Return Me._reportBody
            End Get
            Set
                If (Object.Equals(Me._reportBody, value) = false) Then
                    Me.OnReportBodyChanging(value)
                    Me.RaiseDataMemberChanging("ReportBody")
                    Me.ValidateProperty("ReportBody", value)
                    Me._reportBody = value
                    Me.RaiseDataMemberChanged("ReportBody")
                    Me.OnReportBodyChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReportElementFieldId' value.
        ''' </summary>
        <DataMember(Name:="REFId"),  _
         Editable(false, AllowInitialValue:=true),  _
         Key()>  _
        Public Property ReportElementFieldId() As Integer
            Get
                Return Me._reportElementFieldId
            End Get
            Set
                If ((Me._reportElementFieldId = value)  _
                            = false) Then
                    Me.OnReportElementFieldIdChanging(value)
                    Me.ValidateProperty("ReportElementFieldId", value)
                    Me._reportElementFieldId = value
                    Me.RaisePropertyChanged("ReportElementFieldId")
                    Me.OnReportElementFieldIdChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'ReportTitle' value.
        ''' </summary>
        <DataMember(IsRequired:=true, Name:="Title")>  _
        Public Property ReportTitle() As String
            Get
                Return Me._reportTitle
            End Get
            Set
                If (String.Equals(Me._reportTitle, value) = false) Then
                    Me.OnReportTitleChanging(value)
                    Me.RaiseDataMemberChanging("ReportTitle")
                    Me.ValidateProperty("ReportTitle", value)
                    Me._reportTitle = value
                    Me.RaiseDataMemberChanged("ReportTitle")
                    Me.OnReportTitleChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'Start' value.
        ''' </summary>
        <DataMember(Name:="Str"),  _
         Editable(false)>  _
        Public Property Start() As DateTime
            Get
                Return Me._start
            End Get
            Set
                If ((Me._start = value)  _
                            = false) Then
                    Me.OnStartChanging(value)
                    Me.ValidateProperty("Start", value)
                    Me._start = value
                    Me.RaisePropertyChanged("Start")
                    Me.OnStartChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'State' value.
        ''' </summary>
        <DataMember(Name:="SN"),  _
         Editable(false)>  _
        Public Property State() As String
            Get
                Return Me._state
            End Get
            Set
                If (String.Equals(Me._state, value) = false) Then
                    Me.OnStateChanging(value)
                    Me.ValidateProperty("State", value)
                    Me._state = value
                    Me.RaisePropertyChanged("State")
                    Me.OnStateChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'MockReportCustomMethod' action has been invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property IsMockReportCustomMethodInvoked() As Boolean
            Get
                Return MyBase.IsActionInvoked("MockReportCustomMethod")
            End Get
        End Property
        
        ''' <summary>
        ''' Gets a value indicating whether the 'MockReportCustomMethod' method can be invoked on this entity.
        ''' </summary>
        <Display(AutoGenerateField:=false)>  _
        Public ReadOnly Property CanMockReportCustomMethod() As Boolean
            Get
                Return MyBase.CanInvokeAction("MockReportCustomMethod")
            End Get
        End Property
        
        Private Function FilterCustomer(ByVal entity As MockCustomer) As Boolean
            Return Object.Equals(entity.CustomerId, Me.CustomerId)
        End Function
        
        ''' <summary>
        ''' Computes a value from the key fields that uniquely identifies this entity instance.
        ''' </summary>
        ''' <returns>An object instance that uniquely identifies this entity instance.</returns>
        Public Overrides Function GetIdentity() As Object
            Return Me._reportElementFieldId
        End Function
        
        ''' <summary>
        ''' Invokes the 'MockReportCustomMethod' action on this entity.
        ''' </summary>
        <EntityAction("MockReportCustomMethod", AllowMultipleInvocations:=false)>  _
        Public Sub MockReportCustomMethod()
            Me.OnMockReportCustomMethodInvoking
            MyBase.InvokeAction("MockReportCustomMethod")
            Me.OnMockReportCustomMethodInvoked
        End Sub
    End Class
    
    ''' <summary>
    ''' The 'MockReportBody' class.
    ''' </summary>
    <DataContract([Namespace]:="Mock.Models", Name:="MRB"),  _
     RoundtripOriginal()>  _
    Partial Public NotInheritable Class MockReportBody
        Inherits ComplexObject
        
        Private _report As String
        
        Private _timeEntered As DateTime
        
        #Region "Extensibility Method Definitions"

        ''' <summary>
        ''' This method is invoked from the constructor once initialization is complete and
        ''' can be used for further object setup.
        ''' </summary>
        Private Partial Sub OnCreated()
        End Sub
        Private Partial Sub OnReportChanging(ByVal value As String)
        End Sub
        Private Partial Sub OnReportChanged()
        End Sub
        Private Partial Sub OnTimeEnteredChanging(ByVal value As DateTime)
        End Sub
        Private Partial Sub OnTimeEnteredChanged()
        End Sub

        #End Region
        
        
        ''' <summary>
        ''' Initializes a new instance of the <see cref="MockReportBody"/> class.
        ''' </summary>
        Public Sub New()
            MyBase.New
            Me.OnCreated
        End Sub
        
        ''' <summary>
        ''' Gets or sets the 'Report' value.
        ''' </summary>
        <DataMember(EmitDefaultValue:=false, Name:="Body")>  _
        Public Property Report() As String
            Get
                Return Me._report
            End Get
            Set
                If (String.Equals(Me._report, value) = false) Then
                    Me.OnReportChanging(value)
                    Me.RaiseDataMemberChanging("Report")
                    Me.ValidateProperty("Report", value)
                    Me._report = value
                    Me.RaiseDataMemberChanged("Report")
                    Me.OnReportChanged
                End If
            End Set
        End Property
        
        ''' <summary>
        ''' Gets or sets the 'TimeEntered' value.
        ''' </summary>
        <DataMember(Name:="EntryDate")>  _
        Public Property TimeEntered() As DateTime
            Get
                Return Me._timeEntered
            End Get
            Set
                If ((Me._timeEntered = value)  _
                            = false) Then
                    Me.OnTimeEnteredChanging(value)
                    Me.RaiseDataMemberChanging("TimeEntered")
                    Me.ValidateProperty("TimeEntered", value)
                    Me._timeEntered = value
                    Me.RaiseDataMemberChanged("TimeEntered")
                    Me.OnTimeEnteredChanged
                End If
            End Set
        End Property
    End Class
End Namespace
