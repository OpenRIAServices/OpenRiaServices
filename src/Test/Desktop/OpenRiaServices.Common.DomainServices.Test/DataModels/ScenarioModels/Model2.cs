//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace DataTests.Scenarios.EF.Northwind
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class NorthwindEntities_Scenarios : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new NorthwindEntities_Scenarios object using the connection string found in the 'NorthwindEntities_Scenarios' section of the application configuration file.
        /// </summary>
        public NorthwindEntities_Scenarios() : base("name=NorthwindEntities_Scenarios", "NorthwindEntities_Scenarios")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NorthwindEntities_Scenarios object.
        /// </summary>
        public NorthwindEntities_Scenarios(string connectionString) : base(connectionString, "NorthwindEntities_Scenarios")
        {
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new NorthwindEntities_Scenarios object.
        /// </summary>
        public NorthwindEntities_Scenarios(EntityConnection connection) : base(connection, "NorthwindEntities_Scenarios")
        {
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> EmployeeSet
        {
            get
            {
                if ((_EmployeeSet == null))
                {
                    _EmployeeSet = base.CreateObjectSet<Employee>("EmployeeSet");
                }
                return _EmployeeSet;
            }
        }
        private ObjectSet<Employee> _EmployeeSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> CustomerSet
        {
            get
            {
                if ((_CustomerSet == null))
                {
                    _CustomerSet = base.CreateObjectSet<Customer>("CustomerSet");
                }
                return _CustomerSet;
            }
        }
        private ObjectSet<Customer> _CustomerSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TimestampEntity> TimestampEntities
        {
            get
            {
                if ((_TimestampEntities == null))
                {
                    _TimestampEntities = base.CreateObjectSet<TimestampEntity>("TimestampEntities");
                }
                return _TimestampEntities;
            }
        }
        private ObjectSet<TimestampEntity> _TimestampEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RequiredAttributeTestEntity> RequiredAttributeTestEntities
        {
            get
            {
                if ((_RequiredAttributeTestEntities == null))
                {
                    _RequiredAttributeTestEntities = base.CreateObjectSet<RequiredAttributeTestEntity>("RequiredAttributeTestEntities");
                }
                return _RequiredAttributeTestEntities;
            }
        }
        private ObjectSet<RequiredAttributeTestEntity> _RequiredAttributeTestEntities;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EntityWithNullFacetValuesForTimestampComparison> EntitiesWithNullFacetValuesForTimestampComparison
        {
            get
            {
                if ((_EntitiesWithNullFacetValuesForTimestampComparison == null))
                {
                    _EntitiesWithNullFacetValuesForTimestampComparison = base.CreateObjectSet<EntityWithNullFacetValuesForTimestampComparison>("EntitiesWithNullFacetValuesForTimestampComparison");
                }
                return _EntitiesWithNullFacetValuesForTimestampComparison;
            }
        }
        private ObjectSet<EntityWithNullFacetValuesForTimestampComparison> _EntitiesWithNullFacetValuesForTimestampComparison;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeWithCT> EmployeeWithCTs
        {
            get
            {
                if ((_EmployeeWithCTs == null))
                {
                    _EmployeeWithCTs = base.CreateObjectSet<EmployeeWithCT>("EmployeeWithCTs");
                }
                return _EmployeeWithCTs;
            }
        }
        private ObjectSet<EmployeeWithCT> _EmployeeWithCTs;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeSet(Employee employee)
        {
            base.AddObject("EmployeeSet", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CustomerSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomerSet(Customer customer)
        {
            base.AddObject("CustomerSet", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TimestampEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTimestampEntities(TimestampEntity timestampEntity)
        {
            base.AddObject("TimestampEntities", timestampEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RequiredAttributeTestEntities EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRequiredAttributeTestEntities(RequiredAttributeTestEntity requiredAttributeTestEntity)
        {
            base.AddObject("RequiredAttributeTestEntities", requiredAttributeTestEntity);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EntitiesWithNullFacetValuesForTimestampComparison EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEntitiesWithNullFacetValuesForTimestampComparison(EntityWithNullFacetValuesForTimestampComparison entityWithNullFacetValuesForTimestampComparison)
        {
            base.AddObject("EntitiesWithNullFacetValuesForTimestampComparison", entityWithNullFacetValuesForTimestampComparison);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeWithCTs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeWithCTs(EmployeeWithCT employeeWithCT)
        {
            base.AddObject("EmployeeWithCTs", employeeWithCT);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        /// <param name="contactName">Initial value of the ContactName property.</param>
        public static Customer CreateCustomer(global::System.String customerID, global::System.String contactName)
        {
            Customer customer = new Customer();
            customer.CustomerID = customerID;
            customer.ContactName = contactName;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                if (_CustomerID != value)
                {
                    OnCustomerIDChanging(value);
                    ReportPropertyChanging("CustomerID");
                    _CustomerID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("CustomerID");
                    OnCustomerIDChanged();
                }
            }
        }
        private global::System.String _CustomerID;
        partial void OnCustomerIDChanging(global::System.String value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContactName
        {
            get
            {
                return _ContactName;
            }
            set
            {
                OnContactNameChanging(value);
                ReportPropertyChanging("ContactName");
                _ContactName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ContactName");
                OnContactNameChanged();
            }
        }
        private global::System.String _ContactName;
        partial void OnContactNameChanging(global::System.String value);
        partial void OnContactNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static Employee CreateEmployee(global::System.Int32 employeeID, global::System.String firstName, global::System.String lastName)
        {
            Employee employee = new Employee();
            employee.EmployeeID = employeeID;
            employee.FirstName = firstName;
            employee.LastName = lastName;
            return employee;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="EmployeeWithCT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeWithCT : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeWithCT object.
        /// </summary>
        /// <param name="employeeID">Initial value of the EmployeeID property.</param>
        /// <param name="contactInfo">Initial value of the ContactInfo property.</param>
        public static EmployeeWithCT CreateEmployeeWithCT(global::System.Int32 employeeID, ContactInfoCT contactInfo)
        {
            EmployeeWithCT employeeWithCT = new EmployeeWithCT();
            employeeWithCT.EmployeeID = employeeID;
            employeeWithCT.ContactInfo = StructuralObject.VerifyComplexObjectIsNotNull(contactInfo, "ContactInfo");
            return employeeWithCT;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 EmployeeID
        {
            get
            {
                return _EmployeeID;
            }
            set
            {
                if (_EmployeeID != value)
                {
                    OnEmployeeIDChanging(value);
                    ReportPropertyChanging("EmployeeID");
                    _EmployeeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeeID");
                    OnEmployeeIDChanged();
                }
            }
        }
        private global::System.Int32 _EmployeeID;
        partial void OnEmployeeIDChanging(global::System.Int32 value);
        partial void OnEmployeeIDChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public ContactInfoCT ContactInfo
        {
            get
            {
                _ContactInfo = GetValidValue(_ContactInfo, "ContactInfo", false, _ContactInfoInitialized);
                _ContactInfoInitialized = true;
                return _ContactInfo;
            }
            set
            {
                OnContactInfoChanging(value);
                ReportPropertyChanging("ContactInfo");
                _ContactInfo = SetValidValue(_ContactInfo, value, "ContactInfo");
                _ContactInfoInitialized = true;
                ReportPropertyChanged("ContactInfo");
                OnContactInfoChanged();
            }
        }
        private ContactInfoCT _ContactInfo;
        private bool _ContactInfoInitialized;
        partial void OnContactInfoChanging(ContactInfoCT value);
        partial void OnContactInfoChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="EntityWithNullFacetValuesForTimestampComparison")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EntityWithNullFacetValuesForTimestampComparison : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EntityWithNullFacetValuesForTimestampComparison object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static EntityWithNullFacetValuesForTimestampComparison CreateEntityWithNullFacetValuesForTimestampComparison(global::System.Int32 id)
        {
            EntityWithNullFacetValuesForTimestampComparison entityWithNullFacetValuesForTimestampComparison = new EntityWithNullFacetValuesForTimestampComparison();
            entityWithNullFacetValuesForTimestampComparison.Id = id;
            return entityWithNullFacetValuesForTimestampComparison;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StringWithoutConcurrencyMode
        {
            get
            {
                return _StringWithoutConcurrencyMode;
            }
            set
            {
                OnStringWithoutConcurrencyModeChanging(value);
                ReportPropertyChanging("StringWithoutConcurrencyMode");
                _StringWithoutConcurrencyMode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StringWithoutConcurrencyMode");
                OnStringWithoutConcurrencyModeChanged();
            }
        }
        private global::System.String _StringWithoutConcurrencyMode;
        partial void OnStringWithoutConcurrencyModeChanging(global::System.String value);
        partial void OnStringWithoutConcurrencyModeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StringWithoutFixedLength
        {
            get
            {
                return _StringWithoutFixedLength;
            }
            set
            {
                OnStringWithoutFixedLengthChanging(value);
                ReportPropertyChanging("StringWithoutFixedLength");
                _StringWithoutFixedLength = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StringWithoutFixedLength");
                OnStringWithoutFixedLengthChanged();
            }
        }
        private global::System.String _StringWithoutFixedLength;
        partial void OnStringWithoutFixedLengthChanging(global::System.String value);
        partial void OnStringWithoutFixedLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StringWithoutMaxLength
        {
            get
            {
                return _StringWithoutMaxLength;
            }
            set
            {
                OnStringWithoutMaxLengthChanging(value);
                ReportPropertyChanging("StringWithoutMaxLength");
                _StringWithoutMaxLength = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StringWithoutMaxLength");
                OnStringWithoutMaxLengthChanged();
            }
        }
        private global::System.String _StringWithoutMaxLength;
        partial void OnStringWithoutMaxLengthChanging(global::System.String value);
        partial void OnStringWithoutMaxLengthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String StringWithoutComputed
        {
            get
            {
                return _StringWithoutComputed;
            }
            set
            {
                OnStringWithoutComputedChanging(value);
                ReportPropertyChanging("StringWithoutComputed");
                _StringWithoutComputed = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("StringWithoutComputed");
                OnStringWithoutComputedChanged();
            }
        }
        private global::System.String _StringWithoutComputed;
        partial void OnStringWithoutComputedChanging(global::System.String value);
        partial void OnStringWithoutComputedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ConcurrencyTimestamp
        {
            get
            {
                return _ConcurrencyTimestamp;
            }
            set
            {
                OnConcurrencyTimestampChanging(value);
                ReportPropertyChanging("ConcurrencyTimestamp");
                _ConcurrencyTimestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ConcurrencyTimestamp");
                OnConcurrencyTimestampChanged();
            }
        }
        private global::System.String _ConcurrencyTimestamp;
        partial void OnConcurrencyTimestampChanging(global::System.String value);
        partial void OnConcurrencyTimestampChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="RequiredAttributeTestEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RequiredAttributeTestEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RequiredAttributeTestEntity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="requiredString">Initial value of the RequiredString property.</param>
        /// <param name="requiredStringOverride">Initial value of the RequiredStringOverride property.</param>
        /// <param name="requiredInt32">Initial value of the RequiredInt32 property.</param>
        public static RequiredAttributeTestEntity CreateRequiredAttributeTestEntity(global::System.Int32 id, global::System.String requiredString, global::System.String requiredStringOverride, global::System.Int32 requiredInt32)
        {
            RequiredAttributeTestEntity requiredAttributeTestEntity = new RequiredAttributeTestEntity();
            requiredAttributeTestEntity.Id = id;
            requiredAttributeTestEntity.RequiredString = requiredString;
            requiredAttributeTestEntity.RequiredStringOverride = requiredStringOverride;
            requiredAttributeTestEntity.RequiredInt32 = requiredInt32;
            return requiredAttributeTestEntity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequiredString
        {
            get
            {
                return _RequiredString;
            }
            set
            {
                OnRequiredStringChanging(value);
                ReportPropertyChanging("RequiredString");
                _RequiredString = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RequiredString");
                OnRequiredStringChanged();
            }
        }
        private global::System.String _RequiredString;
        partial void OnRequiredStringChanging(global::System.String value);
        partial void OnRequiredStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RequiredStringOverride
        {
            get
            {
                return _RequiredStringOverride;
            }
            set
            {
                OnRequiredStringOverrideChanging(value);
                ReportPropertyChanging("RequiredStringOverride");
                _RequiredStringOverride = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RequiredStringOverride");
                OnRequiredStringOverrideChanged();
            }
        }
        private global::System.String _RequiredStringOverride;
        partial void OnRequiredStringOverrideChanging(global::System.String value);
        partial void OnRequiredStringOverrideChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RequiredInt32
        {
            get
            {
                return _RequiredInt32;
            }
            set
            {
                OnRequiredInt32Changing(value);
                ReportPropertyChanging("RequiredInt32");
                _RequiredInt32 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RequiredInt32");
                OnRequiredInt32Changed();
            }
        }
        private global::System.Int32 _RequiredInt32;
        partial void OnRequiredInt32Changing(global::System.Int32 value);
        partial void OnRequiredInt32Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OptionalString
        {
            get
            {
                return _OptionalString;
            }
            set
            {
                OnOptionalStringChanging(value);
                ReportPropertyChanging("OptionalString");
                _OptionalString = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OptionalString");
                OnOptionalStringChanged();
            }
        }
        private global::System.String _OptionalString;
        partial void OnOptionalStringChanging(global::System.String value);
        partial void OnOptionalStringChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OptionalInt32
        {
            get
            {
                return _OptionalInt32;
            }
            set
            {
                OnOptionalInt32Changing(value);
                ReportPropertyChanging("OptionalInt32");
                _OptionalInt32 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OptionalInt32");
                OnOptionalInt32Changed();
            }
        }
        private Nullable<global::System.Int32> _OptionalInt32;
        partial void OnOptionalInt32Changing(Nullable<global::System.Int32> value);
        partial void OnOptionalInt32Changed();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="TimestampEntity")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TimestampEntity : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TimestampEntity object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="timestamp">Initial value of the Timestamp property.</param>
        /// <param name="a">Initial value of the A property.</param>
        public static TimestampEntity CreateTimestampEntity(global::System.Int32 id, global::System.Byte[] timestamp, global::System.Int32 a)
        {
            TimestampEntity timestampEntity = new TimestampEntity();
            timestampEntity.Id = id;
            timestampEntity.Timestamp = timestamp;
            timestampEntity.A = a;
            return timestampEntity;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Timestamp
        {
            get
            {
                return StructuralObject.GetValidValue(_Timestamp);
            }
            set
            {
                OnTimestampChanging(value);
                ReportPropertyChanging("Timestamp");
                _Timestamp = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Timestamp");
                OnTimestampChanged();
            }
        }
        private global::System.Byte[] _Timestamp;
        partial void OnTimestampChanging(global::System.Byte[] value);
        partial void OnTimestampChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 A
        {
            get
            {
                return _A;
            }
            set
            {
                OnAChanging(value);
                ReportPropertyChanging("A");
                _A = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("A");
                OnAChanged();
            }
        }
        private global::System.Int32 _A;
        partial void OnAChanging(global::System.Int32 value);
        partial void OnAChanged();

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="AddressCT")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class AddressCT : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AddressCT object.
        /// </summary>
        /// <param name="addressLine">Initial value of the AddressLine property.</param>
        /// <param name="city">Initial value of the City property.</param>
        public static AddressCT CreateAddressCT(global::System.String addressLine, global::System.String city)
        {
            AddressCT addressCT = new AddressCT();
            addressCT.AddressLine = addressLine;
            addressCT.City = city;
            return addressCT;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String AddressLine
        {
            get
            {
                return _AddressLine;
            }
            set
            {
                OnAddressLineChanging(value);
                ReportPropertyChanging("AddressLine");
                _AddressLine = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("AddressLine");
                OnAddressLineChanged();
            }
        }
        private global::System.String _AddressLine;
        partial void OnAddressLineChanging(global::System.String value);
        partial void OnAddressLineChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="DataTests.Scenarios.EF.Northwind", Name="ContactInfoCT")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ContactInfoCT : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ContactInfoCT object.
        /// </summary>
        /// <param name="address">Initial value of the Address property.</param>
        /// <param name="homePhone">Initial value of the HomePhone property.</param>
        public static ContactInfoCT CreateContactInfoCT(AddressCT address, global::System.String homePhone)
        {
            ContactInfoCT contactInfoCT = new ContactInfoCT();
            contactInfoCT.Address = StructuralObject.VerifyComplexObjectIsNotNull(address, "Address");
            contactInfoCT.HomePhone = homePhone;
            return contactInfoCT;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String HomePhone
        {
            get
            {
                return _HomePhone;
            }
            set
            {
                OnHomePhoneChanging(value);
                ReportPropertyChanging("HomePhone");
                _HomePhone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("HomePhone");
                OnHomePhoneChanged();
            }
        }
        private global::System.String _HomePhone;
        partial void OnHomePhoneChanging(global::System.String value);
        partial void OnHomePhoneChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public AddressCT Address
        {
            get
            {
                _Address = GetValidValue(_Address, "Address", false, _AddressInitialized);
                _AddressInitialized = true;
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = SetValidValue(_Address, value, "Address");
                _AddressInitialized = true;
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private AddressCT _Address;
        private bool _AddressInitialized;
        partial void OnAddressChanging(AddressCT value);
        partial void OnAddressChanged();

        #endregion

    }

    #endregion

}
