<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Communication_NoChannelMustBeOpened" xml:space="preserve">
    <value>No channel should ever be opened with this host.</value>
  </data>
  <data name="Communication_NoDefaultAuthenticationScheme" xml:space="preserve">
    <value>No default authentication scheme exists.</value>
  </data>
  <data name="DomainDataServices_Selection_KeyNotSupported" xml:space="preserve">
    <value>Requests that attempt to access a single element using key values from a result set are not supported.</value>
  </data>
  <data name="DomainDataService_Enable_Client_Access_Require_Secure_Connection" xml:space="preserve">
    <value>EnableClientAccess attribute on the DomainService type requires secure connection.</value>
  </data>
  <data name="DomainDataService_General_Error" xml:space="preserve">
    <value>An error occurred while processing request for domain data services.</value>
  </data>
  <data name="DomainDataService_MEST_NotAllowed" xml:space="preserve">
    <value>Multiple resource sets per type are not allowed.</value>
  </data>
  <data name="DomainDataService_MultipleSegments_NotAllowed" xml:space="preserve">
    <value>Requests that have multiple segments are not allowed.</value>
  </data>
  <data name="DomainDataService_OperationError" xml:space="preserve">
    <value>An error occurred during execution of the DomainService operation. Inspect the OperationErrors property for more information.</value>
  </data>
  <data name="DomainDataService_Operation_Method_NotAllowed" xml:space="preserve">
    <value>The requested HTTP method is not allowed for the given DomainService operation.</value>
  </data>
  <data name="DomainDataService_Operation_NotFound" xml:space="preserve">
    <value>The DomainService method corresponding to the given request could not be found.</value>
  </data>
  <data name="DomainDataService_QueryOptions_NotAllowed" xml:space="preserve">
    <value>Query options are not allowed.</value>
  </data>
  <data name="DomainDataService_RequestParameter_SyntaxError" xml:space="preserve">
    <value>Syntax error while processing request parameter.</value>
  </data>
  <data name="DomainDataService_RequestUri_IncorrectBase" xml:space="preserve">
    <value>Request URI does not have the correct base URI.</value>
  </data>
  <data name="DomainDataService_RequestUri_SyntaxError" xml:space="preserve">
    <value>Syntax error in the request URI.</value>
  </data>
  <data name="DomainDataService_ResourceSets_Metadata_OnlyAllowedGet" xml:space="preserve">
    <value>Only HTTP GET requests are allowed for operations returning resource sets or service metadata documents.</value>
  </data>
  <data name="DomainDataService_Selection_Error" xml:space="preserve">
    <value>An error occurred while trying to select the DomainService operation corresponding to a request. See InnerException for details.</value>
  </data>
  <data name="HttpContextServiceHost_MalformedHeaderValue" xml:space="preserve">
    <value>Malformed value in request header.</value>
  </data>
  <data name="HttpProcessUtility_ClosingQuoteNotFound" xml:space="preserve">
    <value>Value for MIME type parameter '{0}' is incorrect because the closing quote character could not be found while the parameter value started with a quote character.</value>
  </data>
  <data name="HttpProcessUtility_EscapeCharAtEnd" xml:space="preserve">
    <value>Value for MIME type parameter '{0}' is incorrect because it terminated with escape character. Escape characters must always be followed by a character in a parameter value.</value>
  </data>
  <data name="HttpProcessUtility_EscapeCharWithoutQuotes" xml:space="preserve">
    <value>Value for MIME type parameter '{0}' is incorrect because it contained escape characters even though it was not quoted.</value>
  </data>
  <data name="HttpProcessUtility_MediaTypeMissingValue" xml:space="preserve">
    <value>Media type is missing a parameter value.</value>
  </data>
  <data name="HttpProcessUtility_MediaTypeRequiresSemicolonBeforeParameter" xml:space="preserve">
    <value>Media type requires a ';' character before a parameter definition.</value>
  </data>
  <data name="HttpProcessUtility_MediaTypeRequiresSlash" xml:space="preserve">
    <value>Media type requires a '/' character.</value>
  </data>
  <data name="HttpProcessUtility_MediaTypeRequiresSubType" xml:space="preserve">
    <value>Media type requires a subtype definition.</value>
  </data>
  <data name="HttpProcessUtility_MediaTypeUnspecified" xml:space="preserve">
    <value>Media type is unspecified.</value>
  </data>
  <data name="HttpProcessUtility_UnsupportedMediaType" xml:space="preserve">
    <value>Unsupported media type requested.</value>
  </data>
</root>